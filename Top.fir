;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Top : 
  module Control : 
    input clock : Clock
    input reset : Reset
    output io : {flip opcode : UInt<7>, validinst : UInt<1>, branch : UInt<1>, memread : UInt<1>, toreg : UInt<2>, add : UInt<1>, memwrite : UInt<1>, regwrite : UInt<1>, immediate : UInt<1>, alusrc1 : UInt<2>, jump : UInt<2>}
    
    node _T = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<6>("h033"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<5>("h013"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<2>("h03"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<6>("h023"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<7>("h063"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<6>("h037"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<5>("h017"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<7>("h06f"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_17 = eq(UInt<7>("h067"), _T_16) @[Lookup.scala 31:38]
    node _T_18 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_19 = eq(UInt<7>("h073"), _T_18) @[Lookup.scala 31:38]
    node _T_20 = mux(_T_19, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_21 = mux(_T_17, UInt<1>("h01"), _T_20) @[Lookup.scala 33:37]
    node _T_22 = mux(_T_15, UInt<1>("h01"), _T_21) @[Lookup.scala 33:37]
    node _T_23 = mux(_T_13, UInt<1>("h01"), _T_22) @[Lookup.scala 33:37]
    node _T_24 = mux(_T_11, UInt<1>("h01"), _T_23) @[Lookup.scala 33:37]
    node _T_25 = mux(_T_9, UInt<1>("h01"), _T_24) @[Lookup.scala 33:37]
    node _T_26 = mux(_T_7, UInt<1>("h01"), _T_25) @[Lookup.scala 33:37]
    node _T_27 = mux(_T_5, UInt<1>("h01"), _T_26) @[Lookup.scala 33:37]
    node _T_28 = mux(_T_3, UInt<1>("h01"), _T_27) @[Lookup.scala 33:37]
    node signals_0 = mux(_T_1, UInt<1>("h01"), _T_28) @[Lookup.scala 33:37]
    node _T_29 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_30 = mux(_T_17, UInt<1>("h00"), _T_29) @[Lookup.scala 33:37]
    node _T_31 = mux(_T_15, UInt<1>("h00"), _T_30) @[Lookup.scala 33:37]
    node _T_32 = mux(_T_13, UInt<1>("h00"), _T_31) @[Lookup.scala 33:37]
    node _T_33 = mux(_T_11, UInt<1>("h00"), _T_32) @[Lookup.scala 33:37]
    node _T_34 = mux(_T_9, UInt<1>("h01"), _T_33) @[Lookup.scala 33:37]
    node _T_35 = mux(_T_7, UInt<1>("h00"), _T_34) @[Lookup.scala 33:37]
    node _T_36 = mux(_T_5, UInt<1>("h00"), _T_35) @[Lookup.scala 33:37]
    node _T_37 = mux(_T_3, UInt<1>("h00"), _T_36) @[Lookup.scala 33:37]
    node signals_1 = mux(_T_1, UInt<1>("h00"), _T_37) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_17, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_15, UInt<1>("h00"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_13, UInt<1>("h00"), _T_40) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_11, UInt<1>("h00"), _T_41) @[Lookup.scala 33:37]
    node _T_43 = mux(_T_9, UInt<1>("h00"), _T_42) @[Lookup.scala 33:37]
    node _T_44 = mux(_T_7, UInt<1>("h00"), _T_43) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_5, UInt<1>("h01"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_3, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node signals_2 = mux(_T_1, UInt<1>("h00"), _T_46) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_19, UInt<2>("h03"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_17, UInt<2>("h02"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_15, UInt<2>("h02"), _T_48) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_13, UInt<1>("h00"), _T_49) @[Lookup.scala 33:37]
    node _T_51 = mux(_T_11, UInt<1>("h00"), _T_50) @[Lookup.scala 33:37]
    node _T_52 = mux(_T_9, UInt<1>("h00"), _T_51) @[Lookup.scala 33:37]
    node _T_53 = mux(_T_7, UInt<1>("h00"), _T_52) @[Lookup.scala 33:37]
    node _T_54 = mux(_T_5, UInt<1>("h01"), _T_53) @[Lookup.scala 33:37]
    node _T_55 = mux(_T_3, UInt<1>("h00"), _T_54) @[Lookup.scala 33:37]
    node signals_3 = mux(_T_1, UInt<1>("h00"), _T_55) @[Lookup.scala 33:37]
    node _T_56 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_57 = mux(_T_17, UInt<1>("h00"), _T_56) @[Lookup.scala 33:37]
    node _T_58 = mux(_T_15, UInt<1>("h00"), _T_57) @[Lookup.scala 33:37]
    node _T_59 = mux(_T_13, UInt<1>("h01"), _T_58) @[Lookup.scala 33:37]
    node _T_60 = mux(_T_11, UInt<1>("h01"), _T_59) @[Lookup.scala 33:37]
    node _T_61 = mux(_T_9, UInt<1>("h00"), _T_60) @[Lookup.scala 33:37]
    node _T_62 = mux(_T_7, UInt<1>("h01"), _T_61) @[Lookup.scala 33:37]
    node _T_63 = mux(_T_5, UInt<1>("h01"), _T_62) @[Lookup.scala 33:37]
    node _T_64 = mux(_T_3, UInt<1>("h00"), _T_63) @[Lookup.scala 33:37]
    node signals_4 = mux(_T_1, UInt<1>("h00"), _T_64) @[Lookup.scala 33:37]
    node _T_65 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_66 = mux(_T_17, UInt<1>("h00"), _T_65) @[Lookup.scala 33:37]
    node _T_67 = mux(_T_15, UInt<1>("h00"), _T_66) @[Lookup.scala 33:37]
    node _T_68 = mux(_T_13, UInt<1>("h00"), _T_67) @[Lookup.scala 33:37]
    node _T_69 = mux(_T_11, UInt<1>("h00"), _T_68) @[Lookup.scala 33:37]
    node _T_70 = mux(_T_9, UInt<1>("h00"), _T_69) @[Lookup.scala 33:37]
    node _T_71 = mux(_T_7, UInt<1>("h01"), _T_70) @[Lookup.scala 33:37]
    node _T_72 = mux(_T_5, UInt<1>("h00"), _T_71) @[Lookup.scala 33:37]
    node _T_73 = mux(_T_3, UInt<1>("h00"), _T_72) @[Lookup.scala 33:37]
    node signals_5 = mux(_T_1, UInt<1>("h00"), _T_73) @[Lookup.scala 33:37]
    node _T_74 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_75 = mux(_T_17, UInt<1>("h01"), _T_74) @[Lookup.scala 33:37]
    node _T_76 = mux(_T_15, UInt<1>("h00"), _T_75) @[Lookup.scala 33:37]
    node _T_77 = mux(_T_13, UInt<1>("h01"), _T_76) @[Lookup.scala 33:37]
    node _T_78 = mux(_T_11, UInt<1>("h01"), _T_77) @[Lookup.scala 33:37]
    node _T_79 = mux(_T_9, UInt<1>("h00"), _T_78) @[Lookup.scala 33:37]
    node _T_80 = mux(_T_7, UInt<1>("h01"), _T_79) @[Lookup.scala 33:37]
    node _T_81 = mux(_T_5, UInt<1>("h01"), _T_80) @[Lookup.scala 33:37]
    node _T_82 = mux(_T_3, UInt<1>("h01"), _T_81) @[Lookup.scala 33:37]
    node signals_6 = mux(_T_1, UInt<1>("h00"), _T_82) @[Lookup.scala 33:37]
    node _T_83 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_84 = mux(_T_17, UInt<1>("h01"), _T_83) @[Lookup.scala 33:37]
    node _T_85 = mux(_T_15, UInt<1>("h01"), _T_84) @[Lookup.scala 33:37]
    node _T_86 = mux(_T_13, UInt<1>("h01"), _T_85) @[Lookup.scala 33:37]
    node _T_87 = mux(_T_11, UInt<1>("h01"), _T_86) @[Lookup.scala 33:37]
    node _T_88 = mux(_T_9, UInt<1>("h00"), _T_87) @[Lookup.scala 33:37]
    node _T_89 = mux(_T_7, UInt<1>("h00"), _T_88) @[Lookup.scala 33:37]
    node _T_90 = mux(_T_5, UInt<1>("h01"), _T_89) @[Lookup.scala 33:37]
    node _T_91 = mux(_T_3, UInt<1>("h01"), _T_90) @[Lookup.scala 33:37]
    node signals_7 = mux(_T_1, UInt<1>("h01"), _T_91) @[Lookup.scala 33:37]
    node _T_92 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_93 = mux(_T_17, UInt<1>("h00"), _T_92) @[Lookup.scala 33:37]
    node _T_94 = mux(_T_15, UInt<1>("h01"), _T_93) @[Lookup.scala 33:37]
    node _T_95 = mux(_T_13, UInt<2>("h02"), _T_94) @[Lookup.scala 33:37]
    node _T_96 = mux(_T_11, UInt<1>("h01"), _T_95) @[Lookup.scala 33:37]
    node _T_97 = mux(_T_9, UInt<1>("h00"), _T_96) @[Lookup.scala 33:37]
    node _T_98 = mux(_T_7, UInt<1>("h00"), _T_97) @[Lookup.scala 33:37]
    node _T_99 = mux(_T_5, UInt<1>("h00"), _T_98) @[Lookup.scala 33:37]
    node _T_100 = mux(_T_3, UInt<1>("h00"), _T_99) @[Lookup.scala 33:37]
    node signals_8 = mux(_T_1, UInt<1>("h00"), _T_100) @[Lookup.scala 33:37]
    node _T_101 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_102 = mux(_T_17, UInt<2>("h03"), _T_101) @[Lookup.scala 33:37]
    node _T_103 = mux(_T_15, UInt<2>("h02"), _T_102) @[Lookup.scala 33:37]
    node _T_104 = mux(_T_13, UInt<1>("h00"), _T_103) @[Lookup.scala 33:37]
    node _T_105 = mux(_T_11, UInt<1>("h00"), _T_104) @[Lookup.scala 33:37]
    node _T_106 = mux(_T_9, UInt<1>("h00"), _T_105) @[Lookup.scala 33:37]
    node _T_107 = mux(_T_7, UInt<1>("h00"), _T_106) @[Lookup.scala 33:37]
    node _T_108 = mux(_T_5, UInt<1>("h00"), _T_107) @[Lookup.scala 33:37]
    node _T_109 = mux(_T_3, UInt<1>("h00"), _T_108) @[Lookup.scala 33:37]
    node signals_9 = mux(_T_1, UInt<1>("h00"), _T_109) @[Lookup.scala 33:37]
    io.validinst <= signals_0 @[control.scala 68:16]
    io.branch <= signals_1 @[control.scala 69:13]
    io.memread <= signals_2 @[control.scala 70:14]
    io.toreg <= signals_3 @[control.scala 71:12]
    io.add <= signals_4 @[control.scala 72:10]
    io.memwrite <= signals_5 @[control.scala 73:15]
    io.immediate <= signals_6 @[control.scala 74:16]
    io.regwrite <= signals_7 @[control.scala 75:15]
    io.alusrc1 <= signals_8 @[control.scala 76:14]
    io.jump <= signals_9 @[control.scala 77:11]
    
  module RegisterFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip readreg1 : UInt<5>, flip readreg2 : UInt<5>, flip writereg : UInt<5>, flip writedata : UInt<32>, flip wen : UInt<1>, readdata1 : UInt<32>, readdata2 : UInt<32>}
    
    reg regs : UInt<32>[32], clock @[register-file.scala 49:17]
    when io.wen : @[register-file.scala 52:17]
      regs[io.writereg] <= io.writedata @[register-file.scala 53:23]
      skip @[register-file.scala 52:17]
    io.readdata1 <= regs[io.readreg1] @[register-file.scala 58:16]
    io.readdata2 <= regs[io.readreg2] @[register-file.scala 59:16]
    
  module CSRRegFile : 
    input clock : Clock
    input reset : Reset
    output io : {flip illegal_inst : UInt<1>, flip retire_inst : UInt<1>, flip pc : UInt<32>, flip read_data : UInt<32>, flip inst : UInt<32>, flip immid : UInt<32>, read_illegal : UInt<1>, write_illegal : UInt<1>, system_illegal : UInt<1>, csr_stall : UInt<1>, eret : UInt<1>, evec : UInt<32>, write_data : UInt<32>, reg_write : UInt<1>, status : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, time : UInt<32>}
    
    io.time is invalid @[csr.scala 205:6]
    io.status.uie is invalid @[csr.scala 205:6]
    io.status.sie is invalid @[csr.scala 205:6]
    io.status.wpri4 is invalid @[csr.scala 205:6]
    io.status.mie is invalid @[csr.scala 205:6]
    io.status.upie is invalid @[csr.scala 205:6]
    io.status.spie is invalid @[csr.scala 205:6]
    io.status.wpri3 is invalid @[csr.scala 205:6]
    io.status.mpie is invalid @[csr.scala 205:6]
    io.status.spp is invalid @[csr.scala 205:6]
    io.status.wpri2 is invalid @[csr.scala 205:6]
    io.status.mpp is invalid @[csr.scala 205:6]
    io.status.fs is invalid @[csr.scala 205:6]
    io.status.xs is invalid @[csr.scala 205:6]
    io.status.mprv is invalid @[csr.scala 205:6]
    io.status.sum is invalid @[csr.scala 205:6]
    io.status.mxr is invalid @[csr.scala 205:6]
    io.status.tvm is invalid @[csr.scala 205:6]
    io.status.tw is invalid @[csr.scala 205:6]
    io.status.tsr is invalid @[csr.scala 205:6]
    io.status.wpri1 is invalid @[csr.scala 205:6]
    io.status.sd is invalid @[csr.scala 205:6]
    io.reg_write is invalid @[csr.scala 205:6]
    io.write_data is invalid @[csr.scala 205:6]
    io.evec is invalid @[csr.scala 205:6]
    io.eret is invalid @[csr.scala 205:6]
    io.csr_stall is invalid @[csr.scala 205:6]
    io.system_illegal is invalid @[csr.scala 205:6]
    io.write_illegal is invalid @[csr.scala 205:6]
    io.read_illegal is invalid @[csr.scala 205:6]
    io.immid is invalid @[csr.scala 205:6]
    io.inst is invalid @[csr.scala 205:6]
    io.read_data is invalid @[csr.scala 205:6]
    io.pc is invalid @[csr.scala 205:6]
    io.retire_inst is invalid @[csr.scala 205:6]
    io.illegal_inst is invalid @[csr.scala 205:6]
    wire _WIRE : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 207:44]
    _WIRE.uie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.sie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri4 <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.upie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.spie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri3 <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mpie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.spp <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri2 <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.mpp <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.fs <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.xs <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.mprv <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.sum <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mxr <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tvm <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tw <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tsr <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri1 <= UInt<8>("h00") @[csr.scala 207:44]
    _WIRE.sd <= UInt<1>("h00") @[csr.scala 207:44]
    wire reset_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}
    reset_mstatus.uie <= _WIRE.uie
    reset_mstatus.sie <= _WIRE.sie
    reset_mstatus.wpri4 <= _WIRE.wpri4
    reset_mstatus.mie <= _WIRE.mie
    reset_mstatus.upie <= _WIRE.upie
    reset_mstatus.spie <= _WIRE.spie
    reset_mstatus.wpri3 <= _WIRE.wpri3
    reset_mstatus.mpie <= _WIRE.mpie
    reset_mstatus.spp <= _WIRE.spp
    reset_mstatus.wpri2 <= _WIRE.wpri2
    reset_mstatus.mpp <= _WIRE.mpp
    reset_mstatus.fs <= _WIRE.fs
    reset_mstatus.xs <= _WIRE.xs
    reset_mstatus.mprv <= _WIRE.mprv
    reset_mstatus.sum <= _WIRE.sum
    reset_mstatus.mxr <= _WIRE.mxr
    reset_mstatus.tvm <= _WIRE.tvm
    reset_mstatus.tw <= _WIRE.tw
    reset_mstatus.tsr <= _WIRE.tsr
    reset_mstatus.wpri1 <= _WIRE.wpri1
    reset_mstatus.sd <= _WIRE.sd
    reset_mstatus.mpp <= UInt<2>("h03") @[csr.scala 208:21]
    reset_mstatus.mie <= UInt<1>("h01") @[csr.scala 209:21]
    reg reg_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, reset_mstatus)) @[csr.scala 212:28]
    reg reg_mepc : UInt<32>, clock @[csr.scala 214:21]
    wire _WIRE_1 : {interrupt : UInt<1>, exceptioncode : UInt<31>} @[csr.scala 216:40]
    _WIRE_1.exceptioncode <= UInt<31>("h00") @[csr.scala 216:40]
    _WIRE_1.interrupt <= UInt<1>("h00") @[csr.scala 216:40]
    reg reg_mcause : {interrupt : UInt<1>, exceptioncode : UInt<31>}, clock with : (reset => (reset, _WIRE_1)) @[csr.scala 216:27]
    reg reg_mtval : UInt<32>, clock @[csr.scala 218:22]
    reg reg_mscratch : UInt<32>, clock @[csr.scala 220:25]
    reg reg_mtimecmp : UInt<64>, clock @[csr.scala 222:25]
    reg reg_medeleg : UInt<32>, clock @[csr.scala 226:24]
    wire _WIRE_2 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 229:37]
    _WIRE_2.usix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.ssix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri4 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.msix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.utix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.stix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri3 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.mtix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.ueix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.seix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri2 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.meix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri1 <= UInt<20>("h00") @[csr.scala 229:37]
    reg reg_mip : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _WIRE_2)) @[csr.scala 229:24]
    wire _WIRE_3 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 231:37]
    _WIRE_3.usix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.ssix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri4 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.msix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.utix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.stix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri3 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.mtix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.ueix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.seix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri2 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.meix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri1 <= UInt<20>("h00") @[csr.scala 231:37]
    reg reg_mie : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _WIRE_3)) @[csr.scala 231:24]
    reg reg_wfi : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 234:24]
    wire _WIRE_4 : {base : UInt<30>, mode : UInt<2>} @[csr.scala 236:39]
    _WIRE_4.mode <= UInt<2>("h00") @[csr.scala 236:39]
    _WIRE_4.base <= UInt<30>("h00") @[csr.scala 236:39]
    reg reg_mtvec : {base : UInt<30>, mode : UInt<2>}, clock with : (reset => (reset, _WIRE_4)) @[csr.scala 236:26]
    reg lo : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T = add(lo, UInt<1>("h01")) @[csr.scala 544:33]
    lo <= _T @[csr.scala 545:9]
    reg hi : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_1 = bits(_T, 6, 6) @[csr.scala 549:20]
    when _T_1 : @[csr.scala 549:34]
      node _T_2 = add(hi, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_3 = tail(_T_2, 1) @[csr.scala 549:43]
      hi <= _T_3 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    reg lo_1 : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T_5 = add(lo_1, io.retire_inst) @[csr.scala 544:33]
    lo_1 <= _T_5 @[csr.scala 545:9]
    reg hi_1 : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_6 = bits(_T_5, 6, 6) @[csr.scala 549:20]
    when _T_6 : @[csr.scala 549:34]
      node _T_7 = add(hi_1, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_8 = tail(_T_7, 1) @[csr.scala 549:43]
      hi_1 <= _T_8 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_9 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    wire _WIRE_5 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 242:49]
    _WIRE_5.cy <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.tmzero <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.ir <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm3 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm4 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm5 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm6 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm7 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm8 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm9 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm10 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm11 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm12 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm13 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm14 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm15 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm16 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm17 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm18 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm19 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm20 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm21 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm22 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm23 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm24 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm25 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm26 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm27 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm28 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm29 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm30 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm31 <= UInt<1>("h00") @[csr.scala 242:49]
    reg reg_mcounterinhibit : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _WIRE_5)) @[csr.scala 242:36]
    wire _WIRE_6 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 244:44]
    _WIRE_6.cy <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.tmzero <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.ir <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm3 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm4 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm5 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm6 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm7 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm8 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm9 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm10 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm11 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm12 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm13 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm14 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm15 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm16 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm17 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm18 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm19 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm20 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm21 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm22 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm23 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm24 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm25 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm26 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm27 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm28 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm29 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm30 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm31 <= UInt<1>("h00") @[csr.scala 244:44]
    reg reg_mcounteren : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _WIRE_6)) @[csr.scala 244:31]
    node lo_lo_lo = cat(io.status.sie, io.status.uie) @[csr.scala 246:38]
    node lo_lo_hi_hi = cat(io.status.upie, io.status.mie) @[csr.scala 246:38]
    node lo_lo_hi = cat(lo_lo_hi_hi, io.status.wpri4) @[csr.scala 246:38]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[csr.scala 246:38]
    node lo_hi_lo = cat(io.status.wpri3, io.status.spie) @[csr.scala 246:38]
    node lo_hi_hi_hi = cat(io.status.wpri2, io.status.spp) @[csr.scala 246:38]
    node lo_hi_hi = cat(lo_hi_hi_hi, io.status.mpie) @[csr.scala 246:38]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[csr.scala 246:38]
    node lo_2 = cat(lo_hi, lo_lo) @[csr.scala 246:38]
    node hi_lo_lo = cat(io.status.fs, io.status.mpp) @[csr.scala 246:38]
    node hi_lo_hi_hi = cat(io.status.sum, io.status.mprv) @[csr.scala 246:38]
    node hi_lo_hi = cat(hi_lo_hi_hi, io.status.xs) @[csr.scala 246:38]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[csr.scala 246:38]
    node hi_hi_lo_hi = cat(io.status.tw, io.status.tvm) @[csr.scala 246:38]
    node hi_hi_lo = cat(hi_hi_lo_hi, io.status.mxr) @[csr.scala 246:38]
    node hi_hi_hi_hi = cat(io.status.sd, io.status.wpri1) @[csr.scala 246:38]
    node hi_hi_hi = cat(hi_hi_hi_hi, io.status.tsr) @[csr.scala 246:38]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[csr.scala 246:38]
    node hi_2 = cat(hi_hi, hi_lo) @[csr.scala 246:38]
    node read_mstatus = cat(hi_2, lo_2) @[csr.scala 246:38]
    wire _WIRE_7 : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>} @[csr.scala 253:39]
    _WIRE_7.extensions <= UInt<26>("h010") @[csr.scala 253:39]
    _WIRE_7.wlrl <= UInt<4>("h00") @[csr.scala 253:39]
    _WIRE_7.mxl <= UInt<2>("h00") @[csr.scala 253:39]
    reg reg_misa : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>}, clock with : (reset => (reset, _WIRE_7)) @[csr.scala 253:25]
    wire _WIRE_8 : {bank : UInt<25>, offset : UInt<7>} @[csr.scala 255:43]
    _WIRE_8.offset <= UInt<7>("h00") @[csr.scala 255:43]
    _WIRE_8.bank <= UInt<25>("h00") @[csr.scala 255:43]
    reg reg_mvendorid : {bank : UInt<25>, offset : UInt<7>}, clock with : (reset => (reset, _WIRE_8)) @[csr.scala 255:30]
    node lo_lo_lo_lo = cat(reg_mcounterinhibit.tmzero, reg_mcounterinhibit.cy) @[csr.scala 260:50]
    node lo_lo_lo_hi = cat(reg_mcounterinhibit.hpm3, reg_mcounterinhibit.ir) @[csr.scala 260:50]
    node lo_lo_lo_1 = cat(lo_lo_lo_hi, lo_lo_lo_lo) @[csr.scala 260:50]
    node lo_lo_hi_lo = cat(reg_mcounterinhibit.hpm5, reg_mcounterinhibit.hpm4) @[csr.scala 260:50]
    node lo_lo_hi_hi_1 = cat(reg_mcounterinhibit.hpm7, reg_mcounterinhibit.hpm6) @[csr.scala 260:50]
    node lo_lo_hi_1 = cat(lo_lo_hi_hi_1, lo_lo_hi_lo) @[csr.scala 260:50]
    node lo_lo_1 = cat(lo_lo_hi_1, lo_lo_lo_1) @[csr.scala 260:50]
    node lo_hi_lo_lo = cat(reg_mcounterinhibit.hpm9, reg_mcounterinhibit.hpm8) @[csr.scala 260:50]
    node lo_hi_lo_hi = cat(reg_mcounterinhibit.hpm11, reg_mcounterinhibit.hpm10) @[csr.scala 260:50]
    node lo_hi_lo_1 = cat(lo_hi_lo_hi, lo_hi_lo_lo) @[csr.scala 260:50]
    node lo_hi_hi_lo = cat(reg_mcounterinhibit.hpm13, reg_mcounterinhibit.hpm12) @[csr.scala 260:50]
    node lo_hi_hi_hi_1 = cat(reg_mcounterinhibit.hpm15, reg_mcounterinhibit.hpm14) @[csr.scala 260:50]
    node lo_hi_hi_1 = cat(lo_hi_hi_hi_1, lo_hi_hi_lo) @[csr.scala 260:50]
    node lo_hi_1 = cat(lo_hi_hi_1, lo_hi_lo_1) @[csr.scala 260:50]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[csr.scala 260:50]
    node hi_lo_lo_lo = cat(reg_mcounterinhibit.hpm17, reg_mcounterinhibit.hpm16) @[csr.scala 260:50]
    node hi_lo_lo_hi = cat(reg_mcounterinhibit.hpm19, reg_mcounterinhibit.hpm18) @[csr.scala 260:50]
    node hi_lo_lo_1 = cat(hi_lo_lo_hi, hi_lo_lo_lo) @[csr.scala 260:50]
    node hi_lo_hi_lo = cat(reg_mcounterinhibit.hpm21, reg_mcounterinhibit.hpm20) @[csr.scala 260:50]
    node hi_lo_hi_hi_1 = cat(reg_mcounterinhibit.hpm23, reg_mcounterinhibit.hpm22) @[csr.scala 260:50]
    node hi_lo_hi_1 = cat(hi_lo_hi_hi_1, hi_lo_hi_lo) @[csr.scala 260:50]
    node hi_lo_1 = cat(hi_lo_hi_1, hi_lo_lo_1) @[csr.scala 260:50]
    node hi_hi_lo_lo = cat(reg_mcounterinhibit.hpm25, reg_mcounterinhibit.hpm24) @[csr.scala 260:50]
    node hi_hi_lo_hi_1 = cat(reg_mcounterinhibit.hpm27, reg_mcounterinhibit.hpm26) @[csr.scala 260:50]
    node hi_hi_lo_1 = cat(hi_hi_lo_hi_1, hi_hi_lo_lo) @[csr.scala 260:50]
    node hi_hi_hi_lo = cat(reg_mcounterinhibit.hpm29, reg_mcounterinhibit.hpm28) @[csr.scala 260:50]
    node hi_hi_hi_hi_1 = cat(reg_mcounterinhibit.hpm31, reg_mcounterinhibit.hpm30) @[csr.scala 260:50]
    node hi_hi_hi_1 = cat(hi_hi_hi_hi_1, hi_hi_hi_lo) @[csr.scala 260:50]
    node hi_hi_1 = cat(hi_hi_hi_1, hi_hi_lo_1) @[csr.scala 260:50]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[csr.scala 260:50]
    node _T_10 = cat(hi_3, lo_3) @[csr.scala 260:50]
    node hi_4 = cat(reg_misa.mxl, reg_misa.wlrl) @[csr.scala 266:28]
    node _T_11 = cat(hi_4, reg_misa.extensions) @[csr.scala 266:28]
    node lo_lo_hi_2 = cat(reg_mip.wpri4, reg_mip.ssix) @[csr.scala 269:32]
    node lo_lo_2 = cat(lo_lo_hi_2, reg_mip.usix) @[csr.scala 269:32]
    node lo_hi_hi_2 = cat(reg_mip.stix, reg_mip.utix) @[csr.scala 269:32]
    node lo_hi_2 = cat(lo_hi_hi_2, reg_mip.msix) @[csr.scala 269:32]
    node lo_4 = cat(lo_hi_2, lo_lo_2) @[csr.scala 269:32]
    node hi_lo_hi_2 = cat(reg_mip.ueix, reg_mip.mtix) @[csr.scala 269:32]
    node hi_lo_2 = cat(hi_lo_hi_2, reg_mip.wpri3) @[csr.scala 269:32]
    node hi_hi_lo_2 = cat(reg_mip.wpri2, reg_mip.seix) @[csr.scala 269:32]
    node hi_hi_hi_2 = cat(reg_mip.wpri1, reg_mip.meix) @[csr.scala 269:32]
    node hi_hi_2 = cat(hi_hi_hi_2, hi_hi_lo_2) @[csr.scala 269:32]
    node hi_5 = cat(hi_hi_2, hi_lo_2) @[csr.scala 269:32]
    node _T_12 = cat(hi_5, lo_4) @[csr.scala 269:32]
    node lo_lo_hi_3 = cat(reg_mie.wpri4, reg_mie.ssix) @[csr.scala 270:32]
    node lo_lo_3 = cat(lo_lo_hi_3, reg_mie.usix) @[csr.scala 270:32]
    node lo_hi_hi_3 = cat(reg_mie.stix, reg_mie.utix) @[csr.scala 270:32]
    node lo_hi_3 = cat(lo_hi_hi_3, reg_mie.msix) @[csr.scala 270:32]
    node lo_5 = cat(lo_hi_3, lo_lo_3) @[csr.scala 270:32]
    node hi_lo_hi_3 = cat(reg_mie.ueix, reg_mie.mtix) @[csr.scala 270:32]
    node hi_lo_3 = cat(hi_lo_hi_3, reg_mie.wpri3) @[csr.scala 270:32]
    node hi_hi_lo_3 = cat(reg_mie.wpri2, reg_mie.seix) @[csr.scala 270:32]
    node hi_hi_hi_3 = cat(reg_mie.wpri1, reg_mie.meix) @[csr.scala 270:32]
    node hi_hi_3 = cat(hi_hi_hi_3, hi_hi_lo_3) @[csr.scala 270:32]
    node hi_6 = cat(hi_hi_3, hi_lo_3) @[csr.scala 270:32]
    node _T_13 = cat(hi_6, lo_5) @[csr.scala 270:32]
    node _T_14 = cat(reg_mcause.interrupt, reg_mcause.exceptioncode) @[csr.scala 274:38]
    wire cmd : UInt<3>
    cmd <= UInt<3>("h03")
    node _T_15 = bits(io.inst, 6, 0) @[csr.scala 284:16]
    node _T_16 = eq(_T_15, UInt<7>("h073")) @[csr.scala 284:23]
    when _T_16 : @[csr.scala 284:42]
      node _T_17 = bits(io.inst, 14, 12) @[csr.scala 285:19]
      node _T_18 = eq(UInt<2>("h03"), _T_17) @[Conditional.scala 37:30]
      when _T_18 : @[Conditional.scala 40:58]
        cmd <= UInt<3>("h03") @[csr.scala 287:13]
        io.reg_write <= UInt<1>("h01") @[csr.scala 288:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_19 = eq(UInt<3>("h07"), _T_17) @[Conditional.scala 37:30]
        when _T_19 : @[Conditional.scala 39:67]
          cmd <= UInt<3>("h03") @[csr.scala 291:13]
          io.reg_write <= UInt<1>("h01") @[csr.scala 292:22]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_20 = eq(UInt<2>("h02"), _T_17) @[Conditional.scala 37:30]
          when _T_20 : @[Conditional.scala 39:67]
            cmd <= UInt<3>("h02") @[csr.scala 295:13]
            io.reg_write <= UInt<1>("h01") @[csr.scala 296:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_21 = eq(UInt<3>("h06"), _T_17) @[Conditional.scala 37:30]
            when _T_21 : @[Conditional.scala 39:67]
              cmd <= UInt<3>("h02") @[csr.scala 299:13]
              io.reg_write <= UInt<1>("h01") @[csr.scala 300:22]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_22 = eq(UInt<1>("h01"), _T_17) @[Conditional.scala 37:30]
              when _T_22 : @[Conditional.scala 39:67]
                cmd <= UInt<3>("h01") @[csr.scala 303:13]
                io.reg_write <= UInt<1>("h01") @[csr.scala 304:22]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_23 = eq(UInt<3>("h05"), _T_17) @[Conditional.scala 37:30]
                when _T_23 : @[Conditional.scala 39:67]
                  cmd <= UInt<3>("h01") @[csr.scala 307:13]
                  io.reg_write <= UInt<1>("h01") @[csr.scala 308:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_24 = eq(UInt<1>("h00"), _T_17) @[Conditional.scala 37:30]
                  when _T_24 : @[Conditional.scala 39:67]
                    cmd <= UInt<3>("h04") @[csr.scala 311:13]
                    io.reg_write <= UInt<1>("h00") @[csr.scala 312:22]
                    skip @[Conditional.scala 39:67]
      skip @[csr.scala 284:42]
    else : @[csr.scala 315:14]
      cmd <= UInt<3>("h00") @[csr.scala 316:9]
      io.reg_write <= UInt<1>("h00") @[csr.scala 317:18]
      skip @[csr.scala 315:14]
    node csr = bits(io.inst, 31, 20) @[csr.scala 320:20]
    node system_insn = eq(cmd, UInt<3>("h04")) @[csr.scala 321:25]
    node _T_25 = neq(cmd, UInt<3>("h00")) @[csr.scala 322:21]
    node _T_26 = eq(system_insn, UInt<1>("h00")) @[csr.scala 322:40]
    node cpu_ren = and(_T_25, _T_26) @[csr.scala 322:37]
    node _T_27 = eq(csr, UInt<10>("h0320")) @[csr.scala 327:66]
    node _T_28 = eq(csr, UInt<12>("h0b00")) @[csr.scala 327:66]
    node _T_29 = eq(csr, UInt<12>("h0b02")) @[csr.scala 327:66]
    node _T_30 = eq(csr, UInt<12>("h0f13")) @[csr.scala 327:66]
    node _T_31 = eq(csr, UInt<12>("h0f12")) @[csr.scala 327:66]
    node _T_32 = eq(csr, UInt<12>("h0f11")) @[csr.scala 327:66]
    node _T_33 = eq(csr, UInt<10>("h0301")) @[csr.scala 327:66]
    node _T_34 = eq(csr, UInt<10>("h0300")) @[csr.scala 327:66]
    node _T_35 = eq(csr, UInt<10>("h0305")) @[csr.scala 327:66]
    node _T_36 = eq(csr, UInt<10>("h0344")) @[csr.scala 327:66]
    node _T_37 = eq(csr, UInt<10>("h0304")) @[csr.scala 327:66]
    node _T_38 = eq(csr, UInt<10>("h0340")) @[csr.scala 327:66]
    node _T_39 = eq(csr, UInt<10>("h0341")) @[csr.scala 327:66]
    node _T_40 = eq(csr, UInt<10>("h0343")) @[csr.scala 327:66]
    node _T_41 = eq(csr, UInt<10>("h0342")) @[csr.scala 327:66]
    node _T_42 = eq(csr, UInt<12>("h0f14")) @[csr.scala 327:66]
    node _T_43 = eq(csr, UInt<10>("h0302")) @[csr.scala 327:66]
    node _T_44 = eq(csr, UInt<12>("h0b80")) @[csr.scala 327:66]
    node _T_45 = eq(csr, UInt<12>("h0b82")) @[csr.scala 327:66]
    node _T_46 = bits(csr, 9, 8) @[csr.scala 328:44]
    node priv_sufficient = geq(UInt<2>("h03"), _T_46) @[csr.scala 328:38]
    node _T_47 = bits(csr, 11, 10) @[csr.scala 329:22]
    node read_only = andr(_T_47) @[csr.scala 329:30]
    node _T_48 = neq(cmd, UInt<3>("h05")) @[csr.scala 330:32]
    node _T_49 = and(cpu_ren, _T_48) @[csr.scala 330:25]
    node cpu_wen = and(_T_49, priv_sufficient) @[csr.scala 330:49]
    node _T_50 = eq(read_only, UInt<1>("h00")) @[csr.scala 331:24]
    node wen = and(cpu_wen, _T_50) @[csr.scala 331:21]
    node _T_51 = bits(io.inst, 14, 14) @[csr.scala 332:84]
    node _T_52 = mux(_T_51, io.immid, io.read_data) @[csr.scala 332:76]
    node _T_53 = eq(cmd, UInt<3>("h02")) @[csr.scala 534:46]
    node _T_54 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:46]
    node _T_55 = or(_T_53, _T_54) @[csr.scala 534:61]
    node _T_56 = mux(_T_55, io.write_data, UInt<1>("h00")) @[csr.scala 534:5]
    node _T_57 = or(_T_56, _T_52) @[csr.scala 534:79]
    node _T_58 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:99]
    node _T_59 = mux(_T_58, _T_52, UInt<1>("h00")) @[csr.scala 534:94]
    node _T_60 = not(_T_59) @[csr.scala 534:90]
    node wdata = and(_T_57, _T_60) @[csr.scala 534:88]
    node _T_61 = bits(csr, 2, 0) @[csr.scala 335:26]
    node opcode = dshl(UInt<1>("h01"), _T_61) @[csr.scala 335:20]
    node _T_62 = bits(opcode, 0, 0) @[csr.scala 336:40]
    node insn_call = and(system_insn, _T_62) @[csr.scala 336:31]
    node _T_63 = bits(opcode, 1, 1) @[csr.scala 337:41]
    node insn_break = and(system_insn, _T_63) @[csr.scala 337:32]
    node _T_64 = bits(opcode, 2, 2) @[csr.scala 338:39]
    node _T_65 = and(system_insn, _T_64) @[csr.scala 338:30]
    node insn_ret = and(_T_65, priv_sufficient) @[csr.scala 338:43]
    node _T_66 = bits(opcode, 5, 5) @[csr.scala 340:39]
    node _T_67 = and(system_insn, _T_66) @[csr.scala 340:30]
    node insn_wfi = and(_T_67, priv_sufficient) @[csr.scala 340:43]
    node _T_68 = bits(csr, 9, 8) @[csr.scala 343:31]
    node _T_69 = lt(UInt<2>("h03"), _T_68) @[csr.scala 343:26]
    node _T_70 = eq(csr, UInt<10>("h0320")) @[csr.scala 342:99]
    node _T_71 = eq(csr, UInt<12>("h0b00")) @[csr.scala 342:99]
    node _T_72 = eq(csr, UInt<12>("h0b02")) @[csr.scala 342:99]
    node _T_73 = eq(csr, UInt<12>("h0f13")) @[csr.scala 342:99]
    node _T_74 = eq(csr, UInt<12>("h0f12")) @[csr.scala 342:99]
    node _T_75 = eq(csr, UInt<12>("h0f11")) @[csr.scala 342:99]
    node _T_76 = eq(csr, UInt<10>("h0301")) @[csr.scala 342:99]
    node _T_77 = eq(csr, UInt<10>("h0300")) @[csr.scala 342:99]
    node _T_78 = eq(csr, UInt<10>("h0305")) @[csr.scala 342:99]
    node _T_79 = eq(csr, UInt<10>("h0344")) @[csr.scala 342:99]
    node _T_80 = eq(csr, UInt<10>("h0304")) @[csr.scala 342:99]
    node _T_81 = eq(csr, UInt<10>("h0340")) @[csr.scala 342:99]
    node _T_82 = eq(csr, UInt<10>("h0341")) @[csr.scala 342:99]
    node _T_83 = eq(csr, UInt<10>("h0343")) @[csr.scala 342:99]
    node _T_84 = eq(csr, UInt<10>("h0342")) @[csr.scala 342:99]
    node _T_85 = eq(csr, UInt<12>("h0f14")) @[csr.scala 342:99]
    node _T_86 = eq(csr, UInt<10>("h0302")) @[csr.scala 342:99]
    node _T_87 = eq(csr, UInt<12>("h0b80")) @[csr.scala 342:99]
    node _T_88 = eq(csr, UInt<12>("h0b82")) @[csr.scala 342:99]
    node _T_89 = or(_T_70, _T_71) @[csr.scala 342:119]
    node _T_90 = or(_T_89, _T_72) @[csr.scala 342:119]
    node _T_91 = or(_T_90, _T_73) @[csr.scala 342:119]
    node _T_92 = or(_T_91, _T_74) @[csr.scala 342:119]
    node _T_93 = or(_T_92, _T_75) @[csr.scala 342:119]
    node _T_94 = or(_T_93, _T_76) @[csr.scala 342:119]
    node _T_95 = or(_T_94, _T_77) @[csr.scala 342:119]
    node _T_96 = or(_T_95, _T_78) @[csr.scala 342:119]
    node _T_97 = or(_T_96, _T_79) @[csr.scala 342:119]
    node _T_98 = or(_T_97, _T_80) @[csr.scala 342:119]
    node _T_99 = or(_T_98, _T_81) @[csr.scala 342:119]
    node _T_100 = or(_T_99, _T_82) @[csr.scala 342:119]
    node _T_101 = or(_T_100, _T_83) @[csr.scala 342:119]
    node _T_102 = or(_T_101, _T_84) @[csr.scala 342:119]
    node _T_103 = or(_T_102, _T_85) @[csr.scala 342:119]
    node _T_104 = or(_T_103, _T_86) @[csr.scala 342:119]
    node _T_105 = or(_T_104, _T_87) @[csr.scala 342:119]
    node _T_106 = or(_T_105, _T_88) @[csr.scala 342:119]
    node _T_107 = eq(_T_106, UInt<1>("h00")) @[csr.scala 343:40]
    node _T_108 = or(_T_69, _T_107) @[csr.scala 343:37]
    io.read_illegal <= _T_108 @[csr.scala 343:19]
    node _T_109 = bits(csr, 11, 10) @[csr.scala 344:26]
    node _T_110 = andr(_T_109) @[csr.scala 344:34]
    io.write_illegal <= _T_110 @[csr.scala 344:20]
    node _T_111 = bits(csr, 9, 8) @[csr.scala 345:33]
    node _T_112 = lt(UInt<2>("h03"), _T_111) @[csr.scala 345:28]
    io.system_illegal <= _T_112 @[csr.scala 345:21]
    io.status.uie <= reg_mstatus.uie @[csr.scala 347:13]
    io.status.sie <= reg_mstatus.sie @[csr.scala 347:13]
    io.status.wpri4 <= reg_mstatus.wpri4 @[csr.scala 347:13]
    io.status.mie <= reg_mstatus.mie @[csr.scala 347:13]
    io.status.upie <= reg_mstatus.upie @[csr.scala 347:13]
    io.status.spie <= reg_mstatus.spie @[csr.scala 347:13]
    io.status.wpri3 <= reg_mstatus.wpri3 @[csr.scala 347:13]
    io.status.mpie <= reg_mstatus.mpie @[csr.scala 347:13]
    io.status.spp <= reg_mstatus.spp @[csr.scala 347:13]
    io.status.wpri2 <= reg_mstatus.wpri2 @[csr.scala 347:13]
    io.status.mpp <= reg_mstatus.mpp @[csr.scala 347:13]
    io.status.fs <= reg_mstatus.fs @[csr.scala 347:13]
    io.status.xs <= reg_mstatus.xs @[csr.scala 347:13]
    io.status.mprv <= reg_mstatus.mprv @[csr.scala 347:13]
    io.status.sum <= reg_mstatus.sum @[csr.scala 347:13]
    io.status.mxr <= reg_mstatus.mxr @[csr.scala 347:13]
    io.status.tvm <= reg_mstatus.tvm @[csr.scala 347:13]
    io.status.tw <= reg_mstatus.tw @[csr.scala 347:13]
    io.status.tsr <= reg_mstatus.tsr @[csr.scala 347:13]
    io.status.wpri1 <= reg_mstatus.wpri1 @[csr.scala 347:13]
    io.status.sd <= reg_mstatus.sd @[csr.scala 347:13]
    node _T_113 = or(insn_call, insn_break) @[csr.scala 349:24]
    node _T_114 = or(_T_113, insn_ret) @[csr.scala 349:38]
    io.eret <= _T_114 @[csr.scala 349:11]
    when io.illegal_inst : @[csr.scala 352:26]
      node _T_115 = and(UInt<2>("h02"), UInt<32>("h080000000")) @[csr.scala 353:57]
      reg_mcause.interrupt <= _T_115 @[csr.scala 353:26]
      node _T_116 = and(UInt<2>("h02"), UInt<31>("h07fffffff")) @[csr.scala 354:61]
      reg_mcause.exceptioncode <= _T_116 @[csr.scala 354:30]
      io.evec <= UInt<32>("h080000000") @[csr.scala 355:13]
      reg_mepc <= io.pc @[csr.scala 356:14]
      skip @[csr.scala 352:26]
    node _T_117 = geq(_T_4, reg_mtimecmp) @[csr.scala 381:25]
    when _T_117 : @[csr.scala 381:42]
      reg_mip.mtix <= UInt<1>("h01") @[csr.scala 382:20]
      skip @[csr.scala 381:42]
    node _T_118 = bits(csr, 10, 10) @[csr.scala 386:25]
    node _T_119 = eq(_T_118, UInt<1>("h00")) @[csr.scala 386:21]
    node _T_120 = and(insn_ret, _T_119) @[csr.scala 386:18]
    when _T_120 : @[csr.scala 386:31]
      reg_mstatus.mie <= reg_mstatus.mpie @[csr.scala 387:21]
      reg_mstatus.mpie <= UInt<1>("h01") @[csr.scala 388:22]
      io.evec <= reg_mepc @[csr.scala 389:13]
      skip @[csr.scala 386:31]
    when insn_call : @[csr.scala 393:18]
      io.evec <= UInt<32>("h080000004") @[csr.scala 394:13]
      node _T_121 = and(UInt<4>("h0b"), UInt<32>("h080000000")) @[csr.scala 395:51]
      reg_mcause.interrupt <= _T_121 @[csr.scala 395:26]
      node _T_122 = and(UInt<4>("h0b"), UInt<31>("h07fffffff")) @[csr.scala 396:55]
      reg_mcause.exceptioncode <= _T_122 @[csr.scala 396:30]
      skip @[csr.scala 393:18]
    when insn_break : @[csr.scala 400:19]
      io.evec <= UInt<32>("h080000008") @[csr.scala 401:13]
      node _T_123 = and(UInt<2>("h03"), UInt<32>("h080000000")) @[csr.scala 402:48]
      reg_mcause.interrupt <= _T_123 @[csr.scala 402:26]
      node _T_124 = and(UInt<2>("h03"), UInt<31>("h07fffffff")) @[csr.scala 403:52]
      reg_mcause.exceptioncode <= _T_124 @[csr.scala 403:30]
      skip @[csr.scala 400:19]
    io.time <= _T_4 @[csr.scala 406:11]
    io.csr_stall <= reg_wfi @[csr.scala 407:16]
    node _T_125 = mux(_T_27, _T_10, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_126 = mux(_T_28, _T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_127 = mux(_T_29, _T_9, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_128 = mux(_T_30, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_129 = mux(_T_31, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_130 = mux(_T_32, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_131 = mux(_T_33, _T_11, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_132 = mux(_T_34, read_mstatus, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_133 = mux(_T_35, UInt<32>("h080000000"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_134 = mux(_T_36, _T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_135 = mux(_T_37, _T_13, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_136 = mux(_T_38, reg_mscratch, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_137 = mux(_T_39, reg_mepc, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_138 = mux(_T_40, reg_mtval, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_139 = mux(_T_41, _T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_140 = mux(_T_42, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_141 = mux(_T_43, reg_medeleg, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_142 = mux(_T_44, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_143 = mux(_T_45, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_144 = or(_T_125, _T_126) @[Mux.scala 27:72]
    node _T_145 = or(_T_144, _T_127) @[Mux.scala 27:72]
    node _T_146 = or(_T_145, _T_128) @[Mux.scala 27:72]
    node _T_147 = or(_T_146, _T_129) @[Mux.scala 27:72]
    node _T_148 = or(_T_147, _T_130) @[Mux.scala 27:72]
    node _T_149 = or(_T_148, _T_131) @[Mux.scala 27:72]
    node _T_150 = or(_T_149, _T_132) @[Mux.scala 27:72]
    node _T_151 = or(_T_150, _T_133) @[Mux.scala 27:72]
    node _T_152 = or(_T_151, _T_134) @[Mux.scala 27:72]
    node _T_153 = or(_T_152, _T_135) @[Mux.scala 27:72]
    node _T_154 = or(_T_153, _T_136) @[Mux.scala 27:72]
    node _T_155 = or(_T_154, _T_137) @[Mux.scala 27:72]
    node _T_156 = or(_T_155, _T_138) @[Mux.scala 27:72]
    node _T_157 = or(_T_156, _T_139) @[Mux.scala 27:72]
    node _T_158 = or(_T_157, _T_140) @[Mux.scala 27:72]
    node _T_159 = or(_T_158, _T_141) @[Mux.scala 27:72]
    node _T_160 = or(_T_159, _T_142) @[Mux.scala 27:72]
    node _T_161 = or(_T_160, _T_143) @[Mux.scala 27:72]
    wire _WIRE_9 : UInt<64> @[Mux.scala 27:72]
    _WIRE_9 <= _T_161 @[Mux.scala 27:72]
    io.write_data <= _WIRE_9 @[csr.scala 410:17]
    when wen : @[csr.scala 412:14]
      when _T_34 : @[csr.scala 428:40]
        wire _WIRE_10 : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 429:39]
        wire _WIRE_11 : UInt<32>
        _WIRE_11 <= wdata
        node _T_162 = bits(_WIRE_11, 0, 0) @[csr.scala 429:39]
        _WIRE_10.uie <= _T_162 @[csr.scala 429:39]
        node _T_163 = bits(_WIRE_11, 1, 1) @[csr.scala 429:39]
        _WIRE_10.sie <= _T_163 @[csr.scala 429:39]
        node _T_164 = bits(_WIRE_11, 2, 2) @[csr.scala 429:39]
        _WIRE_10.wpri4 <= _T_164 @[csr.scala 429:39]
        node _T_165 = bits(_WIRE_11, 3, 3) @[csr.scala 429:39]
        _WIRE_10.mie <= _T_165 @[csr.scala 429:39]
        node _T_166 = bits(_WIRE_11, 4, 4) @[csr.scala 429:39]
        _WIRE_10.upie <= _T_166 @[csr.scala 429:39]
        node _T_167 = bits(_WIRE_11, 5, 5) @[csr.scala 429:39]
        _WIRE_10.spie <= _T_167 @[csr.scala 429:39]
        node _T_168 = bits(_WIRE_11, 6, 6) @[csr.scala 429:39]
        _WIRE_10.wpri3 <= _T_168 @[csr.scala 429:39]
        node _T_169 = bits(_WIRE_11, 7, 7) @[csr.scala 429:39]
        _WIRE_10.mpie <= _T_169 @[csr.scala 429:39]
        node _T_170 = bits(_WIRE_11, 8, 8) @[csr.scala 429:39]
        _WIRE_10.spp <= _T_170 @[csr.scala 429:39]
        node _T_171 = bits(_WIRE_11, 10, 9) @[csr.scala 429:39]
        _WIRE_10.wpri2 <= _T_171 @[csr.scala 429:39]
        node _T_172 = bits(_WIRE_11, 12, 11) @[csr.scala 429:39]
        _WIRE_10.mpp <= _T_172 @[csr.scala 429:39]
        node _T_173 = bits(_WIRE_11, 14, 13) @[csr.scala 429:39]
        _WIRE_10.fs <= _T_173 @[csr.scala 429:39]
        node _T_174 = bits(_WIRE_11, 16, 15) @[csr.scala 429:39]
        _WIRE_10.xs <= _T_174 @[csr.scala 429:39]
        node _T_175 = bits(_WIRE_11, 17, 17) @[csr.scala 429:39]
        _WIRE_10.mprv <= _T_175 @[csr.scala 429:39]
        node _T_176 = bits(_WIRE_11, 18, 18) @[csr.scala 429:39]
        _WIRE_10.sum <= _T_176 @[csr.scala 429:39]
        node _T_177 = bits(_WIRE_11, 19, 19) @[csr.scala 429:39]
        _WIRE_10.mxr <= _T_177 @[csr.scala 429:39]
        node _T_178 = bits(_WIRE_11, 20, 20) @[csr.scala 429:39]
        _WIRE_10.tvm <= _T_178 @[csr.scala 429:39]
        node _T_179 = bits(_WIRE_11, 21, 21) @[csr.scala 429:39]
        _WIRE_10.tw <= _T_179 @[csr.scala 429:39]
        node _T_180 = bits(_WIRE_11, 22, 22) @[csr.scala 429:39]
        _WIRE_10.tsr <= _T_180 @[csr.scala 429:39]
        node _T_181 = bits(_WIRE_11, 30, 23) @[csr.scala 429:39]
        _WIRE_10.wpri1 <= _T_181 @[csr.scala 429:39]
        node _T_182 = bits(_WIRE_11, 31, 31) @[csr.scala 429:39]
        _WIRE_10.sd <= _T_182 @[csr.scala 429:39]
        reg_mstatus.mie <= _WIRE_10.mie @[csr.scala 430:23]
        reg_mstatus.mpie <= _WIRE_10.mpie @[csr.scala 431:24]
        reg_mstatus.spp <= UInt<1>("h00") @[csr.scala 433:23]
        reg_mstatus.uie <= UInt<1>("h00") @[csr.scala 434:23]
        reg_mstatus.upie <= UInt<1>("h00") @[csr.scala 435:24]
        reg_mstatus.mprv <= UInt<1>("h00") @[csr.scala 436:24]
        reg_mstatus.mxr <= UInt<1>("h00") @[csr.scala 437:23]
        reg_mstatus.sum <= UInt<1>("h00") @[csr.scala 438:23]
        reg_mstatus.tvm <= UInt<1>("h00") @[csr.scala 439:23]
        reg_mstatus.tw <= UInt<1>("h00") @[csr.scala 440:22]
        reg_mstatus.tsr <= UInt<1>("h00") @[csr.scala 441:23]
        reg_mstatus.fs <= UInt<1>("h00") @[csr.scala 442:22]
        reg_mstatus.xs <= UInt<1>("h00") @[csr.scala 443:22]
        reg_mstatus.sd <= UInt<1>("h00") @[csr.scala 444:22]
        skip @[csr.scala 428:40]
      when _T_36 : @[csr.scala 458:36]
        wire _WIRE_12 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 459:35]
        wire _WIRE_13 : UInt<32>
        _WIRE_13 <= wdata
        node _T_183 = bits(_WIRE_13, 0, 0) @[csr.scala 459:35]
        _WIRE_12.usix <= _T_183 @[csr.scala 459:35]
        node _T_184 = bits(_WIRE_13, 1, 1) @[csr.scala 459:35]
        _WIRE_12.ssix <= _T_184 @[csr.scala 459:35]
        node _T_185 = bits(_WIRE_13, 2, 2) @[csr.scala 459:35]
        _WIRE_12.wpri4 <= _T_185 @[csr.scala 459:35]
        node _T_186 = bits(_WIRE_13, 3, 3) @[csr.scala 459:35]
        _WIRE_12.msix <= _T_186 @[csr.scala 459:35]
        node _T_187 = bits(_WIRE_13, 4, 4) @[csr.scala 459:35]
        _WIRE_12.utix <= _T_187 @[csr.scala 459:35]
        node _T_188 = bits(_WIRE_13, 5, 5) @[csr.scala 459:35]
        _WIRE_12.stix <= _T_188 @[csr.scala 459:35]
        node _T_189 = bits(_WIRE_13, 6, 6) @[csr.scala 459:35]
        _WIRE_12.wpri3 <= _T_189 @[csr.scala 459:35]
        node _T_190 = bits(_WIRE_13, 7, 7) @[csr.scala 459:35]
        _WIRE_12.mtix <= _T_190 @[csr.scala 459:35]
        node _T_191 = bits(_WIRE_13, 8, 8) @[csr.scala 459:35]
        _WIRE_12.ueix <= _T_191 @[csr.scala 459:35]
        node _T_192 = bits(_WIRE_13, 9, 9) @[csr.scala 459:35]
        _WIRE_12.seix <= _T_192 @[csr.scala 459:35]
        node _T_193 = bits(_WIRE_13, 10, 10) @[csr.scala 459:35]
        _WIRE_12.wpri2 <= _T_193 @[csr.scala 459:35]
        node _T_194 = bits(_WIRE_13, 11, 11) @[csr.scala 459:35]
        _WIRE_12.meix <= _T_194 @[csr.scala 459:35]
        node _T_195 = bits(_WIRE_13, 31, 12) @[csr.scala 459:35]
        _WIRE_12.wpri1 <= _T_195 @[csr.scala 459:35]
        reg_mip.msix <= _WIRE_12.msix @[csr.scala 460:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 461:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 462:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 463:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 464:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 465:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 466:20]
        skip @[csr.scala 458:36]
      when _T_37 : @[csr.scala 473:36]
        wire _WIRE_14 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 474:35]
        wire _WIRE_15 : UInt<32>
        _WIRE_15 <= wdata
        node _T_196 = bits(_WIRE_15, 0, 0) @[csr.scala 474:35]
        _WIRE_14.usix <= _T_196 @[csr.scala 474:35]
        node _T_197 = bits(_WIRE_15, 1, 1) @[csr.scala 474:35]
        _WIRE_14.ssix <= _T_197 @[csr.scala 474:35]
        node _T_198 = bits(_WIRE_15, 2, 2) @[csr.scala 474:35]
        _WIRE_14.wpri4 <= _T_198 @[csr.scala 474:35]
        node _T_199 = bits(_WIRE_15, 3, 3) @[csr.scala 474:35]
        _WIRE_14.msix <= _T_199 @[csr.scala 474:35]
        node _T_200 = bits(_WIRE_15, 4, 4) @[csr.scala 474:35]
        _WIRE_14.utix <= _T_200 @[csr.scala 474:35]
        node _T_201 = bits(_WIRE_15, 5, 5) @[csr.scala 474:35]
        _WIRE_14.stix <= _T_201 @[csr.scala 474:35]
        node _T_202 = bits(_WIRE_15, 6, 6) @[csr.scala 474:35]
        _WIRE_14.wpri3 <= _T_202 @[csr.scala 474:35]
        node _T_203 = bits(_WIRE_15, 7, 7) @[csr.scala 474:35]
        _WIRE_14.mtix <= _T_203 @[csr.scala 474:35]
        node _T_204 = bits(_WIRE_15, 8, 8) @[csr.scala 474:35]
        _WIRE_14.ueix <= _T_204 @[csr.scala 474:35]
        node _T_205 = bits(_WIRE_15, 9, 9) @[csr.scala 474:35]
        _WIRE_14.seix <= _T_205 @[csr.scala 474:35]
        node _T_206 = bits(_WIRE_15, 10, 10) @[csr.scala 474:35]
        _WIRE_14.wpri2 <= _T_206 @[csr.scala 474:35]
        node _T_207 = bits(_WIRE_15, 11, 11) @[csr.scala 474:35]
        _WIRE_14.meix <= _T_207 @[csr.scala 474:35]
        node _T_208 = bits(_WIRE_15, 31, 12) @[csr.scala 474:35]
        _WIRE_14.wpri1 <= _T_208 @[csr.scala 474:35]
        reg_mie.meix <= _WIRE_14.meix @[csr.scala 475:20]
        reg_mie.msix <= _WIRE_14.msix @[csr.scala 476:20]
        reg_mie.mtix <= _WIRE_14.mtix @[csr.scala 477:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 478:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 479:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 480:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 481:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 482:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 483:20]
        skip @[csr.scala 473:36]
      when _T_27 : @[csr.scala 492:48]
        wire _WIRE_16 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 493:47]
        wire _WIRE_17 : UInt<32>
        _WIRE_17 <= wdata
        node _T_209 = bits(_WIRE_17, 0, 0) @[csr.scala 493:47]
        _WIRE_16.cy <= _T_209 @[csr.scala 493:47]
        node _T_210 = bits(_WIRE_17, 1, 1) @[csr.scala 493:47]
        _WIRE_16.tmzero <= _T_210 @[csr.scala 493:47]
        node _T_211 = bits(_WIRE_17, 2, 2) @[csr.scala 493:47]
        _WIRE_16.ir <= _T_211 @[csr.scala 493:47]
        node _T_212 = bits(_WIRE_17, 3, 3) @[csr.scala 493:47]
        _WIRE_16.hpm3 <= _T_212 @[csr.scala 493:47]
        node _T_213 = bits(_WIRE_17, 4, 4) @[csr.scala 493:47]
        _WIRE_16.hpm4 <= _T_213 @[csr.scala 493:47]
        node _T_214 = bits(_WIRE_17, 5, 5) @[csr.scala 493:47]
        _WIRE_16.hpm5 <= _T_214 @[csr.scala 493:47]
        node _T_215 = bits(_WIRE_17, 6, 6) @[csr.scala 493:47]
        _WIRE_16.hpm6 <= _T_215 @[csr.scala 493:47]
        node _T_216 = bits(_WIRE_17, 7, 7) @[csr.scala 493:47]
        _WIRE_16.hpm7 <= _T_216 @[csr.scala 493:47]
        node _T_217 = bits(_WIRE_17, 8, 8) @[csr.scala 493:47]
        _WIRE_16.hpm8 <= _T_217 @[csr.scala 493:47]
        node _T_218 = bits(_WIRE_17, 9, 9) @[csr.scala 493:47]
        _WIRE_16.hpm9 <= _T_218 @[csr.scala 493:47]
        node _T_219 = bits(_WIRE_17, 10, 10) @[csr.scala 493:47]
        _WIRE_16.hpm10 <= _T_219 @[csr.scala 493:47]
        node _T_220 = bits(_WIRE_17, 11, 11) @[csr.scala 493:47]
        _WIRE_16.hpm11 <= _T_220 @[csr.scala 493:47]
        node _T_221 = bits(_WIRE_17, 12, 12) @[csr.scala 493:47]
        _WIRE_16.hpm12 <= _T_221 @[csr.scala 493:47]
        node _T_222 = bits(_WIRE_17, 13, 13) @[csr.scala 493:47]
        _WIRE_16.hpm13 <= _T_222 @[csr.scala 493:47]
        node _T_223 = bits(_WIRE_17, 14, 14) @[csr.scala 493:47]
        _WIRE_16.hpm14 <= _T_223 @[csr.scala 493:47]
        node _T_224 = bits(_WIRE_17, 15, 15) @[csr.scala 493:47]
        _WIRE_16.hpm15 <= _T_224 @[csr.scala 493:47]
        node _T_225 = bits(_WIRE_17, 16, 16) @[csr.scala 493:47]
        _WIRE_16.hpm16 <= _T_225 @[csr.scala 493:47]
        node _T_226 = bits(_WIRE_17, 17, 17) @[csr.scala 493:47]
        _WIRE_16.hpm17 <= _T_226 @[csr.scala 493:47]
        node _T_227 = bits(_WIRE_17, 18, 18) @[csr.scala 493:47]
        _WIRE_16.hpm18 <= _T_227 @[csr.scala 493:47]
        node _T_228 = bits(_WIRE_17, 19, 19) @[csr.scala 493:47]
        _WIRE_16.hpm19 <= _T_228 @[csr.scala 493:47]
        node _T_229 = bits(_WIRE_17, 20, 20) @[csr.scala 493:47]
        _WIRE_16.hpm20 <= _T_229 @[csr.scala 493:47]
        node _T_230 = bits(_WIRE_17, 21, 21) @[csr.scala 493:47]
        _WIRE_16.hpm21 <= _T_230 @[csr.scala 493:47]
        node _T_231 = bits(_WIRE_17, 22, 22) @[csr.scala 493:47]
        _WIRE_16.hpm22 <= _T_231 @[csr.scala 493:47]
        node _T_232 = bits(_WIRE_17, 23, 23) @[csr.scala 493:47]
        _WIRE_16.hpm23 <= _T_232 @[csr.scala 493:47]
        node _T_233 = bits(_WIRE_17, 24, 24) @[csr.scala 493:47]
        _WIRE_16.hpm24 <= _T_233 @[csr.scala 493:47]
        node _T_234 = bits(_WIRE_17, 25, 25) @[csr.scala 493:47]
        _WIRE_16.hpm25 <= _T_234 @[csr.scala 493:47]
        node _T_235 = bits(_WIRE_17, 26, 26) @[csr.scala 493:47]
        _WIRE_16.hpm26 <= _T_235 @[csr.scala 493:47]
        node _T_236 = bits(_WIRE_17, 27, 27) @[csr.scala 493:47]
        _WIRE_16.hpm27 <= _T_236 @[csr.scala 493:47]
        node _T_237 = bits(_WIRE_17, 28, 28) @[csr.scala 493:47]
        _WIRE_16.hpm28 <= _T_237 @[csr.scala 493:47]
        node _T_238 = bits(_WIRE_17, 29, 29) @[csr.scala 493:47]
        _WIRE_16.hpm29 <= _T_238 @[csr.scala 493:47]
        node _T_239 = bits(_WIRE_17, 30, 30) @[csr.scala 493:47]
        _WIRE_16.hpm30 <= _T_239 @[csr.scala 493:47]
        node _T_240 = bits(_WIRE_17, 31, 31) @[csr.scala 493:47]
        _WIRE_16.hpm31 <= _T_240 @[csr.scala 493:47]
        reg_mcounterinhibit.cy <= _WIRE_16.cy @[csr.scala 494:27]
        reg_mcounterinhibit.tmzero <= _WIRE_16.tmzero @[csr.scala 494:27]
        reg_mcounterinhibit.ir <= _WIRE_16.ir @[csr.scala 494:27]
        reg_mcounterinhibit.hpm3 <= _WIRE_16.hpm3 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm4 <= _WIRE_16.hpm4 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm5 <= _WIRE_16.hpm5 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm6 <= _WIRE_16.hpm6 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm7 <= _WIRE_16.hpm7 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm8 <= _WIRE_16.hpm8 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm9 <= _WIRE_16.hpm9 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm10 <= _WIRE_16.hpm10 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm11 <= _WIRE_16.hpm11 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm12 <= _WIRE_16.hpm12 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm13 <= _WIRE_16.hpm13 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm14 <= _WIRE_16.hpm14 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm15 <= _WIRE_16.hpm15 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm16 <= _WIRE_16.hpm16 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm17 <= _WIRE_16.hpm17 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm18 <= _WIRE_16.hpm18 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm19 <= _WIRE_16.hpm19 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm20 <= _WIRE_16.hpm20 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm21 <= _WIRE_16.hpm21 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm22 <= _WIRE_16.hpm22 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm23 <= _WIRE_16.hpm23 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm24 <= _WIRE_16.hpm24 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm25 <= _WIRE_16.hpm25 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm26 <= _WIRE_16.hpm26 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm27 <= _WIRE_16.hpm27 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm28 <= _WIRE_16.hpm28 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm29 <= _WIRE_16.hpm29 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm30 <= _WIRE_16.hpm30 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm31 <= _WIRE_16.hpm31 @[csr.scala 494:27]
        node _T_241 = eq(reg_mcounterinhibit.cy, UInt<1>("h00")) @[csr.scala 495:36]
        when _T_241 : @[csr.scala 495:49]
          when _T_44 : @[csr.scala 527:29]
            node hi_7 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node lo_6 = bits(_T_4, 31, 0) @[csr.scala 527:84]
            node _T_242 = cat(hi_7, lo_6) @[Cat.scala 30:58]
            lo <= _T_242 @[csr.scala 563:11]
            node _hi_T = shr(_T_242, 6) @[csr.scala 564:28]
            hi <= _hi_T @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_28 : @[csr.scala 528:29]
            node hi_8 = bits(_T_4, 63, 32) @[csr.scala 528:51]
            node _T_243 = cat(hi_8, wdata) @[Cat.scala 30:58]
            lo <= _T_243 @[csr.scala 563:11]
            node _hi_T_1 = shr(_T_243, 6) @[csr.scala 564:28]
            hi <= _hi_T_1 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 495:49]
        node _T_244 = eq(reg_mcounterinhibit.ir, UInt<1>("h00")) @[csr.scala 498:36]
        when _T_244 : @[csr.scala 498:48]
          when _T_45 : @[csr.scala 527:29]
            node hi_9 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node lo_7 = bits(_T_9, 31, 0) @[csr.scala 527:84]
            node _T_245 = cat(hi_9, lo_7) @[Cat.scala 30:58]
            lo_1 <= _T_245 @[csr.scala 563:11]
            node _hi_T_2 = shr(_T_245, 6) @[csr.scala 564:28]
            hi_1 <= _hi_T_2 @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_29 : @[csr.scala 528:29]
            node hi_10 = bits(_T_9, 63, 32) @[csr.scala 528:51]
            node _T_246 = cat(hi_10, wdata) @[Cat.scala 30:58]
            lo_1 <= _T_246 @[csr.scala 563:11]
            node _hi_T_3 = shr(_T_246, 6) @[csr.scala 564:28]
            hi_1 <= _hi_T_3 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 498:48]
        skip @[csr.scala 492:48]
      when _T_38 : @[csr.scala 504:41]
        reg_mscratch <= wdata @[csr.scala 504:56]
        skip @[csr.scala 504:41]
      when _T_39 : @[csr.scala 509:41]
        node _T_247 = bits(wdata, 31, 0) @[csr.scala 509:61]
        node _T_248 = dshr(_T_247, UInt<2>("h02")) @[csr.scala 509:70]
        node _T_249 = dshl(_T_248, UInt<2>("h02")) @[csr.scala 509:78]
        reg_mepc <= _T_249 @[csr.scala 509:52]
        skip @[csr.scala 509:41]
      when _T_41 : @[csr.scala 514:41]
        node _T_250 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 515:38]
        node _T_251 = and(_T_250, UInt<32>("h080000000")) @[csr.scala 515:72]
        reg_mcause.interrupt <= _T_251 @[csr.scala 515:28]
        node _T_252 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 516:42]
        node _T_253 = and(_T_252, UInt<31>("h07fffffff")) @[csr.scala 516:76]
        reg_mcause.exceptioncode <= _T_253 @[csr.scala 516:32]
        skip @[csr.scala 514:41]
      when _T_40 : @[csr.scala 520:41]
        node _T_254 = bits(wdata, 31, 0) @[csr.scala 520:61]
        reg_mtval <= _T_254 @[csr.scala 520:53]
        skip @[csr.scala 520:41]
      when _T_43 : @[csr.scala 521:43]
        node _T_255 = bits(wdata, 31, 0) @[csr.scala 521:65]
        reg_medeleg <= _T_255 @[csr.scala 521:57]
        skip @[csr.scala 521:43]
      skip @[csr.scala 412:14]
    
  module ALUControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip add : UInt<1>, flip immediate : UInt<1>, flip funct7 : UInt<7>, flip funct3 : UInt<3>, operation : UInt<4>}
    
    io.operation <= UInt<4>("h0f") @[alucontrol.scala 30:16]
    when io.add : @[alucontrol.scala 32:17]
      io.operation <= UInt<2>("h02") @[alucontrol.scala 33:18]
      skip @[alucontrol.scala 32:17]
    else : @[alucontrol.scala 34:16]
      node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
      when _T : @[Conditional.scala 40:58]
        node _T_1 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 37:41]
        node _T_2 = or(io.immediate, _T_1) @[alucontrol.scala 37:28]
        when _T_2 : @[alucontrol.scala 37:59]
          io.operation <= UInt<2>("h02") @[alucontrol.scala 38:24]
          skip @[alucontrol.scala 37:59]
        else : @[alucontrol.scala 39:22]
          io.operation <= UInt<2>("h03") @[alucontrol.scala 40:24]
          skip @[alucontrol.scala 39:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_3 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
        when _T_3 : @[Conditional.scala 39:67]
          io.operation <= UInt<3>("h06") @[alucontrol.scala 43:36]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_4 = eq(UInt<2>("h02"), io.funct3) @[Conditional.scala 37:30]
          when _T_4 : @[Conditional.scala 39:67]
            io.operation <= UInt<3>("h04") @[alucontrol.scala 44:36]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_5 = eq(UInt<2>("h03"), io.funct3) @[Conditional.scala 37:30]
            when _T_5 : @[Conditional.scala 39:67]
              io.operation <= UInt<3>("h05") @[alucontrol.scala 45:36]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_6 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
              when _T_6 : @[Conditional.scala 39:67]
                io.operation <= UInt<4>("h09") @[alucontrol.scala 46:36]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_7 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
                when _T_7 : @[Conditional.scala 39:67]
                  node _T_8 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 48:25]
                  when _T_8 : @[alucontrol.scala 48:43]
                    io.operation <= UInt<3>("h07") @[alucontrol.scala 49:24]
                    skip @[alucontrol.scala 48:43]
                  else : @[alucontrol.scala 50:22]
                    io.operation <= UInt<4>("h08") @[alucontrol.scala 51:24]
                    skip @[alucontrol.scala 50:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_9 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
                  when _T_9 : @[Conditional.scala 39:67]
                    io.operation <= UInt<1>("h01") @[alucontrol.scala 54:36]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_10 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
                    when _T_10 : @[Conditional.scala 39:67]
                      io.operation <= UInt<1>("h00") @[alucontrol.scala 55:36]
                      skip @[Conditional.scala 39:67]
      skip @[alucontrol.scala 34:16]
    
  module ALU : 
    input clock : Clock
    input reset : Reset
    output io : {flip operation : UInt<4>, flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    io.result <= UInt<1>("h00") @[alu.scala 26:13]
    node _T = eq(UInt<1>("h00"), io.operation) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = and(io.inputx, io.inputy) @[alu.scala 30:30]
      io.result <= _T_1 @[alu.scala 30:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.operation) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = or(io.inputx, io.inputy) @[alu.scala 33:30]
        io.result <= _T_3 @[alu.scala 33:17]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<2>("h02"), io.operation) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = add(io.inputx, io.inputy) @[alu.scala 36:30]
          node _T_6 = tail(_T_5, 1) @[alu.scala 36:30]
          io.result <= _T_6 @[alu.scala 36:17]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_7 = eq(UInt<2>("h03"), io.operation) @[Conditional.scala 37:30]
          when _T_7 : @[Conditional.scala 39:67]
            node _T_8 = sub(io.inputx, io.inputy) @[alu.scala 39:30]
            node _T_9 = tail(_T_8, 1) @[alu.scala 39:30]
            io.result <= _T_9 @[alu.scala 39:17]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_10 = eq(UInt<3>("h04"), io.operation) @[Conditional.scala 37:30]
            when _T_10 : @[Conditional.scala 39:67]
              node _T_11 = asSInt(io.inputx) @[alu.scala 42:31]
              node _T_12 = asSInt(io.inputy) @[alu.scala 42:50]
              node _T_13 = lt(_T_11, _T_12) @[alu.scala 42:38]
              io.result <= _T_13 @[alu.scala 42:17]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h05"), io.operation) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = lt(io.inputx, io.inputy) @[alu.scala 45:31]
                io.result <= _T_15 @[alu.scala 45:17]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_16 = eq(UInt<3>("h06"), io.operation) @[Conditional.scala 37:30]
                when _T_16 : @[Conditional.scala 39:67]
                  node _T_17 = bits(io.inputy, 4, 0) @[alu.scala 48:42]
                  node _T_18 = dshl(io.inputx, _T_17) @[alu.scala 48:30]
                  io.result <= _T_18 @[alu.scala 48:17]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_19 = eq(UInt<3>("h07"), io.operation) @[Conditional.scala 37:30]
                  when _T_19 : @[Conditional.scala 39:67]
                    node _T_20 = bits(io.inputy, 4, 0) @[alu.scala 51:42]
                    node _T_21 = dshr(io.inputx, _T_20) @[alu.scala 51:30]
                    io.result <= _T_21 @[alu.scala 51:17]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_22 = eq(UInt<4>("h08"), io.operation) @[Conditional.scala 37:30]
                    when _T_22 : @[Conditional.scala 39:67]
                      node _T_23 = asSInt(io.inputx) @[alu.scala 54:31]
                      node _T_24 = bits(io.inputy, 4, 0) @[alu.scala 54:50]
                      node _T_25 = dshr(_T_23, _T_24) @[alu.scala 54:38]
                      node _T_26 = asUInt(_T_25) @[alu.scala 54:57]
                      io.result <= _T_26 @[alu.scala 54:17]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = eq(UInt<4>("h09"), io.operation) @[Conditional.scala 37:30]
                      when _T_27 : @[Conditional.scala 39:67]
                        node _T_28 = xor(io.inputx, io.inputy) @[alu.scala 57:30]
                        io.result <= _T_28 @[alu.scala 57:17]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_29 = eq(UInt<4>("h0a"), io.operation) @[Conditional.scala 37:30]
                        when _T_29 : @[Conditional.scala 39:67]
                          node _T_30 = or(io.inputx, io.inputy) @[alu.scala 60:32]
                          node _T_31 = not(_T_30) @[alu.scala 60:20]
                          io.result <= _T_31 @[alu.scala 60:17]
                          skip @[Conditional.scala 39:67]
    
  module ImmediateGenerator : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, sextImm : UInt<32>}
    
    io.sextImm <= UInt<1>("h00") @[helpers.scala 42:14]
    node opcode = bits(io.instruction, 6, 0) @[helpers.scala 44:30]
    node _T = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node hi = bits(io.instruction, 31, 12) @[helpers.scala 47:31]
      node lo = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
      node _T_1 = cat(hi, lo) @[Cat.scala 30:58]
      io.sextImm <= _T_1 @[helpers.scala 48:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<5>("h017"), opcode) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node hi_1 = bits(io.instruction, 31, 12) @[helpers.scala 51:31]
        node lo_1 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
        node _T_3 = cat(hi_1, lo_1) @[Cat.scala 30:58]
        io.sextImm <= _T_3 @[helpers.scala 52:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<7>("h06f"), opcode) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node hi_hi = bits(io.instruction, 31, 31) @[helpers.scala 55:35]
          node hi_lo = bits(io.instruction, 19, 12) @[helpers.scala 55:55]
          node lo_hi = bits(io.instruction, 20, 20) @[helpers.scala 56:35]
          node lo_lo = bits(io.instruction, 30, 21) @[helpers.scala 56:55]
          node lo_2 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
          node hi_2 = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
          node hi_lo_1 = cat(hi_2, lo_2) @[Cat.scala 30:58]
          node _T_5 = bits(hi_lo_1, 19, 19) @[helpers.scala 57:36]
          node _T_6 = bits(_T_5, 0, 0) @[Bitwise.scala 72:15]
          node hi_hi_1 = mux(_T_6, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
          node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
          node _T_7 = cat(hi_3, UInt<1>("h00")) @[Cat.scala 30:58]
          io.sextImm <= _T_7 @[helpers.scala 57:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<7>("h067"), opcode) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node lo_3 = bits(io.instruction, 31, 20) @[helpers.scala 60:31]
            node _T_9 = bits(lo_3, 11, 11) @[helpers.scala 61:36]
            node _T_10 = bits(_T_9, 0, 0) @[Bitwise.scala 72:15]
            node hi_4 = mux(_T_10, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
            node _T_11 = cat(hi_4, lo_3) @[Cat.scala 30:58]
            io.sextImm <= _T_11 @[helpers.scala 61:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node hi_hi_2 = bits(io.instruction, 31, 31) @[helpers.scala 64:35]
              node hi_lo_2 = bits(io.instruction, 7, 7) @[helpers.scala 64:55]
              node lo_hi_1 = bits(io.instruction, 30, 25) @[helpers.scala 65:35]
              node lo_lo_1 = bits(io.instruction, 11, 8) @[helpers.scala 65:58]
              node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
              node hi_5 = cat(hi_hi_2, hi_lo_2) @[Cat.scala 30:58]
              node hi_lo_3 = cat(hi_5, lo_4) @[Cat.scala 30:58]
              node _T_13 = bits(hi_lo_3, 11, 11) @[helpers.scala 66:37]
              node _T_14 = bits(_T_13, 0, 0) @[Bitwise.scala 72:15]
              node hi_hi_3 = mux(_T_14, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
              node hi_6 = cat(hi_hi_3, hi_lo_3) @[Cat.scala 30:58]
              node _T_15 = cat(hi_6, UInt<1>("h00")) @[Cat.scala 30:58]
              io.sextImm <= _T_15 @[helpers.scala 66:18]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_16 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
              when _T_16 : @[Conditional.scala 39:67]
                node lo_5 = bits(io.instruction, 31, 20) @[helpers.scala 69:31]
                node _T_17 = bits(lo_5, 11, 11) @[helpers.scala 70:36]
                node _T_18 = bits(_T_17, 0, 0) @[Bitwise.scala 72:15]
                node hi_7 = mux(_T_18, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                node _T_19 = cat(hi_7, lo_5) @[Cat.scala 30:58]
                io.sextImm <= _T_19 @[helpers.scala 70:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_20 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
                when _T_20 : @[Conditional.scala 39:67]
                  node hi_8 = bits(io.instruction, 31, 25) @[helpers.scala 73:35]
                  node lo_6 = bits(io.instruction, 11, 7) @[helpers.scala 73:59]
                  node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
                  node _T_21 = bits(lo_7, 11, 11) @[helpers.scala 74:36]
                  node _T_22 = bits(_T_21, 0, 0) @[Bitwise.scala 72:15]
                  node hi_9 = mux(_T_22, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                  node _T_23 = cat(hi_9, lo_7) @[Cat.scala 30:58]
                  io.sextImm <= _T_23 @[helpers.scala 74:18]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_24 = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
                  when _T_24 : @[Conditional.scala 39:67]
                    node lo_8 = bits(io.instruction, 31, 20) @[helpers.scala 77:31]
                    node _T_25 = bits(lo_8, 11, 11) @[helpers.scala 78:36]
                    node _T_26 = bits(_T_25, 0, 0) @[Bitwise.scala 72:15]
                    node hi_10 = mux(_T_26, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                    node _T_27 = cat(hi_10, lo_8) @[Cat.scala 30:58]
                    io.sextImm <= _T_27 @[helpers.scala 78:18]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_28 = eq(UInt<7>("h073"), opcode) @[Conditional.scala 37:30]
                    when _T_28 : @[Conditional.scala 39:67]
                      node hi_11 = mux(UInt<1>("h00"), UInt<27>("h07ffffff"), UInt<27>("h00")) @[Bitwise.scala 72:12]
                      node lo_9 = bits(io.instruction, 19, 15) @[helpers.scala 81:53]
                      node _T_29 = cat(hi_11, lo_9) @[Cat.scala 30:58]
                      io.sextImm <= _T_29 @[helpers.scala 81:18]
                      skip @[Conditional.scala 39:67]
    
  module BranchControl : 
    input clock : Clock
    input reset : Reset
    output io : {flip branch : UInt<1>, flip funct3 : UInt<3>, flip inputx : UInt<32>, flip inputy : UInt<32>, taken : UInt<1>}
    
    io.taken is invalid @[branch-control.scala 27:12]
    wire check : UInt<1> @[branch-control.scala 29:19]
    check is invalid @[branch-control.scala 30:9]
    node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(io.inputx, io.inputy) @[branch-control.scala 33:40]
      check <= _T_1 @[branch-control.scala 33:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = neq(io.inputx, io.inputy) @[branch-control.scala 34:40]
        check <= _T_3 @[branch-control.scala 34:26]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = asSInt(io.inputx) @[branch-control.scala 35:40]
          node _T_6 = asSInt(io.inputy) @[branch-control.scala 35:59]
          node _T_7 = lt(_T_5, _T_6) @[branch-control.scala 35:47]
          check <= _T_7 @[branch-control.scala 35:26]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node _T_9 = asSInt(io.inputx) @[branch-control.scala 36:40]
            node _T_10 = asSInt(io.inputy) @[branch-control.scala 36:60]
            node _T_11 = geq(_T_9, _T_10) @[branch-control.scala 36:47]
            check <= _T_11 @[branch-control.scala 36:26]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node _T_13 = lt(io.inputx, io.inputy) @[branch-control.scala 37:40]
              check <= _T_13 @[branch-control.scala 37:26]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = geq(io.inputx, io.inputy) @[branch-control.scala 38:40]
                check <= _T_15 @[branch-control.scala 38:26]
                skip @[Conditional.scala 39:67]
    node _T_16 = and(check, io.branch) @[branch-control.scala 41:21]
    io.taken <= _T_16 @[branch-control.scala 41:12]
    
  module Adder : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module Adder_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module SingleCycleCPU : 
    input clock : Clock
    input reset : Reset
    output io : {flip imem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip dmem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}}
    
    reg pc : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[cpu.scala 17:27]
    inst control of Control @[cpu.scala 18:26]
    control.clock <= clock
    control.reset <= reset
    inst registers of RegisterFile @[cpu.scala 19:26]
    registers.clock <= clock
    registers.reset <= reset
    inst csr of CSRRegFile @[cpu.scala 20:26]
    csr.clock <= clock
    csr.reset <= reset
    inst aluControl of ALUControl @[cpu.scala 21:26]
    aluControl.clock <= clock
    aluControl.reset <= reset
    inst alu of ALU @[cpu.scala 22:26]
    alu.clock <= clock
    alu.reset <= reset
    inst immGen of ImmediateGenerator @[cpu.scala 23:26]
    immGen.clock <= clock
    immGen.reset <= reset
    inst branchCtrl of BranchControl @[cpu.scala 24:26]
    branchCtrl.clock <= clock
    branchCtrl.reset <= reset
    inst pcPlusFour of Adder @[cpu.scala 25:26]
    pcPlusFour.clock <= clock
    pcPlusFour.reset <= reset
    inst branchAdd of Adder_1 @[cpu.scala 26:26]
    branchAdd.clock <= clock
    branchAdd.reset <= reset
    reg cycleCount : UInt<30>, clock with : (reset => (reset, UInt<30>("h00"))) @[Counter.scala 60:40]
    wire wrap : UInt<1>
    wrap <= UInt<1>("h00")
    when UInt<1>("h01") : @[Counter.scala 118:17]
      node wrap_wrap = eq(cycleCount, UInt<30>("h03fffffff")) @[Counter.scala 72:24]
      node _wrap_value_T = add(cycleCount, UInt<1>("h01")) @[Counter.scala 76:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[Counter.scala 76:24]
      cycleCount <= _wrap_value_T_1 @[Counter.scala 76:15]
      wrap <= wrap_wrap @[Counter.scala 118:24]
      skip @[Counter.scala 118:17]
    io.imem.address <= pc @[cpu.scala 30:19]
    io.imem.valid <= UInt<1>("h01") @[cpu.scala 31:17]
    pcPlusFour.io.inputx <= pc @[cpu.scala 33:24]
    pcPlusFour.io.inputy <= UInt<3>("h04") @[cpu.scala 34:24]
    node opcode = bits(io.imem.instruction, 6, 0) @[cpu.scala 37:27]
    control.io.opcode <= opcode @[cpu.scala 40:21]
    node _T = bits(io.imem.instruction, 19, 15) @[cpu.scala 42:39]
    registers.io.readreg1 <= _T @[cpu.scala 42:25]
    node _T_1 = bits(io.imem.instruction, 24, 20) @[cpu.scala 43:39]
    registers.io.readreg2 <= _T_1 @[cpu.scala 43:25]
    node _T_2 = bits(io.imem.instruction, 11, 7) @[cpu.scala 45:39]
    registers.io.writereg <= _T_2 @[cpu.scala 45:25]
    node _T_3 = or(control.io.regwrite, csr.io.reg_write) @[cpu.scala 46:49]
    node _T_4 = neq(registers.io.writereg, UInt<1>("h00")) @[cpu.scala 46:96]
    node _T_5 = and(_T_3, _T_4) @[cpu.scala 46:70]
    registers.io.wen <= _T_5 @[cpu.scala 46:25]
    aluControl.io.add <= control.io.add @[cpu.scala 48:27]
    aluControl.io.immediate <= control.io.immediate @[cpu.scala 49:27]
    node _T_6 = bits(io.imem.instruction, 31, 25) @[cpu.scala 50:41]
    aluControl.io.funct7 <= _T_6 @[cpu.scala 50:27]
    node _T_7 = bits(io.imem.instruction, 14, 12) @[cpu.scala 51:41]
    aluControl.io.funct3 <= _T_7 @[cpu.scala 51:27]
    immGen.io.instruction <= io.imem.instruction @[cpu.scala 53:25]
    csr.io.inst <= io.imem.instruction @[cpu.scala 57:15]
    csr.io.immid <= immGen.io.sextImm @[cpu.scala 58:16]
    csr.io.read_data <= registers.io.readdata1 @[cpu.scala 59:20]
    csr.io.retire_inst <= UInt<1>("h01") @[cpu.scala 60:22]
    node _T_8 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 61:26]
    node _T_9 = or(_T_8, csr.io.read_illegal) @[cpu.scala 61:48]
    node _T_10 = or(_T_9, csr.io.write_illegal) @[cpu.scala 61:71]
    node _T_11 = or(_T_10, csr.io.system_illegal) @[cpu.scala 61:95]
    csr.io.illegal_inst <= _T_11 @[cpu.scala 61:23]
    csr.io.pc <= pc @[cpu.scala 62:13]
    branchCtrl.io.branch <= control.io.branch @[cpu.scala 64:24]
    node _T_12 = bits(io.imem.instruction, 14, 12) @[cpu.scala 65:38]
    branchCtrl.io.funct3 <= _T_12 @[cpu.scala 65:24]
    branchCtrl.io.inputx <= registers.io.readdata1 @[cpu.scala 66:24]
    branchCtrl.io.inputy <= registers.io.readdata2 @[cpu.scala 67:24]
    wire alu_inputx : UInt @[cpu.scala 69:24]
    node _T_13 = eq(control.io.alusrc1, UInt<2>("h02")) @[cpu.scala 70:28]
    when _T_13 : @[cpu.scala 70:37]
      alu_inputx <= pc @[cpu.scala 71:16]
      skip @[cpu.scala 70:37]
    else : @[cpu.scala 72:44]
      node _T_14 = eq(control.io.alusrc1, UInt<1>("h01")) @[cpu.scala 72:35]
      when _T_14 : @[cpu.scala 72:44]
        alu_inputx <= UInt<1>("h00") @[cpu.scala 73:16]
        skip @[cpu.scala 72:44]
      else : @[cpu.scala 74:16]
        alu_inputx <= registers.io.readdata1 @[cpu.scala 75:16]
        skip @[cpu.scala 74:16]
    node alu_inputy = mux(control.io.immediate, immGen.io.sextImm, registers.io.readdata2) @[cpu.scala 77:23]
    alu.io.inputx <= alu_inputx @[cpu.scala 78:17]
    alu.io.inputy <= alu_inputy @[cpu.scala 79:17]
    alu.io.operation <= aluControl.io.operation @[cpu.scala 80:20]
    io.dmem.address <= alu.io.result @[cpu.scala 83:21]
    io.dmem.writedata <= registers.io.readdata2 @[cpu.scala 84:21]
    io.dmem.memread <= control.io.memread @[cpu.scala 85:21]
    io.dmem.memwrite <= control.io.memwrite @[cpu.scala 86:21]
    node _T_15 = bits(io.imem.instruction, 13, 12) @[cpu.scala 87:35]
    io.dmem.maskmode <= _T_15 @[cpu.scala 87:21]
    node _T_16 = bits(io.imem.instruction, 14, 14) @[cpu.scala 88:36]
    node _T_17 = not(_T_16) @[cpu.scala 88:24]
    io.dmem.sext <= _T_17 @[cpu.scala 88:21]
    node _T_18 = or(io.dmem.memread, io.dmem.memwrite) @[cpu.scala 89:24]
    when _T_18 : @[cpu.scala 89:45]
      io.dmem.valid <= UInt<1>("h01") @[cpu.scala 90:19]
      skip @[cpu.scala 89:45]
    else : @[cpu.scala 91:16]
      io.dmem.valid <= UInt<1>("h00") @[cpu.scala 92:19]
      skip @[cpu.scala 91:16]
    wire write_data : UInt @[cpu.scala 96:24]
    node _T_19 = eq(control.io.toreg, UInt<1>("h01")) @[cpu.scala 97:26]
    when _T_19 : @[cpu.scala 97:35]
      write_data <= io.dmem.readdata @[cpu.scala 98:16]
      skip @[cpu.scala 97:35]
    else : @[cpu.scala 99:42]
      node _T_20 = eq(control.io.toreg, UInt<2>("h02")) @[cpu.scala 99:33]
      when _T_20 : @[cpu.scala 99:42]
        write_data <= pcPlusFour.io.result @[cpu.scala 100:16]
        skip @[cpu.scala 99:42]
      else : @[cpu.scala 101:42]
        node _T_21 = eq(control.io.toreg, UInt<2>("h03")) @[cpu.scala 101:33]
        when _T_21 : @[cpu.scala 101:42]
          write_data <= csr.io.write_data @[cpu.scala 102:16]
          skip @[cpu.scala 101:42]
        else : @[cpu.scala 103:16]
          write_data <= alu.io.result @[cpu.scala 104:16]
          skip @[cpu.scala 103:16]
    registers.io.writedata <= write_data @[cpu.scala 107:26]
    branchAdd.io.inputx <= pc @[cpu.scala 109:23]
    branchAdd.io.inputy <= immGen.io.sextImm @[cpu.scala 110:23]
    wire next_pc : UInt @[cpu.scala 111:21]
    node _T_22 = eq(control.io.jump, UInt<2>("h02")) @[cpu.scala 112:48]
    node _T_23 = or(branchCtrl.io.taken, _T_22) @[cpu.scala 112:29]
    when _T_23 : @[cpu.scala 112:57]
      next_pc <= branchAdd.io.result @[cpu.scala 113:13]
      skip @[cpu.scala 112:57]
    else : @[cpu.scala 114:41]
      node _T_24 = eq(control.io.jump, UInt<2>("h03")) @[cpu.scala 114:32]
      when _T_24 : @[cpu.scala 114:41]
        node hi = mux(UInt<1>("h01"), UInt<31>("h07fffffff"), UInt<31>("h00")) @[Bitwise.scala 72:12]
        node _T_25 = cat(hi, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_26 = and(alu.io.result, _T_25) @[cpu.scala 115:30]
        next_pc <= _T_26 @[cpu.scala 115:13]
        skip @[cpu.scala 114:41]
      else : @[cpu.scala 116:54]
        node _T_27 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 116:31]
        node _T_28 = or(csr.io.eret, _T_27) @[cpu.scala 116:28]
        when _T_28 : @[cpu.scala 116:54]
          next_pc <= csr.io.evec @[cpu.scala 117:13]
          skip @[cpu.scala 116:54]
        else : @[cpu.scala 118:16]
          next_pc <= pcPlusFour.io.result @[cpu.scala 119:13]
          skip @[cpu.scala 118:16]
    pc <= next_pc @[cpu.scala 122:6]
    
  module DualPortedCombinMemory : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}, dmem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    io.imem.request.bits.operation is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.writedata is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.address is invalid @[base-memory-components.scala 32:19]
    io.imem.request.valid is invalid @[base-memory-components.scala 32:19]
    io.imem.request.ready is invalid @[base-memory-components.scala 32:19]
    io.dmem.request.bits.operation is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.writedata is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.address is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.valid is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.ready is invalid @[base-memory-components.scala 33:19]
    wire _WIRE : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 36:35]
    _WIRE.bits.data <= UInt<32>("h00") @[base-memory-components.scala 36:35]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 36:35]
    io.imem.response.bits.data <= _WIRE.bits.data @[base-memory-components.scala 36:20]
    io.imem.response.valid <= _WIRE.valid @[base-memory-components.scala 36:20]
    wire _WIRE_1 : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 37:35]
    _WIRE_1.bits.data <= UInt<32>("h00") @[base-memory-components.scala 37:35]
    _WIRE_1.valid <= UInt<1>("h00") @[base-memory-components.scala 37:35]
    io.dmem.response.bits.data <= _WIRE_1.bits.data @[base-memory-components.scala 37:20]
    io.dmem.response.valid <= _WIRE_1.valid @[base-memory-components.scala 37:20]
    cmem memory : UInt<32>[16384] @[base-memory-components.scala 39:19]
    io.imem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.imem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.imem.request.valid : @[memory.scala 25:32]
      node _T = eq(io.imem.request.bits.operation, UInt<1>("h00")) @[memory.scala 30:30]
      node _T_1 = asUInt(reset) @[memory.scala 30:11]
      node _T_2 = or(_T, _T_1) @[memory.scala 30:11]
      node _T_3 = eq(_T_2, UInt<1>("h00")) @[memory.scala 30:11]
      when _T_3 : @[memory.scala 30:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:30 assert(request.operation === Read)\n") @[memory.scala 30:11]
        stop(clock, UInt<1>(1), 1) @[memory.scala 30:11]
        skip @[memory.scala 30:11]
      node _T_4 = lt(io.imem.request.bits.address, UInt<17>("h010000")) @[memory.scala 35:27]
      when _T_4 : @[memory.scala 35:37]
        io.imem.response.valid <= UInt<1>("h01") @[memory.scala 36:30]
        node _T_5 = shr(io.imem.request.bits.address, 2) @[memory.scala 37:60]
        node _T_6 = bits(_T_5, 13, 0) @[memory.scala 37:43]
        infer mport MPORT = memory[_T_6], clock @[memory.scala 37:43]
        io.imem.response.bits.data <= MPORT @[memory.scala 37:34]
        skip @[memory.scala 35:37]
      else : @[memory.scala 38:18]
        io.imem.response.valid <= UInt<1>("h00") @[memory.scala 39:30]
        skip @[memory.scala 38:18]
      skip @[memory.scala 25:32]
    else : @[memory.scala 41:16]
      io.imem.response.valid <= UInt<1>("h00") @[memory.scala 42:28]
      skip @[memory.scala 41:16]
    io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.dmem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.dmem.request.valid : @[memory.scala 52:32]
      node _T_7 = neq(io.dmem.request.bits.operation, UInt<1>("h01")) @[memory.scala 56:31]
      node _T_8 = asUInt(reset) @[memory.scala 56:12]
      node _T_9 = or(_T_7, _T_8) @[memory.scala 56:12]
      node _T_10 = eq(_T_9, UInt<1>("h00")) @[memory.scala 56:12]
      when _T_10 : @[memory.scala 56:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:56 assert (request.operation =/= Write)\n") @[memory.scala 56:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 56:12]
        skip @[memory.scala 56:12]
      node _T_11 = lt(io.dmem.request.bits.address, UInt<17>("h010000")) @[memory.scala 58:29]
      node _T_12 = asUInt(reset) @[memory.scala 58:12]
      node _T_13 = or(_T_11, _T_12) @[memory.scala 58:12]
      node _T_14 = eq(_T_13, UInt<1>("h00")) @[memory.scala 58:12]
      when _T_14 : @[memory.scala 58:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:58 assert (request.address < size.U)\n") @[memory.scala 58:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 58:12]
        skip @[memory.scala 58:12]
      node _T_15 = shr(io.dmem.request.bits.address, 2) @[memory.scala 61:58]
      node _T_16 = bits(_T_15, 13, 0) @[memory.scala 61:46]
      read mport MPORT_1 = memory[_T_16], clock @[memory.scala 61:46]
      io.dmem.response.bits.data <= MPORT_1 @[memory.scala 61:32]
      io.dmem.response.valid <= UInt<1>("h01") @[memory.scala 62:28]
      node _T_17 = eq(io.dmem.request.bits.operation, UInt<2>("h02")) @[memory.scala 65:29]
      when _T_17 : @[memory.scala 65:44]
        node _T_18 = shr(io.dmem.request.bits.address, 2) @[memory.scala 66:25]
        node _T_19 = bits(_T_18, 13, 0) @[memory.scala 66:13]
        infer mport MPORT_2 = memory[_T_19], clock @[memory.scala 66:13]
        MPORT_2 <= io.dmem.request.bits.writedata @[memory.scala 66:31]
        skip @[memory.scala 65:44]
      skip @[memory.scala 52:32]
    else : @[memory.scala 68:16]
      io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 69:28]
      skip @[memory.scala 68:16]
    
  module ICombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _WIRE : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>} @[base-memory-components.scala 52:31]
    _WIRE.instruction <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    _WIRE.good <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _WIRE.address <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    io.pipeline.instruction <= _WIRE.instruction @[base-memory-components.scala 52:15]
    io.pipeline.good <= _WIRE.good @[base-memory-components.scala 52:15]
    _WIRE.valid <= io.pipeline.valid @[base-memory-components.scala 52:15]
    _WIRE.address <= io.pipeline.address @[base-memory-components.scala 52:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 57:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 57:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 57:15]
    when io.pipeline.valid : @[memory-combin-ports.scala 16:28]
      wire _WIRE_1 : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>} @[memory-combin-ports.scala 17:23]
      _WIRE_1.address <= io.pipeline.address @[memory-combin-ports.scala 18:23]
      _WIRE_1.operation <= UInt<1>("h00") @[memory-combin-ports.scala 19:23]
      _WIRE_1.writedata <= UInt<1>("h00") @[memory-combin-ports.scala 20:23]
      io.bus.request.bits.operation <= _WIRE_1.operation @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.writedata <= _WIRE_1.writedata @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.address <= _WIRE_1.address @[memory-combin-ports.scala 22:26]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 23:26]
      skip @[memory-combin-ports.scala 16:28]
    else : @[memory-combin-ports.scala 24:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 25:26]
      skip @[memory-combin-ports.scala 24:16]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 29:20]
    io.pipeline.instruction <= io.bus.response.bits.data @[memory-combin-ports.scala 30:27]
    
  module DCombinMemPort : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _WIRE : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>} @[base-memory-components.scala 69:31]
    _WIRE.readdata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _WIRE.sext <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.maskmode <= UInt<2>("h00") @[base-memory-components.scala 69:31]
    _WIRE.memwrite <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.memread <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.writedata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _WIRE.good <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.address <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    io.pipeline.readdata <= _WIRE.readdata @[base-memory-components.scala 69:15]
    _WIRE.sext <= io.pipeline.sext @[base-memory-components.scala 69:15]
    _WIRE.maskmode <= io.pipeline.maskmode @[base-memory-components.scala 69:15]
    _WIRE.memwrite <= io.pipeline.memwrite @[base-memory-components.scala 69:15]
    _WIRE.memread <= io.pipeline.memread @[base-memory-components.scala 69:15]
    _WIRE.writedata <= io.pipeline.writedata @[base-memory-components.scala 69:15]
    io.pipeline.good <= _WIRE.good @[base-memory-components.scala 69:15]
    _WIRE.valid <= io.pipeline.valid @[base-memory-components.scala 69:15]
    _WIRE.address <= io.pipeline.address @[base-memory-components.scala 69:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 74:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 74:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 74:15]
    io.pipeline.good <= io.bus.response.valid @[base-memory-components.scala 76:20]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 39:20]
    node _T = or(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 41:51]
    node _T_1 = and(io.pipeline.valid, _T) @[memory-combin-ports.scala 41:27]
    when _T_1 : @[memory-combin-ports.scala 41:77]
      node _T_2 = and(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 43:34]
      node _T_3 = eq(_T_2, UInt<1>("h00")) @[memory-combin-ports.scala 43:12]
      node _T_4 = asUInt(reset) @[memory-combin-ports.scala 43:11]
      node _T_5 = or(_T_3, _T_4) @[memory-combin-ports.scala 43:11]
      node _T_6 = eq(_T_5, UInt<1>("h00")) @[memory-combin-ports.scala 43:11]
      when _T_6 : @[memory-combin-ports.scala 43:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory-combin-ports.scala:43 assert(!(io.pipeline.memread && io.pipeline.memwrite))\n") @[memory-combin-ports.scala 43:11]
        stop(clock, UInt<1>(1), 1) @[memory-combin-ports.scala 43:11]
        skip @[memory-combin-ports.scala 43:11]
      io.bus.request.bits.address <= io.pipeline.address @[memory-combin-ports.scala 45:33]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 46:26]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 48:33]
        io.bus.request.bits.operation <= UInt<2>("h02") @[memory-combin-ports.scala 57:37]
        skip @[memory-combin-ports.scala 48:33]
      else : @[memory-combin-ports.scala 58:18]
        io.bus.request.bits.operation <= UInt<1>("h00") @[memory-combin-ports.scala 60:37]
        skip @[memory-combin-ports.scala 58:18]
      skip @[memory-combin-ports.scala 41:77]
    else : @[memory-combin-ports.scala 62:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 64:26]
      skip @[memory-combin-ports.scala 62:16]
    when io.bus.response.valid : @[memory-combin-ports.scala 68:32]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 69:33]
        wire _WIRE_1 : UInt<32> @[memory-combin-ports.scala 71:28]
        node _T_7 = neq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 74:34]
        when _T_7 : @[memory-combin-ports.scala 74:43]
          node _T_8 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 76:42]
          wire _WIRE_2 : UInt<32> @[memory-combin-ports.scala 77:29]
          _WIRE_2 <= io.bus.response.bits.data @[memory-combin-ports.scala 79:18]
          node _T_9 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 82:36]
          when _T_9 : @[memory-combin-ports.scala 82:45]
            node _T_10 = eq(_T_8, UInt<1>("h00")) @[memory-combin-ports.scala 83:23]
            when _T_10 : @[memory-combin-ports.scala 83:32]
              node hi = bits(_WIRE_2, 31, 8) @[memory-combin-ports.scala 84:38]
              node lo = bits(io.pipeline.writedata, 7, 0) @[memory-combin-ports.scala 84:67]
              node _T_11 = cat(hi, lo) @[Cat.scala 30:58]
              _WIRE_1 <= _T_11 @[memory-combin-ports.scala 84:23]
              skip @[memory-combin-ports.scala 83:32]
            else : @[memory-combin-ports.scala 85:38]
              node _T_12 = eq(_T_8, UInt<1>("h01")) @[memory-combin-ports.scala 85:29]
              when _T_12 : @[memory-combin-ports.scala 85:38]
                node hi_1 = bits(_WIRE_2, 31, 16) @[memory-combin-ports.scala 86:38]
                node hi_2 = bits(io.pipeline.writedata, 15, 8) @[memory-combin-ports.scala 86:72]
                node lo_1 = bits(_WIRE_2, 7, 0) @[memory-combin-ports.scala 86:88]
                node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
                node _T_13 = cat(hi_1, lo_2) @[Cat.scala 30:58]
                _WIRE_1 <= _T_13 @[memory-combin-ports.scala 86:23]
                skip @[memory-combin-ports.scala 85:38]
              else : @[memory-combin-ports.scala 87:38]
                node _T_14 = eq(_T_8, UInt<2>("h02")) @[memory-combin-ports.scala 87:29]
                when _T_14 : @[memory-combin-ports.scala 87:38]
                  node hi_3 = bits(_WIRE_2, 31, 24) @[memory-combin-ports.scala 88:38]
                  node hi_4 = bits(io.pipeline.writedata, 23, 16) @[memory-combin-ports.scala 88:72]
                  node lo_3 = bits(_WIRE_2, 15, 0) @[memory-combin-ports.scala 88:88]
                  node lo_4 = cat(hi_4, lo_3) @[Cat.scala 30:58]
                  node _T_15 = cat(hi_3, lo_4) @[Cat.scala 30:58]
                  _WIRE_1 <= _T_15 @[memory-combin-ports.scala 88:23]
                  skip @[memory-combin-ports.scala 87:38]
                else : @[memory-combin-ports.scala 89:23]
                  node hi_5 = bits(io.pipeline.writedata, 31, 24) @[memory-combin-ports.scala 90:51]
                  node lo_5 = bits(_WIRE_2, 23, 0) @[memory-combin-ports.scala 90:68]
                  node _T_16 = cat(hi_5, lo_5) @[Cat.scala 30:58]
                  _WIRE_1 <= _T_16 @[memory-combin-ports.scala 90:23]
                  skip @[memory-combin-ports.scala 89:23]
            skip @[memory-combin-ports.scala 82:45]
          else : @[memory-combin-ports.scala 92:22]
            node _T_17 = eq(_T_8, UInt<1>("h00")) @[memory-combin-ports.scala 93:24]
            when _T_17 : @[memory-combin-ports.scala 93:33]
              node hi_6 = bits(_WIRE_2, 31, 16) @[memory-combin-ports.scala 94:38]
              node lo_6 = bits(io.pipeline.writedata, 15, 0) @[memory-combin-ports.scala 94:67]
              node _T_18 = cat(hi_6, lo_6) @[Cat.scala 30:58]
              _WIRE_1 <= _T_18 @[memory-combin-ports.scala 94:23]
              skip @[memory-combin-ports.scala 93:33]
            else : @[memory-combin-ports.scala 95:23]
              node hi_7 = bits(io.pipeline.writedata, 31, 16) @[memory-combin-ports.scala 96:51]
              node lo_7 = bits(_WIRE_2, 15, 0) @[memory-combin-ports.scala 96:68]
              node _T_19 = cat(hi_7, lo_7) @[Cat.scala 30:58]
              _WIRE_1 <= _T_19 @[memory-combin-ports.scala 96:23]
              skip @[memory-combin-ports.scala 95:23]
            skip @[memory-combin-ports.scala 92:22]
          skip @[memory-combin-ports.scala 74:43]
        else : @[memory-combin-ports.scala 99:20]
          _WIRE_1 <= io.pipeline.writedata @[memory-combin-ports.scala 101:19]
          skip @[memory-combin-ports.scala 99:20]
        io.bus.request.bits.writedata <= _WIRE_1 @[memory-combin-ports.scala 104:37]
        skip @[memory-combin-ports.scala 69:33]
      else : @[memory-combin-ports.scala 105:39]
        when io.pipeline.memread : @[memory-combin-ports.scala 105:39]
          wire _WIRE_3 : UInt<32> @[memory-combin-ports.scala 107:36]
          wire _WIRE_4 : UInt<32> @[memory-combin-ports.scala 108:36]
          node _T_20 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 110:39]
          node _T_21 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 111:34]
          when _T_21 : @[memory-combin-ports.scala 111:43]
            node _T_22 = mul(_T_20, UInt<4>("h08")) @[memory-combin-ports.scala 113:64]
            node _T_23 = dshr(io.bus.response.bits.data, _T_22) @[memory-combin-ports.scala 113:53]
            node _T_24 = and(_T_23, UInt<8>("h0ff")) @[memory-combin-ports.scala 113:72]
            _WIRE_3 <= _T_24 @[memory-combin-ports.scala 113:23]
            skip @[memory-combin-ports.scala 111:43]
          else : @[memory-combin-ports.scala 114:50]
            node _T_25 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 114:41]
            when _T_25 : @[memory-combin-ports.scala 114:50]
              node _T_26 = mul(_T_20, UInt<4>("h08")) @[memory-combin-ports.scala 116:64]
              node _T_27 = dshr(io.bus.response.bits.data, _T_26) @[memory-combin-ports.scala 116:53]
              node _T_28 = and(_T_27, UInt<16>("h0ffff")) @[memory-combin-ports.scala 116:72]
              _WIRE_3 <= _T_28 @[memory-combin-ports.scala 116:23]
              skip @[memory-combin-ports.scala 114:50]
            else : @[memory-combin-ports.scala 117:20]
              _WIRE_3 <= io.bus.response.bits.data @[memory-combin-ports.scala 118:23]
              skip @[memory-combin-ports.scala 117:20]
          when io.pipeline.sext : @[memory-combin-ports.scala 121:31]
            node _T_29 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 122:36]
            when _T_29 : @[memory-combin-ports.scala 122:45]
              node _T_30 = bits(_WIRE_3, 7, 7) @[memory-combin-ports.scala 124:59]
              node _T_31 = bits(_T_30, 0, 0) @[Bitwise.scala 72:15]
              node hi_8 = mux(_T_31, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
              node lo_8 = bits(_WIRE_3, 7, 0) @[memory-combin-ports.scala 124:79]
              node _T_32 = cat(hi_8, lo_8) @[Cat.scala 30:58]
              _WIRE_4 <= _T_32 @[memory-combin-ports.scala 124:30]
              skip @[memory-combin-ports.scala 122:45]
            else : @[memory-combin-ports.scala 125:52]
              node _T_33 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 125:43]
              when _T_33 : @[memory-combin-ports.scala 125:52]
                node _T_34 = bits(_WIRE_3, 15, 15) @[memory-combin-ports.scala 127:59]
                node _T_35 = bits(_T_34, 0, 0) @[Bitwise.scala 72:15]
                node hi_9 = mux(_T_35, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                node lo_9 = bits(_WIRE_3, 15, 0) @[memory-combin-ports.scala 127:79]
                node _T_36 = cat(hi_9, lo_9) @[Cat.scala 30:58]
                _WIRE_4 <= _T_36 @[memory-combin-ports.scala 127:30]
                skip @[memory-combin-ports.scala 125:52]
              else : @[memory-combin-ports.scala 128:22]
                _WIRE_4 <= _WIRE_3 @[memory-combin-ports.scala 130:30]
                skip @[memory-combin-ports.scala 128:22]
            skip @[memory-combin-ports.scala 121:31]
          else : @[memory-combin-ports.scala 132:20]
            _WIRE_4 <= _WIRE_3 @[memory-combin-ports.scala 133:28]
            skip @[memory-combin-ports.scala 132:20]
          io.pipeline.readdata <= _WIRE_4 @[memory-combin-ports.scala 136:28]
          skip @[memory-combin-ports.scala 105:39]
      skip @[memory-combin-ports.scala 68:32]
    
  module Control_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip opcode : UInt<7>, validinst : UInt<1>, branch : UInt<1>, memread : UInt<1>, toreg : UInt<2>, add : UInt<1>, memwrite : UInt<1>, regwrite : UInt<1>, immediate : UInt<1>, alusrc1 : UInt<2>, jump : UInt<2>}
    
    node _T = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<6>("h033"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<5>("h013"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<2>("h03"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<6>("h023"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<7>("h063"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<6>("h037"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<5>("h017"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<7>("h06f"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_17 = eq(UInt<7>("h067"), _T_16) @[Lookup.scala 31:38]
    node _T_18 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_19 = eq(UInt<7>("h073"), _T_18) @[Lookup.scala 31:38]
    node _T_20 = mux(_T_19, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_21 = mux(_T_17, UInt<1>("h01"), _T_20) @[Lookup.scala 33:37]
    node _T_22 = mux(_T_15, UInt<1>("h01"), _T_21) @[Lookup.scala 33:37]
    node _T_23 = mux(_T_13, UInt<1>("h01"), _T_22) @[Lookup.scala 33:37]
    node _T_24 = mux(_T_11, UInt<1>("h01"), _T_23) @[Lookup.scala 33:37]
    node _T_25 = mux(_T_9, UInt<1>("h01"), _T_24) @[Lookup.scala 33:37]
    node _T_26 = mux(_T_7, UInt<1>("h01"), _T_25) @[Lookup.scala 33:37]
    node _T_27 = mux(_T_5, UInt<1>("h01"), _T_26) @[Lookup.scala 33:37]
    node _T_28 = mux(_T_3, UInt<1>("h01"), _T_27) @[Lookup.scala 33:37]
    node signals_0 = mux(_T_1, UInt<1>("h01"), _T_28) @[Lookup.scala 33:37]
    node _T_29 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_30 = mux(_T_17, UInt<1>("h00"), _T_29) @[Lookup.scala 33:37]
    node _T_31 = mux(_T_15, UInt<1>("h00"), _T_30) @[Lookup.scala 33:37]
    node _T_32 = mux(_T_13, UInt<1>("h00"), _T_31) @[Lookup.scala 33:37]
    node _T_33 = mux(_T_11, UInt<1>("h00"), _T_32) @[Lookup.scala 33:37]
    node _T_34 = mux(_T_9, UInt<1>("h01"), _T_33) @[Lookup.scala 33:37]
    node _T_35 = mux(_T_7, UInt<1>("h00"), _T_34) @[Lookup.scala 33:37]
    node _T_36 = mux(_T_5, UInt<1>("h00"), _T_35) @[Lookup.scala 33:37]
    node _T_37 = mux(_T_3, UInt<1>("h00"), _T_36) @[Lookup.scala 33:37]
    node signals_1 = mux(_T_1, UInt<1>("h00"), _T_37) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_17, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_15, UInt<1>("h00"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_13, UInt<1>("h00"), _T_40) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_11, UInt<1>("h00"), _T_41) @[Lookup.scala 33:37]
    node _T_43 = mux(_T_9, UInt<1>("h00"), _T_42) @[Lookup.scala 33:37]
    node _T_44 = mux(_T_7, UInt<1>("h00"), _T_43) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_5, UInt<1>("h01"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_3, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node signals_2 = mux(_T_1, UInt<1>("h00"), _T_46) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_19, UInt<2>("h03"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_17, UInt<2>("h02"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_15, UInt<2>("h02"), _T_48) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_13, UInt<1>("h00"), _T_49) @[Lookup.scala 33:37]
    node _T_51 = mux(_T_11, UInt<1>("h00"), _T_50) @[Lookup.scala 33:37]
    node _T_52 = mux(_T_9, UInt<1>("h00"), _T_51) @[Lookup.scala 33:37]
    node _T_53 = mux(_T_7, UInt<1>("h00"), _T_52) @[Lookup.scala 33:37]
    node _T_54 = mux(_T_5, UInt<1>("h01"), _T_53) @[Lookup.scala 33:37]
    node _T_55 = mux(_T_3, UInt<1>("h00"), _T_54) @[Lookup.scala 33:37]
    node signals_3 = mux(_T_1, UInt<1>("h00"), _T_55) @[Lookup.scala 33:37]
    node _T_56 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_57 = mux(_T_17, UInt<1>("h00"), _T_56) @[Lookup.scala 33:37]
    node _T_58 = mux(_T_15, UInt<1>("h00"), _T_57) @[Lookup.scala 33:37]
    node _T_59 = mux(_T_13, UInt<1>("h01"), _T_58) @[Lookup.scala 33:37]
    node _T_60 = mux(_T_11, UInt<1>("h01"), _T_59) @[Lookup.scala 33:37]
    node _T_61 = mux(_T_9, UInt<1>("h00"), _T_60) @[Lookup.scala 33:37]
    node _T_62 = mux(_T_7, UInt<1>("h01"), _T_61) @[Lookup.scala 33:37]
    node _T_63 = mux(_T_5, UInt<1>("h01"), _T_62) @[Lookup.scala 33:37]
    node _T_64 = mux(_T_3, UInt<1>("h00"), _T_63) @[Lookup.scala 33:37]
    node signals_4 = mux(_T_1, UInt<1>("h00"), _T_64) @[Lookup.scala 33:37]
    node _T_65 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_66 = mux(_T_17, UInt<1>("h00"), _T_65) @[Lookup.scala 33:37]
    node _T_67 = mux(_T_15, UInt<1>("h00"), _T_66) @[Lookup.scala 33:37]
    node _T_68 = mux(_T_13, UInt<1>("h00"), _T_67) @[Lookup.scala 33:37]
    node _T_69 = mux(_T_11, UInt<1>("h00"), _T_68) @[Lookup.scala 33:37]
    node _T_70 = mux(_T_9, UInt<1>("h00"), _T_69) @[Lookup.scala 33:37]
    node _T_71 = mux(_T_7, UInt<1>("h01"), _T_70) @[Lookup.scala 33:37]
    node _T_72 = mux(_T_5, UInt<1>("h00"), _T_71) @[Lookup.scala 33:37]
    node _T_73 = mux(_T_3, UInt<1>("h00"), _T_72) @[Lookup.scala 33:37]
    node signals_5 = mux(_T_1, UInt<1>("h00"), _T_73) @[Lookup.scala 33:37]
    node _T_74 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_75 = mux(_T_17, UInt<1>("h01"), _T_74) @[Lookup.scala 33:37]
    node _T_76 = mux(_T_15, UInt<1>("h00"), _T_75) @[Lookup.scala 33:37]
    node _T_77 = mux(_T_13, UInt<1>("h01"), _T_76) @[Lookup.scala 33:37]
    node _T_78 = mux(_T_11, UInt<1>("h01"), _T_77) @[Lookup.scala 33:37]
    node _T_79 = mux(_T_9, UInt<1>("h00"), _T_78) @[Lookup.scala 33:37]
    node _T_80 = mux(_T_7, UInt<1>("h01"), _T_79) @[Lookup.scala 33:37]
    node _T_81 = mux(_T_5, UInt<1>("h01"), _T_80) @[Lookup.scala 33:37]
    node _T_82 = mux(_T_3, UInt<1>("h01"), _T_81) @[Lookup.scala 33:37]
    node signals_6 = mux(_T_1, UInt<1>("h00"), _T_82) @[Lookup.scala 33:37]
    node _T_83 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_84 = mux(_T_17, UInt<1>("h01"), _T_83) @[Lookup.scala 33:37]
    node _T_85 = mux(_T_15, UInt<1>("h01"), _T_84) @[Lookup.scala 33:37]
    node _T_86 = mux(_T_13, UInt<1>("h01"), _T_85) @[Lookup.scala 33:37]
    node _T_87 = mux(_T_11, UInt<1>("h01"), _T_86) @[Lookup.scala 33:37]
    node _T_88 = mux(_T_9, UInt<1>("h00"), _T_87) @[Lookup.scala 33:37]
    node _T_89 = mux(_T_7, UInt<1>("h00"), _T_88) @[Lookup.scala 33:37]
    node _T_90 = mux(_T_5, UInt<1>("h01"), _T_89) @[Lookup.scala 33:37]
    node _T_91 = mux(_T_3, UInt<1>("h01"), _T_90) @[Lookup.scala 33:37]
    node signals_7 = mux(_T_1, UInt<1>("h01"), _T_91) @[Lookup.scala 33:37]
    node _T_92 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_93 = mux(_T_17, UInt<1>("h00"), _T_92) @[Lookup.scala 33:37]
    node _T_94 = mux(_T_15, UInt<1>("h01"), _T_93) @[Lookup.scala 33:37]
    node _T_95 = mux(_T_13, UInt<2>("h02"), _T_94) @[Lookup.scala 33:37]
    node _T_96 = mux(_T_11, UInt<1>("h01"), _T_95) @[Lookup.scala 33:37]
    node _T_97 = mux(_T_9, UInt<1>("h00"), _T_96) @[Lookup.scala 33:37]
    node _T_98 = mux(_T_7, UInt<1>("h00"), _T_97) @[Lookup.scala 33:37]
    node _T_99 = mux(_T_5, UInt<1>("h00"), _T_98) @[Lookup.scala 33:37]
    node _T_100 = mux(_T_3, UInt<1>("h00"), _T_99) @[Lookup.scala 33:37]
    node signals_8 = mux(_T_1, UInt<1>("h00"), _T_100) @[Lookup.scala 33:37]
    node _T_101 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_102 = mux(_T_17, UInt<2>("h03"), _T_101) @[Lookup.scala 33:37]
    node _T_103 = mux(_T_15, UInt<2>("h02"), _T_102) @[Lookup.scala 33:37]
    node _T_104 = mux(_T_13, UInt<1>("h00"), _T_103) @[Lookup.scala 33:37]
    node _T_105 = mux(_T_11, UInt<1>("h00"), _T_104) @[Lookup.scala 33:37]
    node _T_106 = mux(_T_9, UInt<1>("h00"), _T_105) @[Lookup.scala 33:37]
    node _T_107 = mux(_T_7, UInt<1>("h00"), _T_106) @[Lookup.scala 33:37]
    node _T_108 = mux(_T_5, UInt<1>("h00"), _T_107) @[Lookup.scala 33:37]
    node _T_109 = mux(_T_3, UInt<1>("h00"), _T_108) @[Lookup.scala 33:37]
    node signals_9 = mux(_T_1, UInt<1>("h00"), _T_109) @[Lookup.scala 33:37]
    io.validinst <= signals_0 @[control.scala 68:16]
    io.branch <= signals_1 @[control.scala 69:13]
    io.memread <= signals_2 @[control.scala 70:14]
    io.toreg <= signals_3 @[control.scala 71:12]
    io.add <= signals_4 @[control.scala 72:10]
    io.memwrite <= signals_5 @[control.scala 73:15]
    io.immediate <= signals_6 @[control.scala 74:16]
    io.regwrite <= signals_7 @[control.scala 75:15]
    io.alusrc1 <= signals_8 @[control.scala 76:14]
    io.jump <= signals_9 @[control.scala 77:11]
    
  module RegisterFile_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip readreg1 : UInt<5>, flip readreg2 : UInt<5>, flip writereg : UInt<5>, flip writedata : UInt<32>, flip wen : UInt<1>, readdata1 : UInt<32>, readdata2 : UInt<32>}
    
    reg regs : UInt<32>[32], clock @[register-file.scala 49:17]
    when io.wen : @[register-file.scala 52:17]
      regs[io.writereg] <= io.writedata @[register-file.scala 53:23]
      skip @[register-file.scala 52:17]
    io.readdata1 <= regs[io.readreg1] @[register-file.scala 58:16]
    io.readdata2 <= regs[io.readreg2] @[register-file.scala 59:16]
    
  module CSRRegFile_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip illegal_inst : UInt<1>, flip retire_inst : UInt<1>, flip pc : UInt<32>, flip read_data : UInt<32>, flip inst : UInt<32>, flip immid : UInt<32>, read_illegal : UInt<1>, write_illegal : UInt<1>, system_illegal : UInt<1>, csr_stall : UInt<1>, eret : UInt<1>, evec : UInt<32>, write_data : UInt<32>, reg_write : UInt<1>, status : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, time : UInt<32>}
    
    io.time is invalid @[csr.scala 205:6]
    io.status.uie is invalid @[csr.scala 205:6]
    io.status.sie is invalid @[csr.scala 205:6]
    io.status.wpri4 is invalid @[csr.scala 205:6]
    io.status.mie is invalid @[csr.scala 205:6]
    io.status.upie is invalid @[csr.scala 205:6]
    io.status.spie is invalid @[csr.scala 205:6]
    io.status.wpri3 is invalid @[csr.scala 205:6]
    io.status.mpie is invalid @[csr.scala 205:6]
    io.status.spp is invalid @[csr.scala 205:6]
    io.status.wpri2 is invalid @[csr.scala 205:6]
    io.status.mpp is invalid @[csr.scala 205:6]
    io.status.fs is invalid @[csr.scala 205:6]
    io.status.xs is invalid @[csr.scala 205:6]
    io.status.mprv is invalid @[csr.scala 205:6]
    io.status.sum is invalid @[csr.scala 205:6]
    io.status.mxr is invalid @[csr.scala 205:6]
    io.status.tvm is invalid @[csr.scala 205:6]
    io.status.tw is invalid @[csr.scala 205:6]
    io.status.tsr is invalid @[csr.scala 205:6]
    io.status.wpri1 is invalid @[csr.scala 205:6]
    io.status.sd is invalid @[csr.scala 205:6]
    io.reg_write is invalid @[csr.scala 205:6]
    io.write_data is invalid @[csr.scala 205:6]
    io.evec is invalid @[csr.scala 205:6]
    io.eret is invalid @[csr.scala 205:6]
    io.csr_stall is invalid @[csr.scala 205:6]
    io.system_illegal is invalid @[csr.scala 205:6]
    io.write_illegal is invalid @[csr.scala 205:6]
    io.read_illegal is invalid @[csr.scala 205:6]
    io.immid is invalid @[csr.scala 205:6]
    io.inst is invalid @[csr.scala 205:6]
    io.read_data is invalid @[csr.scala 205:6]
    io.pc is invalid @[csr.scala 205:6]
    io.retire_inst is invalid @[csr.scala 205:6]
    io.illegal_inst is invalid @[csr.scala 205:6]
    wire _WIRE : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 207:44]
    _WIRE.uie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.sie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri4 <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.upie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.spie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri3 <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mpie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.spp <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri2 <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.mpp <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.fs <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.xs <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.mprv <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.sum <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mxr <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tvm <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tw <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tsr <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri1 <= UInt<8>("h00") @[csr.scala 207:44]
    _WIRE.sd <= UInt<1>("h00") @[csr.scala 207:44]
    wire reset_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}
    reset_mstatus.uie <= _WIRE.uie
    reset_mstatus.sie <= _WIRE.sie
    reset_mstatus.wpri4 <= _WIRE.wpri4
    reset_mstatus.mie <= _WIRE.mie
    reset_mstatus.upie <= _WIRE.upie
    reset_mstatus.spie <= _WIRE.spie
    reset_mstatus.wpri3 <= _WIRE.wpri3
    reset_mstatus.mpie <= _WIRE.mpie
    reset_mstatus.spp <= _WIRE.spp
    reset_mstatus.wpri2 <= _WIRE.wpri2
    reset_mstatus.mpp <= _WIRE.mpp
    reset_mstatus.fs <= _WIRE.fs
    reset_mstatus.xs <= _WIRE.xs
    reset_mstatus.mprv <= _WIRE.mprv
    reset_mstatus.sum <= _WIRE.sum
    reset_mstatus.mxr <= _WIRE.mxr
    reset_mstatus.tvm <= _WIRE.tvm
    reset_mstatus.tw <= _WIRE.tw
    reset_mstatus.tsr <= _WIRE.tsr
    reset_mstatus.wpri1 <= _WIRE.wpri1
    reset_mstatus.sd <= _WIRE.sd
    reset_mstatus.mpp <= UInt<2>("h03") @[csr.scala 208:21]
    reset_mstatus.mie <= UInt<1>("h01") @[csr.scala 209:21]
    reg reg_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, reset_mstatus)) @[csr.scala 212:28]
    reg reg_mepc : UInt<32>, clock @[csr.scala 214:21]
    wire _WIRE_1 : {interrupt : UInt<1>, exceptioncode : UInt<31>} @[csr.scala 216:40]
    _WIRE_1.exceptioncode <= UInt<31>("h00") @[csr.scala 216:40]
    _WIRE_1.interrupt <= UInt<1>("h00") @[csr.scala 216:40]
    reg reg_mcause : {interrupt : UInt<1>, exceptioncode : UInt<31>}, clock with : (reset => (reset, _WIRE_1)) @[csr.scala 216:27]
    reg reg_mtval : UInt<32>, clock @[csr.scala 218:22]
    reg reg_mscratch : UInt<32>, clock @[csr.scala 220:25]
    reg reg_mtimecmp : UInt<64>, clock @[csr.scala 222:25]
    reg reg_medeleg : UInt<32>, clock @[csr.scala 226:24]
    wire _WIRE_2 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 229:37]
    _WIRE_2.usix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.ssix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri4 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.msix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.utix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.stix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri3 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.mtix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.ueix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.seix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri2 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.meix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri1 <= UInt<20>("h00") @[csr.scala 229:37]
    reg reg_mip : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _WIRE_2)) @[csr.scala 229:24]
    wire _WIRE_3 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 231:37]
    _WIRE_3.usix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.ssix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri4 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.msix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.utix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.stix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri3 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.mtix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.ueix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.seix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri2 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.meix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri1 <= UInt<20>("h00") @[csr.scala 231:37]
    reg reg_mie : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _WIRE_3)) @[csr.scala 231:24]
    reg reg_wfi : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 234:24]
    wire _WIRE_4 : {base : UInt<30>, mode : UInt<2>} @[csr.scala 236:39]
    _WIRE_4.mode <= UInt<2>("h00") @[csr.scala 236:39]
    _WIRE_4.base <= UInt<30>("h00") @[csr.scala 236:39]
    reg reg_mtvec : {base : UInt<30>, mode : UInt<2>}, clock with : (reset => (reset, _WIRE_4)) @[csr.scala 236:26]
    reg lo : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T = add(lo, UInt<1>("h01")) @[csr.scala 544:33]
    lo <= _T @[csr.scala 545:9]
    reg hi : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_1 = bits(_T, 6, 6) @[csr.scala 549:20]
    when _T_1 : @[csr.scala 549:34]
      node _T_2 = add(hi, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_3 = tail(_T_2, 1) @[csr.scala 549:43]
      hi <= _T_3 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    reg lo_1 : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T_5 = add(lo_1, io.retire_inst) @[csr.scala 544:33]
    lo_1 <= _T_5 @[csr.scala 545:9]
    reg hi_1 : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_6 = bits(_T_5, 6, 6) @[csr.scala 549:20]
    when _T_6 : @[csr.scala 549:34]
      node _T_7 = add(hi_1, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_8 = tail(_T_7, 1) @[csr.scala 549:43]
      hi_1 <= _T_8 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_9 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    wire _WIRE_5 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 242:49]
    _WIRE_5.cy <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.tmzero <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.ir <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm3 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm4 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm5 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm6 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm7 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm8 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm9 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm10 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm11 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm12 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm13 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm14 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm15 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm16 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm17 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm18 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm19 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm20 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm21 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm22 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm23 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm24 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm25 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm26 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm27 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm28 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm29 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm30 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm31 <= UInt<1>("h00") @[csr.scala 242:49]
    reg reg_mcounterinhibit : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _WIRE_5)) @[csr.scala 242:36]
    wire _WIRE_6 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 244:44]
    _WIRE_6.cy <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.tmzero <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.ir <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm3 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm4 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm5 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm6 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm7 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm8 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm9 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm10 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm11 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm12 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm13 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm14 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm15 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm16 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm17 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm18 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm19 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm20 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm21 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm22 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm23 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm24 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm25 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm26 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm27 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm28 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm29 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm30 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm31 <= UInt<1>("h00") @[csr.scala 244:44]
    reg reg_mcounteren : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _WIRE_6)) @[csr.scala 244:31]
    node lo_lo_lo = cat(io.status.sie, io.status.uie) @[csr.scala 246:38]
    node lo_lo_hi_hi = cat(io.status.upie, io.status.mie) @[csr.scala 246:38]
    node lo_lo_hi = cat(lo_lo_hi_hi, io.status.wpri4) @[csr.scala 246:38]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[csr.scala 246:38]
    node lo_hi_lo = cat(io.status.wpri3, io.status.spie) @[csr.scala 246:38]
    node lo_hi_hi_hi = cat(io.status.wpri2, io.status.spp) @[csr.scala 246:38]
    node lo_hi_hi = cat(lo_hi_hi_hi, io.status.mpie) @[csr.scala 246:38]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[csr.scala 246:38]
    node lo_2 = cat(lo_hi, lo_lo) @[csr.scala 246:38]
    node hi_lo_lo = cat(io.status.fs, io.status.mpp) @[csr.scala 246:38]
    node hi_lo_hi_hi = cat(io.status.sum, io.status.mprv) @[csr.scala 246:38]
    node hi_lo_hi = cat(hi_lo_hi_hi, io.status.xs) @[csr.scala 246:38]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[csr.scala 246:38]
    node hi_hi_lo_hi = cat(io.status.tw, io.status.tvm) @[csr.scala 246:38]
    node hi_hi_lo = cat(hi_hi_lo_hi, io.status.mxr) @[csr.scala 246:38]
    node hi_hi_hi_hi = cat(io.status.sd, io.status.wpri1) @[csr.scala 246:38]
    node hi_hi_hi = cat(hi_hi_hi_hi, io.status.tsr) @[csr.scala 246:38]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[csr.scala 246:38]
    node hi_2 = cat(hi_hi, hi_lo) @[csr.scala 246:38]
    node read_mstatus = cat(hi_2, lo_2) @[csr.scala 246:38]
    wire _WIRE_7 : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>} @[csr.scala 253:39]
    _WIRE_7.extensions <= UInt<26>("h010") @[csr.scala 253:39]
    _WIRE_7.wlrl <= UInt<4>("h00") @[csr.scala 253:39]
    _WIRE_7.mxl <= UInt<2>("h00") @[csr.scala 253:39]
    reg reg_misa : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>}, clock with : (reset => (reset, _WIRE_7)) @[csr.scala 253:25]
    wire _WIRE_8 : {bank : UInt<25>, offset : UInt<7>} @[csr.scala 255:43]
    _WIRE_8.offset <= UInt<7>("h00") @[csr.scala 255:43]
    _WIRE_8.bank <= UInt<25>("h00") @[csr.scala 255:43]
    reg reg_mvendorid : {bank : UInt<25>, offset : UInt<7>}, clock with : (reset => (reset, _WIRE_8)) @[csr.scala 255:30]
    node lo_lo_lo_lo = cat(reg_mcounterinhibit.tmzero, reg_mcounterinhibit.cy) @[csr.scala 260:50]
    node lo_lo_lo_hi = cat(reg_mcounterinhibit.hpm3, reg_mcounterinhibit.ir) @[csr.scala 260:50]
    node lo_lo_lo_1 = cat(lo_lo_lo_hi, lo_lo_lo_lo) @[csr.scala 260:50]
    node lo_lo_hi_lo = cat(reg_mcounterinhibit.hpm5, reg_mcounterinhibit.hpm4) @[csr.scala 260:50]
    node lo_lo_hi_hi_1 = cat(reg_mcounterinhibit.hpm7, reg_mcounterinhibit.hpm6) @[csr.scala 260:50]
    node lo_lo_hi_1 = cat(lo_lo_hi_hi_1, lo_lo_hi_lo) @[csr.scala 260:50]
    node lo_lo_1 = cat(lo_lo_hi_1, lo_lo_lo_1) @[csr.scala 260:50]
    node lo_hi_lo_lo = cat(reg_mcounterinhibit.hpm9, reg_mcounterinhibit.hpm8) @[csr.scala 260:50]
    node lo_hi_lo_hi = cat(reg_mcounterinhibit.hpm11, reg_mcounterinhibit.hpm10) @[csr.scala 260:50]
    node lo_hi_lo_1 = cat(lo_hi_lo_hi, lo_hi_lo_lo) @[csr.scala 260:50]
    node lo_hi_hi_lo = cat(reg_mcounterinhibit.hpm13, reg_mcounterinhibit.hpm12) @[csr.scala 260:50]
    node lo_hi_hi_hi_1 = cat(reg_mcounterinhibit.hpm15, reg_mcounterinhibit.hpm14) @[csr.scala 260:50]
    node lo_hi_hi_1 = cat(lo_hi_hi_hi_1, lo_hi_hi_lo) @[csr.scala 260:50]
    node lo_hi_1 = cat(lo_hi_hi_1, lo_hi_lo_1) @[csr.scala 260:50]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[csr.scala 260:50]
    node hi_lo_lo_lo = cat(reg_mcounterinhibit.hpm17, reg_mcounterinhibit.hpm16) @[csr.scala 260:50]
    node hi_lo_lo_hi = cat(reg_mcounterinhibit.hpm19, reg_mcounterinhibit.hpm18) @[csr.scala 260:50]
    node hi_lo_lo_1 = cat(hi_lo_lo_hi, hi_lo_lo_lo) @[csr.scala 260:50]
    node hi_lo_hi_lo = cat(reg_mcounterinhibit.hpm21, reg_mcounterinhibit.hpm20) @[csr.scala 260:50]
    node hi_lo_hi_hi_1 = cat(reg_mcounterinhibit.hpm23, reg_mcounterinhibit.hpm22) @[csr.scala 260:50]
    node hi_lo_hi_1 = cat(hi_lo_hi_hi_1, hi_lo_hi_lo) @[csr.scala 260:50]
    node hi_lo_1 = cat(hi_lo_hi_1, hi_lo_lo_1) @[csr.scala 260:50]
    node hi_hi_lo_lo = cat(reg_mcounterinhibit.hpm25, reg_mcounterinhibit.hpm24) @[csr.scala 260:50]
    node hi_hi_lo_hi_1 = cat(reg_mcounterinhibit.hpm27, reg_mcounterinhibit.hpm26) @[csr.scala 260:50]
    node hi_hi_lo_1 = cat(hi_hi_lo_hi_1, hi_hi_lo_lo) @[csr.scala 260:50]
    node hi_hi_hi_lo = cat(reg_mcounterinhibit.hpm29, reg_mcounterinhibit.hpm28) @[csr.scala 260:50]
    node hi_hi_hi_hi_1 = cat(reg_mcounterinhibit.hpm31, reg_mcounterinhibit.hpm30) @[csr.scala 260:50]
    node hi_hi_hi_1 = cat(hi_hi_hi_hi_1, hi_hi_hi_lo) @[csr.scala 260:50]
    node hi_hi_1 = cat(hi_hi_hi_1, hi_hi_lo_1) @[csr.scala 260:50]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[csr.scala 260:50]
    node _T_10 = cat(hi_3, lo_3) @[csr.scala 260:50]
    node hi_4 = cat(reg_misa.mxl, reg_misa.wlrl) @[csr.scala 266:28]
    node _T_11 = cat(hi_4, reg_misa.extensions) @[csr.scala 266:28]
    node lo_lo_hi_2 = cat(reg_mip.wpri4, reg_mip.ssix) @[csr.scala 269:32]
    node lo_lo_2 = cat(lo_lo_hi_2, reg_mip.usix) @[csr.scala 269:32]
    node lo_hi_hi_2 = cat(reg_mip.stix, reg_mip.utix) @[csr.scala 269:32]
    node lo_hi_2 = cat(lo_hi_hi_2, reg_mip.msix) @[csr.scala 269:32]
    node lo_4 = cat(lo_hi_2, lo_lo_2) @[csr.scala 269:32]
    node hi_lo_hi_2 = cat(reg_mip.ueix, reg_mip.mtix) @[csr.scala 269:32]
    node hi_lo_2 = cat(hi_lo_hi_2, reg_mip.wpri3) @[csr.scala 269:32]
    node hi_hi_lo_2 = cat(reg_mip.wpri2, reg_mip.seix) @[csr.scala 269:32]
    node hi_hi_hi_2 = cat(reg_mip.wpri1, reg_mip.meix) @[csr.scala 269:32]
    node hi_hi_2 = cat(hi_hi_hi_2, hi_hi_lo_2) @[csr.scala 269:32]
    node hi_5 = cat(hi_hi_2, hi_lo_2) @[csr.scala 269:32]
    node _T_12 = cat(hi_5, lo_4) @[csr.scala 269:32]
    node lo_lo_hi_3 = cat(reg_mie.wpri4, reg_mie.ssix) @[csr.scala 270:32]
    node lo_lo_3 = cat(lo_lo_hi_3, reg_mie.usix) @[csr.scala 270:32]
    node lo_hi_hi_3 = cat(reg_mie.stix, reg_mie.utix) @[csr.scala 270:32]
    node lo_hi_3 = cat(lo_hi_hi_3, reg_mie.msix) @[csr.scala 270:32]
    node lo_5 = cat(lo_hi_3, lo_lo_3) @[csr.scala 270:32]
    node hi_lo_hi_3 = cat(reg_mie.ueix, reg_mie.mtix) @[csr.scala 270:32]
    node hi_lo_3 = cat(hi_lo_hi_3, reg_mie.wpri3) @[csr.scala 270:32]
    node hi_hi_lo_3 = cat(reg_mie.wpri2, reg_mie.seix) @[csr.scala 270:32]
    node hi_hi_hi_3 = cat(reg_mie.wpri1, reg_mie.meix) @[csr.scala 270:32]
    node hi_hi_3 = cat(hi_hi_hi_3, hi_hi_lo_3) @[csr.scala 270:32]
    node hi_6 = cat(hi_hi_3, hi_lo_3) @[csr.scala 270:32]
    node _T_13 = cat(hi_6, lo_5) @[csr.scala 270:32]
    node _T_14 = cat(reg_mcause.interrupt, reg_mcause.exceptioncode) @[csr.scala 274:38]
    wire cmd : UInt<3>
    cmd <= UInt<3>("h03")
    node _T_15 = bits(io.inst, 6, 0) @[csr.scala 284:16]
    node _T_16 = eq(_T_15, UInt<7>("h073")) @[csr.scala 284:23]
    when _T_16 : @[csr.scala 284:42]
      node _T_17 = bits(io.inst, 14, 12) @[csr.scala 285:19]
      node _T_18 = eq(UInt<2>("h03"), _T_17) @[Conditional.scala 37:30]
      when _T_18 : @[Conditional.scala 40:58]
        cmd <= UInt<3>("h03") @[csr.scala 287:13]
        io.reg_write <= UInt<1>("h01") @[csr.scala 288:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_19 = eq(UInt<3>("h07"), _T_17) @[Conditional.scala 37:30]
        when _T_19 : @[Conditional.scala 39:67]
          cmd <= UInt<3>("h03") @[csr.scala 291:13]
          io.reg_write <= UInt<1>("h01") @[csr.scala 292:22]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_20 = eq(UInt<2>("h02"), _T_17) @[Conditional.scala 37:30]
          when _T_20 : @[Conditional.scala 39:67]
            cmd <= UInt<3>("h02") @[csr.scala 295:13]
            io.reg_write <= UInt<1>("h01") @[csr.scala 296:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_21 = eq(UInt<3>("h06"), _T_17) @[Conditional.scala 37:30]
            when _T_21 : @[Conditional.scala 39:67]
              cmd <= UInt<3>("h02") @[csr.scala 299:13]
              io.reg_write <= UInt<1>("h01") @[csr.scala 300:22]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_22 = eq(UInt<1>("h01"), _T_17) @[Conditional.scala 37:30]
              when _T_22 : @[Conditional.scala 39:67]
                cmd <= UInt<3>("h01") @[csr.scala 303:13]
                io.reg_write <= UInt<1>("h01") @[csr.scala 304:22]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_23 = eq(UInt<3>("h05"), _T_17) @[Conditional.scala 37:30]
                when _T_23 : @[Conditional.scala 39:67]
                  cmd <= UInt<3>("h01") @[csr.scala 307:13]
                  io.reg_write <= UInt<1>("h01") @[csr.scala 308:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_24 = eq(UInt<1>("h00"), _T_17) @[Conditional.scala 37:30]
                  when _T_24 : @[Conditional.scala 39:67]
                    cmd <= UInt<3>("h04") @[csr.scala 311:13]
                    io.reg_write <= UInt<1>("h00") @[csr.scala 312:22]
                    skip @[Conditional.scala 39:67]
      skip @[csr.scala 284:42]
    else : @[csr.scala 315:14]
      cmd <= UInt<3>("h00") @[csr.scala 316:9]
      io.reg_write <= UInt<1>("h00") @[csr.scala 317:18]
      skip @[csr.scala 315:14]
    node csr = bits(io.inst, 31, 20) @[csr.scala 320:20]
    node system_insn = eq(cmd, UInt<3>("h04")) @[csr.scala 321:25]
    node _T_25 = neq(cmd, UInt<3>("h00")) @[csr.scala 322:21]
    node _T_26 = eq(system_insn, UInt<1>("h00")) @[csr.scala 322:40]
    node cpu_ren = and(_T_25, _T_26) @[csr.scala 322:37]
    node _T_27 = eq(csr, UInt<10>("h0320")) @[csr.scala 327:66]
    node _T_28 = eq(csr, UInt<12>("h0b00")) @[csr.scala 327:66]
    node _T_29 = eq(csr, UInt<12>("h0b02")) @[csr.scala 327:66]
    node _T_30 = eq(csr, UInt<12>("h0f13")) @[csr.scala 327:66]
    node _T_31 = eq(csr, UInt<12>("h0f12")) @[csr.scala 327:66]
    node _T_32 = eq(csr, UInt<12>("h0f11")) @[csr.scala 327:66]
    node _T_33 = eq(csr, UInt<10>("h0301")) @[csr.scala 327:66]
    node _T_34 = eq(csr, UInt<10>("h0300")) @[csr.scala 327:66]
    node _T_35 = eq(csr, UInt<10>("h0305")) @[csr.scala 327:66]
    node _T_36 = eq(csr, UInt<10>("h0344")) @[csr.scala 327:66]
    node _T_37 = eq(csr, UInt<10>("h0304")) @[csr.scala 327:66]
    node _T_38 = eq(csr, UInt<10>("h0340")) @[csr.scala 327:66]
    node _T_39 = eq(csr, UInt<10>("h0341")) @[csr.scala 327:66]
    node _T_40 = eq(csr, UInt<10>("h0343")) @[csr.scala 327:66]
    node _T_41 = eq(csr, UInt<10>("h0342")) @[csr.scala 327:66]
    node _T_42 = eq(csr, UInt<12>("h0f14")) @[csr.scala 327:66]
    node _T_43 = eq(csr, UInt<10>("h0302")) @[csr.scala 327:66]
    node _T_44 = eq(csr, UInt<12>("h0b80")) @[csr.scala 327:66]
    node _T_45 = eq(csr, UInt<12>("h0b82")) @[csr.scala 327:66]
    node _T_46 = bits(csr, 9, 8) @[csr.scala 328:44]
    node priv_sufficient = geq(UInt<2>("h03"), _T_46) @[csr.scala 328:38]
    node _T_47 = bits(csr, 11, 10) @[csr.scala 329:22]
    node read_only = andr(_T_47) @[csr.scala 329:30]
    node _T_48 = neq(cmd, UInt<3>("h05")) @[csr.scala 330:32]
    node _T_49 = and(cpu_ren, _T_48) @[csr.scala 330:25]
    node cpu_wen = and(_T_49, priv_sufficient) @[csr.scala 330:49]
    node _T_50 = eq(read_only, UInt<1>("h00")) @[csr.scala 331:24]
    node wen = and(cpu_wen, _T_50) @[csr.scala 331:21]
    node _T_51 = bits(io.inst, 14, 14) @[csr.scala 332:84]
    node _T_52 = mux(_T_51, io.immid, io.read_data) @[csr.scala 332:76]
    node _T_53 = eq(cmd, UInt<3>("h02")) @[csr.scala 534:46]
    node _T_54 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:46]
    node _T_55 = or(_T_53, _T_54) @[csr.scala 534:61]
    node _T_56 = mux(_T_55, io.write_data, UInt<1>("h00")) @[csr.scala 534:5]
    node _T_57 = or(_T_56, _T_52) @[csr.scala 534:79]
    node _T_58 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:99]
    node _T_59 = mux(_T_58, _T_52, UInt<1>("h00")) @[csr.scala 534:94]
    node _T_60 = not(_T_59) @[csr.scala 534:90]
    node wdata = and(_T_57, _T_60) @[csr.scala 534:88]
    node _T_61 = bits(csr, 2, 0) @[csr.scala 335:26]
    node opcode = dshl(UInt<1>("h01"), _T_61) @[csr.scala 335:20]
    node _T_62 = bits(opcode, 0, 0) @[csr.scala 336:40]
    node insn_call = and(system_insn, _T_62) @[csr.scala 336:31]
    node _T_63 = bits(opcode, 1, 1) @[csr.scala 337:41]
    node insn_break = and(system_insn, _T_63) @[csr.scala 337:32]
    node _T_64 = bits(opcode, 2, 2) @[csr.scala 338:39]
    node _T_65 = and(system_insn, _T_64) @[csr.scala 338:30]
    node insn_ret = and(_T_65, priv_sufficient) @[csr.scala 338:43]
    node _T_66 = bits(opcode, 5, 5) @[csr.scala 340:39]
    node _T_67 = and(system_insn, _T_66) @[csr.scala 340:30]
    node insn_wfi = and(_T_67, priv_sufficient) @[csr.scala 340:43]
    node _T_68 = bits(csr, 9, 8) @[csr.scala 343:31]
    node _T_69 = lt(UInt<2>("h03"), _T_68) @[csr.scala 343:26]
    node _T_70 = eq(csr, UInt<10>("h0320")) @[csr.scala 342:99]
    node _T_71 = eq(csr, UInt<12>("h0b00")) @[csr.scala 342:99]
    node _T_72 = eq(csr, UInt<12>("h0b02")) @[csr.scala 342:99]
    node _T_73 = eq(csr, UInt<12>("h0f13")) @[csr.scala 342:99]
    node _T_74 = eq(csr, UInt<12>("h0f12")) @[csr.scala 342:99]
    node _T_75 = eq(csr, UInt<12>("h0f11")) @[csr.scala 342:99]
    node _T_76 = eq(csr, UInt<10>("h0301")) @[csr.scala 342:99]
    node _T_77 = eq(csr, UInt<10>("h0300")) @[csr.scala 342:99]
    node _T_78 = eq(csr, UInt<10>("h0305")) @[csr.scala 342:99]
    node _T_79 = eq(csr, UInt<10>("h0344")) @[csr.scala 342:99]
    node _T_80 = eq(csr, UInt<10>("h0304")) @[csr.scala 342:99]
    node _T_81 = eq(csr, UInt<10>("h0340")) @[csr.scala 342:99]
    node _T_82 = eq(csr, UInt<10>("h0341")) @[csr.scala 342:99]
    node _T_83 = eq(csr, UInt<10>("h0343")) @[csr.scala 342:99]
    node _T_84 = eq(csr, UInt<10>("h0342")) @[csr.scala 342:99]
    node _T_85 = eq(csr, UInt<12>("h0f14")) @[csr.scala 342:99]
    node _T_86 = eq(csr, UInt<10>("h0302")) @[csr.scala 342:99]
    node _T_87 = eq(csr, UInt<12>("h0b80")) @[csr.scala 342:99]
    node _T_88 = eq(csr, UInt<12>("h0b82")) @[csr.scala 342:99]
    node _T_89 = or(_T_70, _T_71) @[csr.scala 342:119]
    node _T_90 = or(_T_89, _T_72) @[csr.scala 342:119]
    node _T_91 = or(_T_90, _T_73) @[csr.scala 342:119]
    node _T_92 = or(_T_91, _T_74) @[csr.scala 342:119]
    node _T_93 = or(_T_92, _T_75) @[csr.scala 342:119]
    node _T_94 = or(_T_93, _T_76) @[csr.scala 342:119]
    node _T_95 = or(_T_94, _T_77) @[csr.scala 342:119]
    node _T_96 = or(_T_95, _T_78) @[csr.scala 342:119]
    node _T_97 = or(_T_96, _T_79) @[csr.scala 342:119]
    node _T_98 = or(_T_97, _T_80) @[csr.scala 342:119]
    node _T_99 = or(_T_98, _T_81) @[csr.scala 342:119]
    node _T_100 = or(_T_99, _T_82) @[csr.scala 342:119]
    node _T_101 = or(_T_100, _T_83) @[csr.scala 342:119]
    node _T_102 = or(_T_101, _T_84) @[csr.scala 342:119]
    node _T_103 = or(_T_102, _T_85) @[csr.scala 342:119]
    node _T_104 = or(_T_103, _T_86) @[csr.scala 342:119]
    node _T_105 = or(_T_104, _T_87) @[csr.scala 342:119]
    node _T_106 = or(_T_105, _T_88) @[csr.scala 342:119]
    node _T_107 = eq(_T_106, UInt<1>("h00")) @[csr.scala 343:40]
    node _T_108 = or(_T_69, _T_107) @[csr.scala 343:37]
    io.read_illegal <= _T_108 @[csr.scala 343:19]
    node _T_109 = bits(csr, 11, 10) @[csr.scala 344:26]
    node _T_110 = andr(_T_109) @[csr.scala 344:34]
    io.write_illegal <= _T_110 @[csr.scala 344:20]
    node _T_111 = bits(csr, 9, 8) @[csr.scala 345:33]
    node _T_112 = lt(UInt<2>("h03"), _T_111) @[csr.scala 345:28]
    io.system_illegal <= _T_112 @[csr.scala 345:21]
    io.status.uie <= reg_mstatus.uie @[csr.scala 347:13]
    io.status.sie <= reg_mstatus.sie @[csr.scala 347:13]
    io.status.wpri4 <= reg_mstatus.wpri4 @[csr.scala 347:13]
    io.status.mie <= reg_mstatus.mie @[csr.scala 347:13]
    io.status.upie <= reg_mstatus.upie @[csr.scala 347:13]
    io.status.spie <= reg_mstatus.spie @[csr.scala 347:13]
    io.status.wpri3 <= reg_mstatus.wpri3 @[csr.scala 347:13]
    io.status.mpie <= reg_mstatus.mpie @[csr.scala 347:13]
    io.status.spp <= reg_mstatus.spp @[csr.scala 347:13]
    io.status.wpri2 <= reg_mstatus.wpri2 @[csr.scala 347:13]
    io.status.mpp <= reg_mstatus.mpp @[csr.scala 347:13]
    io.status.fs <= reg_mstatus.fs @[csr.scala 347:13]
    io.status.xs <= reg_mstatus.xs @[csr.scala 347:13]
    io.status.mprv <= reg_mstatus.mprv @[csr.scala 347:13]
    io.status.sum <= reg_mstatus.sum @[csr.scala 347:13]
    io.status.mxr <= reg_mstatus.mxr @[csr.scala 347:13]
    io.status.tvm <= reg_mstatus.tvm @[csr.scala 347:13]
    io.status.tw <= reg_mstatus.tw @[csr.scala 347:13]
    io.status.tsr <= reg_mstatus.tsr @[csr.scala 347:13]
    io.status.wpri1 <= reg_mstatus.wpri1 @[csr.scala 347:13]
    io.status.sd <= reg_mstatus.sd @[csr.scala 347:13]
    node _T_113 = or(insn_call, insn_break) @[csr.scala 349:24]
    node _T_114 = or(_T_113, insn_ret) @[csr.scala 349:38]
    io.eret <= _T_114 @[csr.scala 349:11]
    when io.illegal_inst : @[csr.scala 352:26]
      node _T_115 = and(UInt<2>("h02"), UInt<32>("h080000000")) @[csr.scala 353:57]
      reg_mcause.interrupt <= _T_115 @[csr.scala 353:26]
      node _T_116 = and(UInt<2>("h02"), UInt<31>("h07fffffff")) @[csr.scala 354:61]
      reg_mcause.exceptioncode <= _T_116 @[csr.scala 354:30]
      io.evec <= UInt<32>("h080000000") @[csr.scala 355:13]
      reg_mepc <= io.pc @[csr.scala 356:14]
      skip @[csr.scala 352:26]
    node _T_117 = geq(_T_4, reg_mtimecmp) @[csr.scala 381:25]
    when _T_117 : @[csr.scala 381:42]
      reg_mip.mtix <= UInt<1>("h01") @[csr.scala 382:20]
      skip @[csr.scala 381:42]
    node _T_118 = bits(csr, 10, 10) @[csr.scala 386:25]
    node _T_119 = eq(_T_118, UInt<1>("h00")) @[csr.scala 386:21]
    node _T_120 = and(insn_ret, _T_119) @[csr.scala 386:18]
    when _T_120 : @[csr.scala 386:31]
      reg_mstatus.mie <= reg_mstatus.mpie @[csr.scala 387:21]
      reg_mstatus.mpie <= UInt<1>("h01") @[csr.scala 388:22]
      io.evec <= reg_mepc @[csr.scala 389:13]
      skip @[csr.scala 386:31]
    when insn_call : @[csr.scala 393:18]
      io.evec <= UInt<32>("h080000004") @[csr.scala 394:13]
      node _T_121 = and(UInt<4>("h0b"), UInt<32>("h080000000")) @[csr.scala 395:51]
      reg_mcause.interrupt <= _T_121 @[csr.scala 395:26]
      node _T_122 = and(UInt<4>("h0b"), UInt<31>("h07fffffff")) @[csr.scala 396:55]
      reg_mcause.exceptioncode <= _T_122 @[csr.scala 396:30]
      skip @[csr.scala 393:18]
    when insn_break : @[csr.scala 400:19]
      io.evec <= UInt<32>("h080000008") @[csr.scala 401:13]
      node _T_123 = and(UInt<2>("h03"), UInt<32>("h080000000")) @[csr.scala 402:48]
      reg_mcause.interrupt <= _T_123 @[csr.scala 402:26]
      node _T_124 = and(UInt<2>("h03"), UInt<31>("h07fffffff")) @[csr.scala 403:52]
      reg_mcause.exceptioncode <= _T_124 @[csr.scala 403:30]
      skip @[csr.scala 400:19]
    io.time <= _T_4 @[csr.scala 406:11]
    io.csr_stall <= reg_wfi @[csr.scala 407:16]
    node _T_125 = mux(_T_27, _T_10, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_126 = mux(_T_28, _T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_127 = mux(_T_29, _T_9, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_128 = mux(_T_30, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_129 = mux(_T_31, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_130 = mux(_T_32, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_131 = mux(_T_33, _T_11, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_132 = mux(_T_34, read_mstatus, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_133 = mux(_T_35, UInt<32>("h080000000"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_134 = mux(_T_36, _T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_135 = mux(_T_37, _T_13, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_136 = mux(_T_38, reg_mscratch, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_137 = mux(_T_39, reg_mepc, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_138 = mux(_T_40, reg_mtval, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_139 = mux(_T_41, _T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_140 = mux(_T_42, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_141 = mux(_T_43, reg_medeleg, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_142 = mux(_T_44, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_143 = mux(_T_45, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_144 = or(_T_125, _T_126) @[Mux.scala 27:72]
    node _T_145 = or(_T_144, _T_127) @[Mux.scala 27:72]
    node _T_146 = or(_T_145, _T_128) @[Mux.scala 27:72]
    node _T_147 = or(_T_146, _T_129) @[Mux.scala 27:72]
    node _T_148 = or(_T_147, _T_130) @[Mux.scala 27:72]
    node _T_149 = or(_T_148, _T_131) @[Mux.scala 27:72]
    node _T_150 = or(_T_149, _T_132) @[Mux.scala 27:72]
    node _T_151 = or(_T_150, _T_133) @[Mux.scala 27:72]
    node _T_152 = or(_T_151, _T_134) @[Mux.scala 27:72]
    node _T_153 = or(_T_152, _T_135) @[Mux.scala 27:72]
    node _T_154 = or(_T_153, _T_136) @[Mux.scala 27:72]
    node _T_155 = or(_T_154, _T_137) @[Mux.scala 27:72]
    node _T_156 = or(_T_155, _T_138) @[Mux.scala 27:72]
    node _T_157 = or(_T_156, _T_139) @[Mux.scala 27:72]
    node _T_158 = or(_T_157, _T_140) @[Mux.scala 27:72]
    node _T_159 = or(_T_158, _T_141) @[Mux.scala 27:72]
    node _T_160 = or(_T_159, _T_142) @[Mux.scala 27:72]
    node _T_161 = or(_T_160, _T_143) @[Mux.scala 27:72]
    wire _WIRE_9 : UInt<64> @[Mux.scala 27:72]
    _WIRE_9 <= _T_161 @[Mux.scala 27:72]
    io.write_data <= _WIRE_9 @[csr.scala 410:17]
    when wen : @[csr.scala 412:14]
      when _T_34 : @[csr.scala 428:40]
        wire _WIRE_10 : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 429:39]
        wire _WIRE_11 : UInt<32>
        _WIRE_11 <= wdata
        node _T_162 = bits(_WIRE_11, 0, 0) @[csr.scala 429:39]
        _WIRE_10.uie <= _T_162 @[csr.scala 429:39]
        node _T_163 = bits(_WIRE_11, 1, 1) @[csr.scala 429:39]
        _WIRE_10.sie <= _T_163 @[csr.scala 429:39]
        node _T_164 = bits(_WIRE_11, 2, 2) @[csr.scala 429:39]
        _WIRE_10.wpri4 <= _T_164 @[csr.scala 429:39]
        node _T_165 = bits(_WIRE_11, 3, 3) @[csr.scala 429:39]
        _WIRE_10.mie <= _T_165 @[csr.scala 429:39]
        node _T_166 = bits(_WIRE_11, 4, 4) @[csr.scala 429:39]
        _WIRE_10.upie <= _T_166 @[csr.scala 429:39]
        node _T_167 = bits(_WIRE_11, 5, 5) @[csr.scala 429:39]
        _WIRE_10.spie <= _T_167 @[csr.scala 429:39]
        node _T_168 = bits(_WIRE_11, 6, 6) @[csr.scala 429:39]
        _WIRE_10.wpri3 <= _T_168 @[csr.scala 429:39]
        node _T_169 = bits(_WIRE_11, 7, 7) @[csr.scala 429:39]
        _WIRE_10.mpie <= _T_169 @[csr.scala 429:39]
        node _T_170 = bits(_WIRE_11, 8, 8) @[csr.scala 429:39]
        _WIRE_10.spp <= _T_170 @[csr.scala 429:39]
        node _T_171 = bits(_WIRE_11, 10, 9) @[csr.scala 429:39]
        _WIRE_10.wpri2 <= _T_171 @[csr.scala 429:39]
        node _T_172 = bits(_WIRE_11, 12, 11) @[csr.scala 429:39]
        _WIRE_10.mpp <= _T_172 @[csr.scala 429:39]
        node _T_173 = bits(_WIRE_11, 14, 13) @[csr.scala 429:39]
        _WIRE_10.fs <= _T_173 @[csr.scala 429:39]
        node _T_174 = bits(_WIRE_11, 16, 15) @[csr.scala 429:39]
        _WIRE_10.xs <= _T_174 @[csr.scala 429:39]
        node _T_175 = bits(_WIRE_11, 17, 17) @[csr.scala 429:39]
        _WIRE_10.mprv <= _T_175 @[csr.scala 429:39]
        node _T_176 = bits(_WIRE_11, 18, 18) @[csr.scala 429:39]
        _WIRE_10.sum <= _T_176 @[csr.scala 429:39]
        node _T_177 = bits(_WIRE_11, 19, 19) @[csr.scala 429:39]
        _WIRE_10.mxr <= _T_177 @[csr.scala 429:39]
        node _T_178 = bits(_WIRE_11, 20, 20) @[csr.scala 429:39]
        _WIRE_10.tvm <= _T_178 @[csr.scala 429:39]
        node _T_179 = bits(_WIRE_11, 21, 21) @[csr.scala 429:39]
        _WIRE_10.tw <= _T_179 @[csr.scala 429:39]
        node _T_180 = bits(_WIRE_11, 22, 22) @[csr.scala 429:39]
        _WIRE_10.tsr <= _T_180 @[csr.scala 429:39]
        node _T_181 = bits(_WIRE_11, 30, 23) @[csr.scala 429:39]
        _WIRE_10.wpri1 <= _T_181 @[csr.scala 429:39]
        node _T_182 = bits(_WIRE_11, 31, 31) @[csr.scala 429:39]
        _WIRE_10.sd <= _T_182 @[csr.scala 429:39]
        reg_mstatus.mie <= _WIRE_10.mie @[csr.scala 430:23]
        reg_mstatus.mpie <= _WIRE_10.mpie @[csr.scala 431:24]
        reg_mstatus.spp <= UInt<1>("h00") @[csr.scala 433:23]
        reg_mstatus.uie <= UInt<1>("h00") @[csr.scala 434:23]
        reg_mstatus.upie <= UInt<1>("h00") @[csr.scala 435:24]
        reg_mstatus.mprv <= UInt<1>("h00") @[csr.scala 436:24]
        reg_mstatus.mxr <= UInt<1>("h00") @[csr.scala 437:23]
        reg_mstatus.sum <= UInt<1>("h00") @[csr.scala 438:23]
        reg_mstatus.tvm <= UInt<1>("h00") @[csr.scala 439:23]
        reg_mstatus.tw <= UInt<1>("h00") @[csr.scala 440:22]
        reg_mstatus.tsr <= UInt<1>("h00") @[csr.scala 441:23]
        reg_mstatus.fs <= UInt<1>("h00") @[csr.scala 442:22]
        reg_mstatus.xs <= UInt<1>("h00") @[csr.scala 443:22]
        reg_mstatus.sd <= UInt<1>("h00") @[csr.scala 444:22]
        skip @[csr.scala 428:40]
      when _T_36 : @[csr.scala 458:36]
        wire _WIRE_12 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 459:35]
        wire _WIRE_13 : UInt<32>
        _WIRE_13 <= wdata
        node _T_183 = bits(_WIRE_13, 0, 0) @[csr.scala 459:35]
        _WIRE_12.usix <= _T_183 @[csr.scala 459:35]
        node _T_184 = bits(_WIRE_13, 1, 1) @[csr.scala 459:35]
        _WIRE_12.ssix <= _T_184 @[csr.scala 459:35]
        node _T_185 = bits(_WIRE_13, 2, 2) @[csr.scala 459:35]
        _WIRE_12.wpri4 <= _T_185 @[csr.scala 459:35]
        node _T_186 = bits(_WIRE_13, 3, 3) @[csr.scala 459:35]
        _WIRE_12.msix <= _T_186 @[csr.scala 459:35]
        node _T_187 = bits(_WIRE_13, 4, 4) @[csr.scala 459:35]
        _WIRE_12.utix <= _T_187 @[csr.scala 459:35]
        node _T_188 = bits(_WIRE_13, 5, 5) @[csr.scala 459:35]
        _WIRE_12.stix <= _T_188 @[csr.scala 459:35]
        node _T_189 = bits(_WIRE_13, 6, 6) @[csr.scala 459:35]
        _WIRE_12.wpri3 <= _T_189 @[csr.scala 459:35]
        node _T_190 = bits(_WIRE_13, 7, 7) @[csr.scala 459:35]
        _WIRE_12.mtix <= _T_190 @[csr.scala 459:35]
        node _T_191 = bits(_WIRE_13, 8, 8) @[csr.scala 459:35]
        _WIRE_12.ueix <= _T_191 @[csr.scala 459:35]
        node _T_192 = bits(_WIRE_13, 9, 9) @[csr.scala 459:35]
        _WIRE_12.seix <= _T_192 @[csr.scala 459:35]
        node _T_193 = bits(_WIRE_13, 10, 10) @[csr.scala 459:35]
        _WIRE_12.wpri2 <= _T_193 @[csr.scala 459:35]
        node _T_194 = bits(_WIRE_13, 11, 11) @[csr.scala 459:35]
        _WIRE_12.meix <= _T_194 @[csr.scala 459:35]
        node _T_195 = bits(_WIRE_13, 31, 12) @[csr.scala 459:35]
        _WIRE_12.wpri1 <= _T_195 @[csr.scala 459:35]
        reg_mip.msix <= _WIRE_12.msix @[csr.scala 460:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 461:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 462:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 463:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 464:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 465:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 466:20]
        skip @[csr.scala 458:36]
      when _T_37 : @[csr.scala 473:36]
        wire _WIRE_14 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 474:35]
        wire _WIRE_15 : UInt<32>
        _WIRE_15 <= wdata
        node _T_196 = bits(_WIRE_15, 0, 0) @[csr.scala 474:35]
        _WIRE_14.usix <= _T_196 @[csr.scala 474:35]
        node _T_197 = bits(_WIRE_15, 1, 1) @[csr.scala 474:35]
        _WIRE_14.ssix <= _T_197 @[csr.scala 474:35]
        node _T_198 = bits(_WIRE_15, 2, 2) @[csr.scala 474:35]
        _WIRE_14.wpri4 <= _T_198 @[csr.scala 474:35]
        node _T_199 = bits(_WIRE_15, 3, 3) @[csr.scala 474:35]
        _WIRE_14.msix <= _T_199 @[csr.scala 474:35]
        node _T_200 = bits(_WIRE_15, 4, 4) @[csr.scala 474:35]
        _WIRE_14.utix <= _T_200 @[csr.scala 474:35]
        node _T_201 = bits(_WIRE_15, 5, 5) @[csr.scala 474:35]
        _WIRE_14.stix <= _T_201 @[csr.scala 474:35]
        node _T_202 = bits(_WIRE_15, 6, 6) @[csr.scala 474:35]
        _WIRE_14.wpri3 <= _T_202 @[csr.scala 474:35]
        node _T_203 = bits(_WIRE_15, 7, 7) @[csr.scala 474:35]
        _WIRE_14.mtix <= _T_203 @[csr.scala 474:35]
        node _T_204 = bits(_WIRE_15, 8, 8) @[csr.scala 474:35]
        _WIRE_14.ueix <= _T_204 @[csr.scala 474:35]
        node _T_205 = bits(_WIRE_15, 9, 9) @[csr.scala 474:35]
        _WIRE_14.seix <= _T_205 @[csr.scala 474:35]
        node _T_206 = bits(_WIRE_15, 10, 10) @[csr.scala 474:35]
        _WIRE_14.wpri2 <= _T_206 @[csr.scala 474:35]
        node _T_207 = bits(_WIRE_15, 11, 11) @[csr.scala 474:35]
        _WIRE_14.meix <= _T_207 @[csr.scala 474:35]
        node _T_208 = bits(_WIRE_15, 31, 12) @[csr.scala 474:35]
        _WIRE_14.wpri1 <= _T_208 @[csr.scala 474:35]
        reg_mie.meix <= _WIRE_14.meix @[csr.scala 475:20]
        reg_mie.msix <= _WIRE_14.msix @[csr.scala 476:20]
        reg_mie.mtix <= _WIRE_14.mtix @[csr.scala 477:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 478:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 479:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 480:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 481:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 482:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 483:20]
        skip @[csr.scala 473:36]
      when _T_27 : @[csr.scala 492:48]
        wire _WIRE_16 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 493:47]
        wire _WIRE_17 : UInt<32>
        _WIRE_17 <= wdata
        node _T_209 = bits(_WIRE_17, 0, 0) @[csr.scala 493:47]
        _WIRE_16.cy <= _T_209 @[csr.scala 493:47]
        node _T_210 = bits(_WIRE_17, 1, 1) @[csr.scala 493:47]
        _WIRE_16.tmzero <= _T_210 @[csr.scala 493:47]
        node _T_211 = bits(_WIRE_17, 2, 2) @[csr.scala 493:47]
        _WIRE_16.ir <= _T_211 @[csr.scala 493:47]
        node _T_212 = bits(_WIRE_17, 3, 3) @[csr.scala 493:47]
        _WIRE_16.hpm3 <= _T_212 @[csr.scala 493:47]
        node _T_213 = bits(_WIRE_17, 4, 4) @[csr.scala 493:47]
        _WIRE_16.hpm4 <= _T_213 @[csr.scala 493:47]
        node _T_214 = bits(_WIRE_17, 5, 5) @[csr.scala 493:47]
        _WIRE_16.hpm5 <= _T_214 @[csr.scala 493:47]
        node _T_215 = bits(_WIRE_17, 6, 6) @[csr.scala 493:47]
        _WIRE_16.hpm6 <= _T_215 @[csr.scala 493:47]
        node _T_216 = bits(_WIRE_17, 7, 7) @[csr.scala 493:47]
        _WIRE_16.hpm7 <= _T_216 @[csr.scala 493:47]
        node _T_217 = bits(_WIRE_17, 8, 8) @[csr.scala 493:47]
        _WIRE_16.hpm8 <= _T_217 @[csr.scala 493:47]
        node _T_218 = bits(_WIRE_17, 9, 9) @[csr.scala 493:47]
        _WIRE_16.hpm9 <= _T_218 @[csr.scala 493:47]
        node _T_219 = bits(_WIRE_17, 10, 10) @[csr.scala 493:47]
        _WIRE_16.hpm10 <= _T_219 @[csr.scala 493:47]
        node _T_220 = bits(_WIRE_17, 11, 11) @[csr.scala 493:47]
        _WIRE_16.hpm11 <= _T_220 @[csr.scala 493:47]
        node _T_221 = bits(_WIRE_17, 12, 12) @[csr.scala 493:47]
        _WIRE_16.hpm12 <= _T_221 @[csr.scala 493:47]
        node _T_222 = bits(_WIRE_17, 13, 13) @[csr.scala 493:47]
        _WIRE_16.hpm13 <= _T_222 @[csr.scala 493:47]
        node _T_223 = bits(_WIRE_17, 14, 14) @[csr.scala 493:47]
        _WIRE_16.hpm14 <= _T_223 @[csr.scala 493:47]
        node _T_224 = bits(_WIRE_17, 15, 15) @[csr.scala 493:47]
        _WIRE_16.hpm15 <= _T_224 @[csr.scala 493:47]
        node _T_225 = bits(_WIRE_17, 16, 16) @[csr.scala 493:47]
        _WIRE_16.hpm16 <= _T_225 @[csr.scala 493:47]
        node _T_226 = bits(_WIRE_17, 17, 17) @[csr.scala 493:47]
        _WIRE_16.hpm17 <= _T_226 @[csr.scala 493:47]
        node _T_227 = bits(_WIRE_17, 18, 18) @[csr.scala 493:47]
        _WIRE_16.hpm18 <= _T_227 @[csr.scala 493:47]
        node _T_228 = bits(_WIRE_17, 19, 19) @[csr.scala 493:47]
        _WIRE_16.hpm19 <= _T_228 @[csr.scala 493:47]
        node _T_229 = bits(_WIRE_17, 20, 20) @[csr.scala 493:47]
        _WIRE_16.hpm20 <= _T_229 @[csr.scala 493:47]
        node _T_230 = bits(_WIRE_17, 21, 21) @[csr.scala 493:47]
        _WIRE_16.hpm21 <= _T_230 @[csr.scala 493:47]
        node _T_231 = bits(_WIRE_17, 22, 22) @[csr.scala 493:47]
        _WIRE_16.hpm22 <= _T_231 @[csr.scala 493:47]
        node _T_232 = bits(_WIRE_17, 23, 23) @[csr.scala 493:47]
        _WIRE_16.hpm23 <= _T_232 @[csr.scala 493:47]
        node _T_233 = bits(_WIRE_17, 24, 24) @[csr.scala 493:47]
        _WIRE_16.hpm24 <= _T_233 @[csr.scala 493:47]
        node _T_234 = bits(_WIRE_17, 25, 25) @[csr.scala 493:47]
        _WIRE_16.hpm25 <= _T_234 @[csr.scala 493:47]
        node _T_235 = bits(_WIRE_17, 26, 26) @[csr.scala 493:47]
        _WIRE_16.hpm26 <= _T_235 @[csr.scala 493:47]
        node _T_236 = bits(_WIRE_17, 27, 27) @[csr.scala 493:47]
        _WIRE_16.hpm27 <= _T_236 @[csr.scala 493:47]
        node _T_237 = bits(_WIRE_17, 28, 28) @[csr.scala 493:47]
        _WIRE_16.hpm28 <= _T_237 @[csr.scala 493:47]
        node _T_238 = bits(_WIRE_17, 29, 29) @[csr.scala 493:47]
        _WIRE_16.hpm29 <= _T_238 @[csr.scala 493:47]
        node _T_239 = bits(_WIRE_17, 30, 30) @[csr.scala 493:47]
        _WIRE_16.hpm30 <= _T_239 @[csr.scala 493:47]
        node _T_240 = bits(_WIRE_17, 31, 31) @[csr.scala 493:47]
        _WIRE_16.hpm31 <= _T_240 @[csr.scala 493:47]
        reg_mcounterinhibit.cy <= _WIRE_16.cy @[csr.scala 494:27]
        reg_mcounterinhibit.tmzero <= _WIRE_16.tmzero @[csr.scala 494:27]
        reg_mcounterinhibit.ir <= _WIRE_16.ir @[csr.scala 494:27]
        reg_mcounterinhibit.hpm3 <= _WIRE_16.hpm3 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm4 <= _WIRE_16.hpm4 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm5 <= _WIRE_16.hpm5 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm6 <= _WIRE_16.hpm6 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm7 <= _WIRE_16.hpm7 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm8 <= _WIRE_16.hpm8 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm9 <= _WIRE_16.hpm9 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm10 <= _WIRE_16.hpm10 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm11 <= _WIRE_16.hpm11 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm12 <= _WIRE_16.hpm12 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm13 <= _WIRE_16.hpm13 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm14 <= _WIRE_16.hpm14 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm15 <= _WIRE_16.hpm15 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm16 <= _WIRE_16.hpm16 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm17 <= _WIRE_16.hpm17 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm18 <= _WIRE_16.hpm18 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm19 <= _WIRE_16.hpm19 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm20 <= _WIRE_16.hpm20 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm21 <= _WIRE_16.hpm21 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm22 <= _WIRE_16.hpm22 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm23 <= _WIRE_16.hpm23 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm24 <= _WIRE_16.hpm24 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm25 <= _WIRE_16.hpm25 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm26 <= _WIRE_16.hpm26 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm27 <= _WIRE_16.hpm27 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm28 <= _WIRE_16.hpm28 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm29 <= _WIRE_16.hpm29 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm30 <= _WIRE_16.hpm30 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm31 <= _WIRE_16.hpm31 @[csr.scala 494:27]
        node _T_241 = eq(reg_mcounterinhibit.cy, UInt<1>("h00")) @[csr.scala 495:36]
        when _T_241 : @[csr.scala 495:49]
          when _T_44 : @[csr.scala 527:29]
            node hi_7 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node lo_6 = bits(_T_4, 31, 0) @[csr.scala 527:84]
            node _T_242 = cat(hi_7, lo_6) @[Cat.scala 30:58]
            lo <= _T_242 @[csr.scala 563:11]
            node _hi_T = shr(_T_242, 6) @[csr.scala 564:28]
            hi <= _hi_T @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_28 : @[csr.scala 528:29]
            node hi_8 = bits(_T_4, 63, 32) @[csr.scala 528:51]
            node _T_243 = cat(hi_8, wdata) @[Cat.scala 30:58]
            lo <= _T_243 @[csr.scala 563:11]
            node _hi_T_1 = shr(_T_243, 6) @[csr.scala 564:28]
            hi <= _hi_T_1 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 495:49]
        node _T_244 = eq(reg_mcounterinhibit.ir, UInt<1>("h00")) @[csr.scala 498:36]
        when _T_244 : @[csr.scala 498:48]
          when _T_45 : @[csr.scala 527:29]
            node hi_9 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node lo_7 = bits(_T_9, 31, 0) @[csr.scala 527:84]
            node _T_245 = cat(hi_9, lo_7) @[Cat.scala 30:58]
            lo_1 <= _T_245 @[csr.scala 563:11]
            node _hi_T_2 = shr(_T_245, 6) @[csr.scala 564:28]
            hi_1 <= _hi_T_2 @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_29 : @[csr.scala 528:29]
            node hi_10 = bits(_T_9, 63, 32) @[csr.scala 528:51]
            node _T_246 = cat(hi_10, wdata) @[Cat.scala 30:58]
            lo_1 <= _T_246 @[csr.scala 563:11]
            node _hi_T_3 = shr(_T_246, 6) @[csr.scala 564:28]
            hi_1 <= _hi_T_3 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 498:48]
        skip @[csr.scala 492:48]
      when _T_38 : @[csr.scala 504:41]
        reg_mscratch <= wdata @[csr.scala 504:56]
        skip @[csr.scala 504:41]
      when _T_39 : @[csr.scala 509:41]
        node _T_247 = bits(wdata, 31, 0) @[csr.scala 509:61]
        node _T_248 = dshr(_T_247, UInt<2>("h02")) @[csr.scala 509:70]
        node _T_249 = dshl(_T_248, UInt<2>("h02")) @[csr.scala 509:78]
        reg_mepc <= _T_249 @[csr.scala 509:52]
        skip @[csr.scala 509:41]
      when _T_41 : @[csr.scala 514:41]
        node _T_250 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 515:38]
        node _T_251 = and(_T_250, UInt<32>("h080000000")) @[csr.scala 515:72]
        reg_mcause.interrupt <= _T_251 @[csr.scala 515:28]
        node _T_252 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 516:42]
        node _T_253 = and(_T_252, UInt<31>("h07fffffff")) @[csr.scala 516:76]
        reg_mcause.exceptioncode <= _T_253 @[csr.scala 516:32]
        skip @[csr.scala 514:41]
      when _T_40 : @[csr.scala 520:41]
        node _T_254 = bits(wdata, 31, 0) @[csr.scala 520:61]
        reg_mtval <= _T_254 @[csr.scala 520:53]
        skip @[csr.scala 520:41]
      when _T_43 : @[csr.scala 521:43]
        node _T_255 = bits(wdata, 31, 0) @[csr.scala 521:65]
        reg_medeleg <= _T_255 @[csr.scala 521:57]
        skip @[csr.scala 521:43]
      skip @[csr.scala 412:14]
    
  module ALUControl_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip add : UInt<1>, flip immediate : UInt<1>, flip funct7 : UInt<7>, flip funct3 : UInt<3>, operation : UInt<4>}
    
    io.operation <= UInt<4>("h0f") @[alucontrol.scala 30:16]
    when io.add : @[alucontrol.scala 32:17]
      io.operation <= UInt<2>("h02") @[alucontrol.scala 33:18]
      skip @[alucontrol.scala 32:17]
    else : @[alucontrol.scala 34:16]
      node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
      when _T : @[Conditional.scala 40:58]
        node _T_1 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 37:41]
        node _T_2 = or(io.immediate, _T_1) @[alucontrol.scala 37:28]
        when _T_2 : @[alucontrol.scala 37:59]
          io.operation <= UInt<2>("h02") @[alucontrol.scala 38:24]
          skip @[alucontrol.scala 37:59]
        else : @[alucontrol.scala 39:22]
          io.operation <= UInt<2>("h03") @[alucontrol.scala 40:24]
          skip @[alucontrol.scala 39:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_3 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
        when _T_3 : @[Conditional.scala 39:67]
          io.operation <= UInt<3>("h06") @[alucontrol.scala 43:36]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_4 = eq(UInt<2>("h02"), io.funct3) @[Conditional.scala 37:30]
          when _T_4 : @[Conditional.scala 39:67]
            io.operation <= UInt<3>("h04") @[alucontrol.scala 44:36]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_5 = eq(UInt<2>("h03"), io.funct3) @[Conditional.scala 37:30]
            when _T_5 : @[Conditional.scala 39:67]
              io.operation <= UInt<3>("h05") @[alucontrol.scala 45:36]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_6 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
              when _T_6 : @[Conditional.scala 39:67]
                io.operation <= UInt<4>("h09") @[alucontrol.scala 46:36]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_7 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
                when _T_7 : @[Conditional.scala 39:67]
                  node _T_8 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 48:25]
                  when _T_8 : @[alucontrol.scala 48:43]
                    io.operation <= UInt<3>("h07") @[alucontrol.scala 49:24]
                    skip @[alucontrol.scala 48:43]
                  else : @[alucontrol.scala 50:22]
                    io.operation <= UInt<4>("h08") @[alucontrol.scala 51:24]
                    skip @[alucontrol.scala 50:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_9 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
                  when _T_9 : @[Conditional.scala 39:67]
                    io.operation <= UInt<1>("h01") @[alucontrol.scala 54:36]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_10 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
                    when _T_10 : @[Conditional.scala 39:67]
                      io.operation <= UInt<1>("h00") @[alucontrol.scala 55:36]
                      skip @[Conditional.scala 39:67]
      skip @[alucontrol.scala 34:16]
    
  module ALU_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip operation : UInt<4>, flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    io.result <= UInt<1>("h00") @[alu.scala 26:13]
    node _T = eq(UInt<1>("h00"), io.operation) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = and(io.inputx, io.inputy) @[alu.scala 30:30]
      io.result <= _T_1 @[alu.scala 30:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.operation) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = or(io.inputx, io.inputy) @[alu.scala 33:30]
        io.result <= _T_3 @[alu.scala 33:17]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<2>("h02"), io.operation) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = add(io.inputx, io.inputy) @[alu.scala 36:30]
          node _T_6 = tail(_T_5, 1) @[alu.scala 36:30]
          io.result <= _T_6 @[alu.scala 36:17]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_7 = eq(UInt<2>("h03"), io.operation) @[Conditional.scala 37:30]
          when _T_7 : @[Conditional.scala 39:67]
            node _T_8 = sub(io.inputx, io.inputy) @[alu.scala 39:30]
            node _T_9 = tail(_T_8, 1) @[alu.scala 39:30]
            io.result <= _T_9 @[alu.scala 39:17]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_10 = eq(UInt<3>("h04"), io.operation) @[Conditional.scala 37:30]
            when _T_10 : @[Conditional.scala 39:67]
              node _T_11 = asSInt(io.inputx) @[alu.scala 42:31]
              node _T_12 = asSInt(io.inputy) @[alu.scala 42:50]
              node _T_13 = lt(_T_11, _T_12) @[alu.scala 42:38]
              io.result <= _T_13 @[alu.scala 42:17]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h05"), io.operation) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = lt(io.inputx, io.inputy) @[alu.scala 45:31]
                io.result <= _T_15 @[alu.scala 45:17]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_16 = eq(UInt<3>("h06"), io.operation) @[Conditional.scala 37:30]
                when _T_16 : @[Conditional.scala 39:67]
                  node _T_17 = bits(io.inputy, 4, 0) @[alu.scala 48:42]
                  node _T_18 = dshl(io.inputx, _T_17) @[alu.scala 48:30]
                  io.result <= _T_18 @[alu.scala 48:17]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_19 = eq(UInt<3>("h07"), io.operation) @[Conditional.scala 37:30]
                  when _T_19 : @[Conditional.scala 39:67]
                    node _T_20 = bits(io.inputy, 4, 0) @[alu.scala 51:42]
                    node _T_21 = dshr(io.inputx, _T_20) @[alu.scala 51:30]
                    io.result <= _T_21 @[alu.scala 51:17]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_22 = eq(UInt<4>("h08"), io.operation) @[Conditional.scala 37:30]
                    when _T_22 : @[Conditional.scala 39:67]
                      node _T_23 = asSInt(io.inputx) @[alu.scala 54:31]
                      node _T_24 = bits(io.inputy, 4, 0) @[alu.scala 54:50]
                      node _T_25 = dshr(_T_23, _T_24) @[alu.scala 54:38]
                      node _T_26 = asUInt(_T_25) @[alu.scala 54:57]
                      io.result <= _T_26 @[alu.scala 54:17]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = eq(UInt<4>("h09"), io.operation) @[Conditional.scala 37:30]
                      when _T_27 : @[Conditional.scala 39:67]
                        node _T_28 = xor(io.inputx, io.inputy) @[alu.scala 57:30]
                        io.result <= _T_28 @[alu.scala 57:17]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_29 = eq(UInt<4>("h0a"), io.operation) @[Conditional.scala 37:30]
                        when _T_29 : @[Conditional.scala 39:67]
                          node _T_30 = or(io.inputx, io.inputy) @[alu.scala 60:32]
                          node _T_31 = not(_T_30) @[alu.scala 60:20]
                          io.result <= _T_31 @[alu.scala 60:17]
                          skip @[Conditional.scala 39:67]
    
  module ImmediateGenerator_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, sextImm : UInt<32>}
    
    io.sextImm <= UInt<1>("h00") @[helpers.scala 42:14]
    node opcode = bits(io.instruction, 6, 0) @[helpers.scala 44:30]
    node _T = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node hi = bits(io.instruction, 31, 12) @[helpers.scala 47:31]
      node lo = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
      node _T_1 = cat(hi, lo) @[Cat.scala 30:58]
      io.sextImm <= _T_1 @[helpers.scala 48:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<5>("h017"), opcode) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node hi_1 = bits(io.instruction, 31, 12) @[helpers.scala 51:31]
        node lo_1 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
        node _T_3 = cat(hi_1, lo_1) @[Cat.scala 30:58]
        io.sextImm <= _T_3 @[helpers.scala 52:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<7>("h06f"), opcode) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node hi_hi = bits(io.instruction, 31, 31) @[helpers.scala 55:35]
          node hi_lo = bits(io.instruction, 19, 12) @[helpers.scala 55:55]
          node lo_hi = bits(io.instruction, 20, 20) @[helpers.scala 56:35]
          node lo_lo = bits(io.instruction, 30, 21) @[helpers.scala 56:55]
          node lo_2 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
          node hi_2 = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
          node hi_lo_1 = cat(hi_2, lo_2) @[Cat.scala 30:58]
          node _T_5 = bits(hi_lo_1, 19, 19) @[helpers.scala 57:36]
          node _T_6 = bits(_T_5, 0, 0) @[Bitwise.scala 72:15]
          node hi_hi_1 = mux(_T_6, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
          node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
          node _T_7 = cat(hi_3, UInt<1>("h00")) @[Cat.scala 30:58]
          io.sextImm <= _T_7 @[helpers.scala 57:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<7>("h067"), opcode) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node lo_3 = bits(io.instruction, 31, 20) @[helpers.scala 60:31]
            node _T_9 = bits(lo_3, 11, 11) @[helpers.scala 61:36]
            node _T_10 = bits(_T_9, 0, 0) @[Bitwise.scala 72:15]
            node hi_4 = mux(_T_10, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
            node _T_11 = cat(hi_4, lo_3) @[Cat.scala 30:58]
            io.sextImm <= _T_11 @[helpers.scala 61:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node hi_hi_2 = bits(io.instruction, 31, 31) @[helpers.scala 64:35]
              node hi_lo_2 = bits(io.instruction, 7, 7) @[helpers.scala 64:55]
              node lo_hi_1 = bits(io.instruction, 30, 25) @[helpers.scala 65:35]
              node lo_lo_1 = bits(io.instruction, 11, 8) @[helpers.scala 65:58]
              node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
              node hi_5 = cat(hi_hi_2, hi_lo_2) @[Cat.scala 30:58]
              node hi_lo_3 = cat(hi_5, lo_4) @[Cat.scala 30:58]
              node _T_13 = bits(hi_lo_3, 11, 11) @[helpers.scala 66:37]
              node _T_14 = bits(_T_13, 0, 0) @[Bitwise.scala 72:15]
              node hi_hi_3 = mux(_T_14, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
              node hi_6 = cat(hi_hi_3, hi_lo_3) @[Cat.scala 30:58]
              node _T_15 = cat(hi_6, UInt<1>("h00")) @[Cat.scala 30:58]
              io.sextImm <= _T_15 @[helpers.scala 66:18]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_16 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
              when _T_16 : @[Conditional.scala 39:67]
                node lo_5 = bits(io.instruction, 31, 20) @[helpers.scala 69:31]
                node _T_17 = bits(lo_5, 11, 11) @[helpers.scala 70:36]
                node _T_18 = bits(_T_17, 0, 0) @[Bitwise.scala 72:15]
                node hi_7 = mux(_T_18, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                node _T_19 = cat(hi_7, lo_5) @[Cat.scala 30:58]
                io.sextImm <= _T_19 @[helpers.scala 70:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_20 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
                when _T_20 : @[Conditional.scala 39:67]
                  node hi_8 = bits(io.instruction, 31, 25) @[helpers.scala 73:35]
                  node lo_6 = bits(io.instruction, 11, 7) @[helpers.scala 73:59]
                  node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
                  node _T_21 = bits(lo_7, 11, 11) @[helpers.scala 74:36]
                  node _T_22 = bits(_T_21, 0, 0) @[Bitwise.scala 72:15]
                  node hi_9 = mux(_T_22, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                  node _T_23 = cat(hi_9, lo_7) @[Cat.scala 30:58]
                  io.sextImm <= _T_23 @[helpers.scala 74:18]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_24 = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
                  when _T_24 : @[Conditional.scala 39:67]
                    node lo_8 = bits(io.instruction, 31, 20) @[helpers.scala 77:31]
                    node _T_25 = bits(lo_8, 11, 11) @[helpers.scala 78:36]
                    node _T_26 = bits(_T_25, 0, 0) @[Bitwise.scala 72:15]
                    node hi_10 = mux(_T_26, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                    node _T_27 = cat(hi_10, lo_8) @[Cat.scala 30:58]
                    io.sextImm <= _T_27 @[helpers.scala 78:18]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_28 = eq(UInt<7>("h073"), opcode) @[Conditional.scala 37:30]
                    when _T_28 : @[Conditional.scala 39:67]
                      node hi_11 = mux(UInt<1>("h00"), UInt<27>("h07ffffff"), UInt<27>("h00")) @[Bitwise.scala 72:12]
                      node lo_9 = bits(io.instruction, 19, 15) @[helpers.scala 81:53]
                      node _T_29 = cat(hi_11, lo_9) @[Cat.scala 30:58]
                      io.sextImm <= _T_29 @[helpers.scala 81:18]
                      skip @[Conditional.scala 39:67]
    
  module BranchControl_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip branch : UInt<1>, flip funct3 : UInt<3>, flip inputx : UInt<32>, flip inputy : UInt<32>, taken : UInt<1>}
    
    io.taken is invalid @[branch-control.scala 27:12]
    wire check : UInt<1> @[branch-control.scala 29:19]
    check is invalid @[branch-control.scala 30:9]
    node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(io.inputx, io.inputy) @[branch-control.scala 33:40]
      check <= _T_1 @[branch-control.scala 33:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = neq(io.inputx, io.inputy) @[branch-control.scala 34:40]
        check <= _T_3 @[branch-control.scala 34:26]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = asSInt(io.inputx) @[branch-control.scala 35:40]
          node _T_6 = asSInt(io.inputy) @[branch-control.scala 35:59]
          node _T_7 = lt(_T_5, _T_6) @[branch-control.scala 35:47]
          check <= _T_7 @[branch-control.scala 35:26]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node _T_9 = asSInt(io.inputx) @[branch-control.scala 36:40]
            node _T_10 = asSInt(io.inputy) @[branch-control.scala 36:60]
            node _T_11 = geq(_T_9, _T_10) @[branch-control.scala 36:47]
            check <= _T_11 @[branch-control.scala 36:26]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node _T_13 = lt(io.inputx, io.inputy) @[branch-control.scala 37:40]
              check <= _T_13 @[branch-control.scala 37:26]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = geq(io.inputx, io.inputy) @[branch-control.scala 38:40]
                check <= _T_15 @[branch-control.scala 38:26]
                skip @[Conditional.scala 39:67]
    node _T_16 = and(check, io.branch) @[branch-control.scala 41:21]
    io.taken <= _T_16 @[branch-control.scala 41:12]
    
  module Adder_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module Adder_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module SingleCycleCPU_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip imem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip dmem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}}
    
    reg pc : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[cpu.scala 17:27]
    inst control of Control_1 @[cpu.scala 18:26]
    control.clock <= clock
    control.reset <= reset
    inst registers of RegisterFile_1 @[cpu.scala 19:26]
    registers.clock <= clock
    registers.reset <= reset
    inst csr of CSRRegFile_1 @[cpu.scala 20:26]
    csr.clock <= clock
    csr.reset <= reset
    inst aluControl of ALUControl_1 @[cpu.scala 21:26]
    aluControl.clock <= clock
    aluControl.reset <= reset
    inst alu of ALU_1 @[cpu.scala 22:26]
    alu.clock <= clock
    alu.reset <= reset
    inst immGen of ImmediateGenerator_1 @[cpu.scala 23:26]
    immGen.clock <= clock
    immGen.reset <= reset
    inst branchCtrl of BranchControl_1 @[cpu.scala 24:26]
    branchCtrl.clock <= clock
    branchCtrl.reset <= reset
    inst pcPlusFour of Adder_2 @[cpu.scala 25:26]
    pcPlusFour.clock <= clock
    pcPlusFour.reset <= reset
    inst branchAdd of Adder_3 @[cpu.scala 26:26]
    branchAdd.clock <= clock
    branchAdd.reset <= reset
    reg cycleCount : UInt<30>, clock with : (reset => (reset, UInt<30>("h00"))) @[Counter.scala 60:40]
    wire wrap : UInt<1>
    wrap <= UInt<1>("h00")
    when UInt<1>("h01") : @[Counter.scala 118:17]
      node wrap_wrap = eq(cycleCount, UInt<30>("h03fffffff")) @[Counter.scala 72:24]
      node _wrap_value_T = add(cycleCount, UInt<1>("h01")) @[Counter.scala 76:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[Counter.scala 76:24]
      cycleCount <= _wrap_value_T_1 @[Counter.scala 76:15]
      wrap <= wrap_wrap @[Counter.scala 118:24]
      skip @[Counter.scala 118:17]
    io.imem.address <= pc @[cpu.scala 30:19]
    io.imem.valid <= UInt<1>("h01") @[cpu.scala 31:17]
    pcPlusFour.io.inputx <= pc @[cpu.scala 33:24]
    pcPlusFour.io.inputy <= UInt<3>("h04") @[cpu.scala 34:24]
    node opcode = bits(io.imem.instruction, 6, 0) @[cpu.scala 37:27]
    control.io.opcode <= opcode @[cpu.scala 40:21]
    node _T = bits(io.imem.instruction, 19, 15) @[cpu.scala 42:39]
    registers.io.readreg1 <= _T @[cpu.scala 42:25]
    node _T_1 = bits(io.imem.instruction, 24, 20) @[cpu.scala 43:39]
    registers.io.readreg2 <= _T_1 @[cpu.scala 43:25]
    node _T_2 = bits(io.imem.instruction, 11, 7) @[cpu.scala 45:39]
    registers.io.writereg <= _T_2 @[cpu.scala 45:25]
    node _T_3 = or(control.io.regwrite, csr.io.reg_write) @[cpu.scala 46:49]
    node _T_4 = neq(registers.io.writereg, UInt<1>("h00")) @[cpu.scala 46:96]
    node _T_5 = and(_T_3, _T_4) @[cpu.scala 46:70]
    registers.io.wen <= _T_5 @[cpu.scala 46:25]
    aluControl.io.add <= control.io.add @[cpu.scala 48:27]
    aluControl.io.immediate <= control.io.immediate @[cpu.scala 49:27]
    node _T_6 = bits(io.imem.instruction, 31, 25) @[cpu.scala 50:41]
    aluControl.io.funct7 <= _T_6 @[cpu.scala 50:27]
    node _T_7 = bits(io.imem.instruction, 14, 12) @[cpu.scala 51:41]
    aluControl.io.funct3 <= _T_7 @[cpu.scala 51:27]
    immGen.io.instruction <= io.imem.instruction @[cpu.scala 53:25]
    csr.io.inst <= io.imem.instruction @[cpu.scala 57:15]
    csr.io.immid <= immGen.io.sextImm @[cpu.scala 58:16]
    csr.io.read_data <= registers.io.readdata1 @[cpu.scala 59:20]
    csr.io.retire_inst <= UInt<1>("h01") @[cpu.scala 60:22]
    node _T_8 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 61:26]
    node _T_9 = or(_T_8, csr.io.read_illegal) @[cpu.scala 61:48]
    node _T_10 = or(_T_9, csr.io.write_illegal) @[cpu.scala 61:71]
    node _T_11 = or(_T_10, csr.io.system_illegal) @[cpu.scala 61:95]
    csr.io.illegal_inst <= _T_11 @[cpu.scala 61:23]
    csr.io.pc <= pc @[cpu.scala 62:13]
    branchCtrl.io.branch <= control.io.branch @[cpu.scala 64:24]
    node _T_12 = bits(io.imem.instruction, 14, 12) @[cpu.scala 65:38]
    branchCtrl.io.funct3 <= _T_12 @[cpu.scala 65:24]
    branchCtrl.io.inputx <= registers.io.readdata1 @[cpu.scala 66:24]
    branchCtrl.io.inputy <= registers.io.readdata2 @[cpu.scala 67:24]
    wire alu_inputx : UInt @[cpu.scala 69:24]
    node _T_13 = eq(control.io.alusrc1, UInt<2>("h02")) @[cpu.scala 70:28]
    when _T_13 : @[cpu.scala 70:37]
      alu_inputx <= pc @[cpu.scala 71:16]
      skip @[cpu.scala 70:37]
    else : @[cpu.scala 72:44]
      node _T_14 = eq(control.io.alusrc1, UInt<1>("h01")) @[cpu.scala 72:35]
      when _T_14 : @[cpu.scala 72:44]
        alu_inputx <= UInt<1>("h00") @[cpu.scala 73:16]
        skip @[cpu.scala 72:44]
      else : @[cpu.scala 74:16]
        alu_inputx <= registers.io.readdata1 @[cpu.scala 75:16]
        skip @[cpu.scala 74:16]
    node alu_inputy = mux(control.io.immediate, immGen.io.sextImm, registers.io.readdata2) @[cpu.scala 77:23]
    alu.io.inputx <= alu_inputx @[cpu.scala 78:17]
    alu.io.inputy <= alu_inputy @[cpu.scala 79:17]
    alu.io.operation <= aluControl.io.operation @[cpu.scala 80:20]
    io.dmem.address <= alu.io.result @[cpu.scala 83:21]
    io.dmem.writedata <= registers.io.readdata2 @[cpu.scala 84:21]
    io.dmem.memread <= control.io.memread @[cpu.scala 85:21]
    io.dmem.memwrite <= control.io.memwrite @[cpu.scala 86:21]
    node _T_15 = bits(io.imem.instruction, 13, 12) @[cpu.scala 87:35]
    io.dmem.maskmode <= _T_15 @[cpu.scala 87:21]
    node _T_16 = bits(io.imem.instruction, 14, 14) @[cpu.scala 88:36]
    node _T_17 = not(_T_16) @[cpu.scala 88:24]
    io.dmem.sext <= _T_17 @[cpu.scala 88:21]
    node _T_18 = or(io.dmem.memread, io.dmem.memwrite) @[cpu.scala 89:24]
    when _T_18 : @[cpu.scala 89:45]
      io.dmem.valid <= UInt<1>("h01") @[cpu.scala 90:19]
      skip @[cpu.scala 89:45]
    else : @[cpu.scala 91:16]
      io.dmem.valid <= UInt<1>("h00") @[cpu.scala 92:19]
      skip @[cpu.scala 91:16]
    wire write_data : UInt @[cpu.scala 96:24]
    node _T_19 = eq(control.io.toreg, UInt<1>("h01")) @[cpu.scala 97:26]
    when _T_19 : @[cpu.scala 97:35]
      write_data <= io.dmem.readdata @[cpu.scala 98:16]
      skip @[cpu.scala 97:35]
    else : @[cpu.scala 99:42]
      node _T_20 = eq(control.io.toreg, UInt<2>("h02")) @[cpu.scala 99:33]
      when _T_20 : @[cpu.scala 99:42]
        write_data <= pcPlusFour.io.result @[cpu.scala 100:16]
        skip @[cpu.scala 99:42]
      else : @[cpu.scala 101:42]
        node _T_21 = eq(control.io.toreg, UInt<2>("h03")) @[cpu.scala 101:33]
        when _T_21 : @[cpu.scala 101:42]
          write_data <= csr.io.write_data @[cpu.scala 102:16]
          skip @[cpu.scala 101:42]
        else : @[cpu.scala 103:16]
          write_data <= alu.io.result @[cpu.scala 104:16]
          skip @[cpu.scala 103:16]
    registers.io.writedata <= write_data @[cpu.scala 107:26]
    branchAdd.io.inputx <= pc @[cpu.scala 109:23]
    branchAdd.io.inputy <= immGen.io.sextImm @[cpu.scala 110:23]
    wire next_pc : UInt @[cpu.scala 111:21]
    node _T_22 = eq(control.io.jump, UInt<2>("h02")) @[cpu.scala 112:48]
    node _T_23 = or(branchCtrl.io.taken, _T_22) @[cpu.scala 112:29]
    when _T_23 : @[cpu.scala 112:57]
      next_pc <= branchAdd.io.result @[cpu.scala 113:13]
      skip @[cpu.scala 112:57]
    else : @[cpu.scala 114:41]
      node _T_24 = eq(control.io.jump, UInt<2>("h03")) @[cpu.scala 114:32]
      when _T_24 : @[cpu.scala 114:41]
        node hi = mux(UInt<1>("h01"), UInt<31>("h07fffffff"), UInt<31>("h00")) @[Bitwise.scala 72:12]
        node _T_25 = cat(hi, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_26 = and(alu.io.result, _T_25) @[cpu.scala 115:30]
        next_pc <= _T_26 @[cpu.scala 115:13]
        skip @[cpu.scala 114:41]
      else : @[cpu.scala 116:54]
        node _T_27 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 116:31]
        node _T_28 = or(csr.io.eret, _T_27) @[cpu.scala 116:28]
        when _T_28 : @[cpu.scala 116:54]
          next_pc <= csr.io.evec @[cpu.scala 117:13]
          skip @[cpu.scala 116:54]
        else : @[cpu.scala 118:16]
          next_pc <= pcPlusFour.io.result @[cpu.scala 119:13]
          skip @[cpu.scala 118:16]
    pc <= next_pc @[cpu.scala 122:6]
    
  module DualPortedCombinMemory_1 : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}, dmem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    io.imem.request.bits.operation is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.writedata is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.address is invalid @[base-memory-components.scala 32:19]
    io.imem.request.valid is invalid @[base-memory-components.scala 32:19]
    io.imem.request.ready is invalid @[base-memory-components.scala 32:19]
    io.dmem.request.bits.operation is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.writedata is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.address is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.valid is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.ready is invalid @[base-memory-components.scala 33:19]
    wire _WIRE : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 36:35]
    _WIRE.bits.data <= UInt<32>("h00") @[base-memory-components.scala 36:35]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 36:35]
    io.imem.response.bits.data <= _WIRE.bits.data @[base-memory-components.scala 36:20]
    io.imem.response.valid <= _WIRE.valid @[base-memory-components.scala 36:20]
    wire _WIRE_1 : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 37:35]
    _WIRE_1.bits.data <= UInt<32>("h00") @[base-memory-components.scala 37:35]
    _WIRE_1.valid <= UInt<1>("h00") @[base-memory-components.scala 37:35]
    io.dmem.response.bits.data <= _WIRE_1.bits.data @[base-memory-components.scala 37:20]
    io.dmem.response.valid <= _WIRE_1.valid @[base-memory-components.scala 37:20]
    cmem memory : UInt<32>[16384] @[base-memory-components.scala 39:19]
    io.imem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.imem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.imem.request.valid : @[memory.scala 25:32]
      node _T = eq(io.imem.request.bits.operation, UInt<1>("h00")) @[memory.scala 30:30]
      node _T_1 = asUInt(reset) @[memory.scala 30:11]
      node _T_2 = or(_T, _T_1) @[memory.scala 30:11]
      node _T_3 = eq(_T_2, UInt<1>("h00")) @[memory.scala 30:11]
      when _T_3 : @[memory.scala 30:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:30 assert(request.operation === Read)\n") @[memory.scala 30:11]
        stop(clock, UInt<1>(1), 1) @[memory.scala 30:11]
        skip @[memory.scala 30:11]
      node _T_4 = lt(io.imem.request.bits.address, UInt<17>("h010000")) @[memory.scala 35:27]
      when _T_4 : @[memory.scala 35:37]
        io.imem.response.valid <= UInt<1>("h01") @[memory.scala 36:30]
        node _T_5 = shr(io.imem.request.bits.address, 2) @[memory.scala 37:60]
        node _T_6 = bits(_T_5, 13, 0) @[memory.scala 37:43]
        infer mport MPORT = memory[_T_6], clock @[memory.scala 37:43]
        io.imem.response.bits.data <= MPORT @[memory.scala 37:34]
        skip @[memory.scala 35:37]
      else : @[memory.scala 38:18]
        io.imem.response.valid <= UInt<1>("h00") @[memory.scala 39:30]
        skip @[memory.scala 38:18]
      skip @[memory.scala 25:32]
    else : @[memory.scala 41:16]
      io.imem.response.valid <= UInt<1>("h00") @[memory.scala 42:28]
      skip @[memory.scala 41:16]
    io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.dmem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.dmem.request.valid : @[memory.scala 52:32]
      node _T_7 = neq(io.dmem.request.bits.operation, UInt<1>("h01")) @[memory.scala 56:31]
      node _T_8 = asUInt(reset) @[memory.scala 56:12]
      node _T_9 = or(_T_7, _T_8) @[memory.scala 56:12]
      node _T_10 = eq(_T_9, UInt<1>("h00")) @[memory.scala 56:12]
      when _T_10 : @[memory.scala 56:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:56 assert (request.operation =/= Write)\n") @[memory.scala 56:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 56:12]
        skip @[memory.scala 56:12]
      node _T_11 = lt(io.dmem.request.bits.address, UInt<17>("h010000")) @[memory.scala 58:29]
      node _T_12 = asUInt(reset) @[memory.scala 58:12]
      node _T_13 = or(_T_11, _T_12) @[memory.scala 58:12]
      node _T_14 = eq(_T_13, UInt<1>("h00")) @[memory.scala 58:12]
      when _T_14 : @[memory.scala 58:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:58 assert (request.address < size.U)\n") @[memory.scala 58:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 58:12]
        skip @[memory.scala 58:12]
      node _T_15 = shr(io.dmem.request.bits.address, 2) @[memory.scala 61:58]
      node _T_16 = bits(_T_15, 13, 0) @[memory.scala 61:46]
      read mport MPORT_1 = memory[_T_16], clock @[memory.scala 61:46]
      io.dmem.response.bits.data <= MPORT_1 @[memory.scala 61:32]
      io.dmem.response.valid <= UInt<1>("h01") @[memory.scala 62:28]
      node _T_17 = eq(io.dmem.request.bits.operation, UInt<2>("h02")) @[memory.scala 65:29]
      when _T_17 : @[memory.scala 65:44]
        node _T_18 = shr(io.dmem.request.bits.address, 2) @[memory.scala 66:25]
        node _T_19 = bits(_T_18, 13, 0) @[memory.scala 66:13]
        infer mport MPORT_2 = memory[_T_19], clock @[memory.scala 66:13]
        MPORT_2 <= io.dmem.request.bits.writedata @[memory.scala 66:31]
        skip @[memory.scala 65:44]
      skip @[memory.scala 52:32]
    else : @[memory.scala 68:16]
      io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 69:28]
      skip @[memory.scala 68:16]
    
  module ICombinMemPort_1 : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _WIRE : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>} @[base-memory-components.scala 52:31]
    _WIRE.instruction <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    _WIRE.good <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _WIRE.address <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    io.pipeline.instruction <= _WIRE.instruction @[base-memory-components.scala 52:15]
    io.pipeline.good <= _WIRE.good @[base-memory-components.scala 52:15]
    _WIRE.valid <= io.pipeline.valid @[base-memory-components.scala 52:15]
    _WIRE.address <= io.pipeline.address @[base-memory-components.scala 52:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 57:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 57:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 57:15]
    when io.pipeline.valid : @[memory-combin-ports.scala 16:28]
      wire _WIRE_1 : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>} @[memory-combin-ports.scala 17:23]
      _WIRE_1.address <= io.pipeline.address @[memory-combin-ports.scala 18:23]
      _WIRE_1.operation <= UInt<1>("h00") @[memory-combin-ports.scala 19:23]
      _WIRE_1.writedata <= UInt<1>("h00") @[memory-combin-ports.scala 20:23]
      io.bus.request.bits.operation <= _WIRE_1.operation @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.writedata <= _WIRE_1.writedata @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.address <= _WIRE_1.address @[memory-combin-ports.scala 22:26]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 23:26]
      skip @[memory-combin-ports.scala 16:28]
    else : @[memory-combin-ports.scala 24:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 25:26]
      skip @[memory-combin-ports.scala 24:16]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 29:20]
    io.pipeline.instruction <= io.bus.response.bits.data @[memory-combin-ports.scala 30:27]
    
  module DCombinMemPort_1 : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _WIRE : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>} @[base-memory-components.scala 69:31]
    _WIRE.readdata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _WIRE.sext <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.maskmode <= UInt<2>("h00") @[base-memory-components.scala 69:31]
    _WIRE.memwrite <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.memread <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.writedata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _WIRE.good <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.address <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    io.pipeline.readdata <= _WIRE.readdata @[base-memory-components.scala 69:15]
    _WIRE.sext <= io.pipeline.sext @[base-memory-components.scala 69:15]
    _WIRE.maskmode <= io.pipeline.maskmode @[base-memory-components.scala 69:15]
    _WIRE.memwrite <= io.pipeline.memwrite @[base-memory-components.scala 69:15]
    _WIRE.memread <= io.pipeline.memread @[base-memory-components.scala 69:15]
    _WIRE.writedata <= io.pipeline.writedata @[base-memory-components.scala 69:15]
    io.pipeline.good <= _WIRE.good @[base-memory-components.scala 69:15]
    _WIRE.valid <= io.pipeline.valid @[base-memory-components.scala 69:15]
    _WIRE.address <= io.pipeline.address @[base-memory-components.scala 69:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 74:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 74:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 74:15]
    io.pipeline.good <= io.bus.response.valid @[base-memory-components.scala 76:20]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 39:20]
    node _T = or(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 41:51]
    node _T_1 = and(io.pipeline.valid, _T) @[memory-combin-ports.scala 41:27]
    when _T_1 : @[memory-combin-ports.scala 41:77]
      node _T_2 = and(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 43:34]
      node _T_3 = eq(_T_2, UInt<1>("h00")) @[memory-combin-ports.scala 43:12]
      node _T_4 = asUInt(reset) @[memory-combin-ports.scala 43:11]
      node _T_5 = or(_T_3, _T_4) @[memory-combin-ports.scala 43:11]
      node _T_6 = eq(_T_5, UInt<1>("h00")) @[memory-combin-ports.scala 43:11]
      when _T_6 : @[memory-combin-ports.scala 43:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory-combin-ports.scala:43 assert(!(io.pipeline.memread && io.pipeline.memwrite))\n") @[memory-combin-ports.scala 43:11]
        stop(clock, UInt<1>(1), 1) @[memory-combin-ports.scala 43:11]
        skip @[memory-combin-ports.scala 43:11]
      io.bus.request.bits.address <= io.pipeline.address @[memory-combin-ports.scala 45:33]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 46:26]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 48:33]
        io.bus.request.bits.operation <= UInt<2>("h02") @[memory-combin-ports.scala 57:37]
        skip @[memory-combin-ports.scala 48:33]
      else : @[memory-combin-ports.scala 58:18]
        io.bus.request.bits.operation <= UInt<1>("h00") @[memory-combin-ports.scala 60:37]
        skip @[memory-combin-ports.scala 58:18]
      skip @[memory-combin-ports.scala 41:77]
    else : @[memory-combin-ports.scala 62:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 64:26]
      skip @[memory-combin-ports.scala 62:16]
    when io.bus.response.valid : @[memory-combin-ports.scala 68:32]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 69:33]
        wire _WIRE_1 : UInt<32> @[memory-combin-ports.scala 71:28]
        node _T_7 = neq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 74:34]
        when _T_7 : @[memory-combin-ports.scala 74:43]
          node _T_8 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 76:42]
          wire _WIRE_2 : UInt<32> @[memory-combin-ports.scala 77:29]
          _WIRE_2 <= io.bus.response.bits.data @[memory-combin-ports.scala 79:18]
          node _T_9 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 82:36]
          when _T_9 : @[memory-combin-ports.scala 82:45]
            node _T_10 = eq(_T_8, UInt<1>("h00")) @[memory-combin-ports.scala 83:23]
            when _T_10 : @[memory-combin-ports.scala 83:32]
              node hi = bits(_WIRE_2, 31, 8) @[memory-combin-ports.scala 84:38]
              node lo = bits(io.pipeline.writedata, 7, 0) @[memory-combin-ports.scala 84:67]
              node _T_11 = cat(hi, lo) @[Cat.scala 30:58]
              _WIRE_1 <= _T_11 @[memory-combin-ports.scala 84:23]
              skip @[memory-combin-ports.scala 83:32]
            else : @[memory-combin-ports.scala 85:38]
              node _T_12 = eq(_T_8, UInt<1>("h01")) @[memory-combin-ports.scala 85:29]
              when _T_12 : @[memory-combin-ports.scala 85:38]
                node hi_1 = bits(_WIRE_2, 31, 16) @[memory-combin-ports.scala 86:38]
                node hi_2 = bits(io.pipeline.writedata, 15, 8) @[memory-combin-ports.scala 86:72]
                node lo_1 = bits(_WIRE_2, 7, 0) @[memory-combin-ports.scala 86:88]
                node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
                node _T_13 = cat(hi_1, lo_2) @[Cat.scala 30:58]
                _WIRE_1 <= _T_13 @[memory-combin-ports.scala 86:23]
                skip @[memory-combin-ports.scala 85:38]
              else : @[memory-combin-ports.scala 87:38]
                node _T_14 = eq(_T_8, UInt<2>("h02")) @[memory-combin-ports.scala 87:29]
                when _T_14 : @[memory-combin-ports.scala 87:38]
                  node hi_3 = bits(_WIRE_2, 31, 24) @[memory-combin-ports.scala 88:38]
                  node hi_4 = bits(io.pipeline.writedata, 23, 16) @[memory-combin-ports.scala 88:72]
                  node lo_3 = bits(_WIRE_2, 15, 0) @[memory-combin-ports.scala 88:88]
                  node lo_4 = cat(hi_4, lo_3) @[Cat.scala 30:58]
                  node _T_15 = cat(hi_3, lo_4) @[Cat.scala 30:58]
                  _WIRE_1 <= _T_15 @[memory-combin-ports.scala 88:23]
                  skip @[memory-combin-ports.scala 87:38]
                else : @[memory-combin-ports.scala 89:23]
                  node hi_5 = bits(io.pipeline.writedata, 31, 24) @[memory-combin-ports.scala 90:51]
                  node lo_5 = bits(_WIRE_2, 23, 0) @[memory-combin-ports.scala 90:68]
                  node _T_16 = cat(hi_5, lo_5) @[Cat.scala 30:58]
                  _WIRE_1 <= _T_16 @[memory-combin-ports.scala 90:23]
                  skip @[memory-combin-ports.scala 89:23]
            skip @[memory-combin-ports.scala 82:45]
          else : @[memory-combin-ports.scala 92:22]
            node _T_17 = eq(_T_8, UInt<1>("h00")) @[memory-combin-ports.scala 93:24]
            when _T_17 : @[memory-combin-ports.scala 93:33]
              node hi_6 = bits(_WIRE_2, 31, 16) @[memory-combin-ports.scala 94:38]
              node lo_6 = bits(io.pipeline.writedata, 15, 0) @[memory-combin-ports.scala 94:67]
              node _T_18 = cat(hi_6, lo_6) @[Cat.scala 30:58]
              _WIRE_1 <= _T_18 @[memory-combin-ports.scala 94:23]
              skip @[memory-combin-ports.scala 93:33]
            else : @[memory-combin-ports.scala 95:23]
              node hi_7 = bits(io.pipeline.writedata, 31, 16) @[memory-combin-ports.scala 96:51]
              node lo_7 = bits(_WIRE_2, 15, 0) @[memory-combin-ports.scala 96:68]
              node _T_19 = cat(hi_7, lo_7) @[Cat.scala 30:58]
              _WIRE_1 <= _T_19 @[memory-combin-ports.scala 96:23]
              skip @[memory-combin-ports.scala 95:23]
            skip @[memory-combin-ports.scala 92:22]
          skip @[memory-combin-ports.scala 74:43]
        else : @[memory-combin-ports.scala 99:20]
          _WIRE_1 <= io.pipeline.writedata @[memory-combin-ports.scala 101:19]
          skip @[memory-combin-ports.scala 99:20]
        io.bus.request.bits.writedata <= _WIRE_1 @[memory-combin-ports.scala 104:37]
        skip @[memory-combin-ports.scala 69:33]
      else : @[memory-combin-ports.scala 105:39]
        when io.pipeline.memread : @[memory-combin-ports.scala 105:39]
          wire _WIRE_3 : UInt<32> @[memory-combin-ports.scala 107:36]
          wire _WIRE_4 : UInt<32> @[memory-combin-ports.scala 108:36]
          node _T_20 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 110:39]
          node _T_21 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 111:34]
          when _T_21 : @[memory-combin-ports.scala 111:43]
            node _T_22 = mul(_T_20, UInt<4>("h08")) @[memory-combin-ports.scala 113:64]
            node _T_23 = dshr(io.bus.response.bits.data, _T_22) @[memory-combin-ports.scala 113:53]
            node _T_24 = and(_T_23, UInt<8>("h0ff")) @[memory-combin-ports.scala 113:72]
            _WIRE_3 <= _T_24 @[memory-combin-ports.scala 113:23]
            skip @[memory-combin-ports.scala 111:43]
          else : @[memory-combin-ports.scala 114:50]
            node _T_25 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 114:41]
            when _T_25 : @[memory-combin-ports.scala 114:50]
              node _T_26 = mul(_T_20, UInt<4>("h08")) @[memory-combin-ports.scala 116:64]
              node _T_27 = dshr(io.bus.response.bits.data, _T_26) @[memory-combin-ports.scala 116:53]
              node _T_28 = and(_T_27, UInt<16>("h0ffff")) @[memory-combin-ports.scala 116:72]
              _WIRE_3 <= _T_28 @[memory-combin-ports.scala 116:23]
              skip @[memory-combin-ports.scala 114:50]
            else : @[memory-combin-ports.scala 117:20]
              _WIRE_3 <= io.bus.response.bits.data @[memory-combin-ports.scala 118:23]
              skip @[memory-combin-ports.scala 117:20]
          when io.pipeline.sext : @[memory-combin-ports.scala 121:31]
            node _T_29 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 122:36]
            when _T_29 : @[memory-combin-ports.scala 122:45]
              node _T_30 = bits(_WIRE_3, 7, 7) @[memory-combin-ports.scala 124:59]
              node _T_31 = bits(_T_30, 0, 0) @[Bitwise.scala 72:15]
              node hi_8 = mux(_T_31, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
              node lo_8 = bits(_WIRE_3, 7, 0) @[memory-combin-ports.scala 124:79]
              node _T_32 = cat(hi_8, lo_8) @[Cat.scala 30:58]
              _WIRE_4 <= _T_32 @[memory-combin-ports.scala 124:30]
              skip @[memory-combin-ports.scala 122:45]
            else : @[memory-combin-ports.scala 125:52]
              node _T_33 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 125:43]
              when _T_33 : @[memory-combin-ports.scala 125:52]
                node _T_34 = bits(_WIRE_3, 15, 15) @[memory-combin-ports.scala 127:59]
                node _T_35 = bits(_T_34, 0, 0) @[Bitwise.scala 72:15]
                node hi_9 = mux(_T_35, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                node lo_9 = bits(_WIRE_3, 15, 0) @[memory-combin-ports.scala 127:79]
                node _T_36 = cat(hi_9, lo_9) @[Cat.scala 30:58]
                _WIRE_4 <= _T_36 @[memory-combin-ports.scala 127:30]
                skip @[memory-combin-ports.scala 125:52]
              else : @[memory-combin-ports.scala 128:22]
                _WIRE_4 <= _WIRE_3 @[memory-combin-ports.scala 130:30]
                skip @[memory-combin-ports.scala 128:22]
            skip @[memory-combin-ports.scala 121:31]
          else : @[memory-combin-ports.scala 132:20]
            _WIRE_4 <= _WIRE_3 @[memory-combin-ports.scala 133:28]
            skip @[memory-combin-ports.scala 132:20]
          io.pipeline.readdata <= _WIRE_4 @[memory-combin-ports.scala 136:28]
          skip @[memory-combin-ports.scala 105:39]
      skip @[memory-combin-ports.scala 68:32]
    
  module Control_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip opcode : UInt<7>, validinst : UInt<1>, branch : UInt<1>, memread : UInt<1>, toreg : UInt<2>, add : UInt<1>, memwrite : UInt<1>, regwrite : UInt<1>, immediate : UInt<1>, alusrc1 : UInt<2>, jump : UInt<2>}
    
    node _T = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_1 = eq(UInt<6>("h033"), _T) @[Lookup.scala 31:38]
    node _T_2 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_3 = eq(UInt<5>("h013"), _T_2) @[Lookup.scala 31:38]
    node _T_4 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_5 = eq(UInt<2>("h03"), _T_4) @[Lookup.scala 31:38]
    node _T_6 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_7 = eq(UInt<6>("h023"), _T_6) @[Lookup.scala 31:38]
    node _T_8 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_9 = eq(UInt<7>("h063"), _T_8) @[Lookup.scala 31:38]
    node _T_10 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_11 = eq(UInt<6>("h037"), _T_10) @[Lookup.scala 31:38]
    node _T_12 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_13 = eq(UInt<5>("h017"), _T_12) @[Lookup.scala 31:38]
    node _T_14 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_15 = eq(UInt<7>("h06f"), _T_14) @[Lookup.scala 31:38]
    node _T_16 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_17 = eq(UInt<7>("h067"), _T_16) @[Lookup.scala 31:38]
    node _T_18 = and(io.opcode, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _T_19 = eq(UInt<7>("h073"), _T_18) @[Lookup.scala 31:38]
    node _T_20 = mux(_T_19, UInt<1>("h01"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_21 = mux(_T_17, UInt<1>("h01"), _T_20) @[Lookup.scala 33:37]
    node _T_22 = mux(_T_15, UInt<1>("h01"), _T_21) @[Lookup.scala 33:37]
    node _T_23 = mux(_T_13, UInt<1>("h01"), _T_22) @[Lookup.scala 33:37]
    node _T_24 = mux(_T_11, UInt<1>("h01"), _T_23) @[Lookup.scala 33:37]
    node _T_25 = mux(_T_9, UInt<1>("h01"), _T_24) @[Lookup.scala 33:37]
    node _T_26 = mux(_T_7, UInt<1>("h01"), _T_25) @[Lookup.scala 33:37]
    node _T_27 = mux(_T_5, UInt<1>("h01"), _T_26) @[Lookup.scala 33:37]
    node _T_28 = mux(_T_3, UInt<1>("h01"), _T_27) @[Lookup.scala 33:37]
    node signals_0 = mux(_T_1, UInt<1>("h01"), _T_28) @[Lookup.scala 33:37]
    node _T_29 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_30 = mux(_T_17, UInt<1>("h00"), _T_29) @[Lookup.scala 33:37]
    node _T_31 = mux(_T_15, UInt<1>("h00"), _T_30) @[Lookup.scala 33:37]
    node _T_32 = mux(_T_13, UInt<1>("h00"), _T_31) @[Lookup.scala 33:37]
    node _T_33 = mux(_T_11, UInt<1>("h00"), _T_32) @[Lookup.scala 33:37]
    node _T_34 = mux(_T_9, UInt<1>("h01"), _T_33) @[Lookup.scala 33:37]
    node _T_35 = mux(_T_7, UInt<1>("h00"), _T_34) @[Lookup.scala 33:37]
    node _T_36 = mux(_T_5, UInt<1>("h00"), _T_35) @[Lookup.scala 33:37]
    node _T_37 = mux(_T_3, UInt<1>("h00"), _T_36) @[Lookup.scala 33:37]
    node signals_1 = mux(_T_1, UInt<1>("h00"), _T_37) @[Lookup.scala 33:37]
    node _T_38 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_39 = mux(_T_17, UInt<1>("h00"), _T_38) @[Lookup.scala 33:37]
    node _T_40 = mux(_T_15, UInt<1>("h00"), _T_39) @[Lookup.scala 33:37]
    node _T_41 = mux(_T_13, UInt<1>("h00"), _T_40) @[Lookup.scala 33:37]
    node _T_42 = mux(_T_11, UInt<1>("h00"), _T_41) @[Lookup.scala 33:37]
    node _T_43 = mux(_T_9, UInt<1>("h00"), _T_42) @[Lookup.scala 33:37]
    node _T_44 = mux(_T_7, UInt<1>("h00"), _T_43) @[Lookup.scala 33:37]
    node _T_45 = mux(_T_5, UInt<1>("h01"), _T_44) @[Lookup.scala 33:37]
    node _T_46 = mux(_T_3, UInt<1>("h00"), _T_45) @[Lookup.scala 33:37]
    node signals_2 = mux(_T_1, UInt<1>("h00"), _T_46) @[Lookup.scala 33:37]
    node _T_47 = mux(_T_19, UInt<2>("h03"), UInt<3>("h04")) @[Lookup.scala 33:37]
    node _T_48 = mux(_T_17, UInt<2>("h02"), _T_47) @[Lookup.scala 33:37]
    node _T_49 = mux(_T_15, UInt<2>("h02"), _T_48) @[Lookup.scala 33:37]
    node _T_50 = mux(_T_13, UInt<1>("h00"), _T_49) @[Lookup.scala 33:37]
    node _T_51 = mux(_T_11, UInt<1>("h00"), _T_50) @[Lookup.scala 33:37]
    node _T_52 = mux(_T_9, UInt<1>("h00"), _T_51) @[Lookup.scala 33:37]
    node _T_53 = mux(_T_7, UInt<1>("h00"), _T_52) @[Lookup.scala 33:37]
    node _T_54 = mux(_T_5, UInt<1>("h01"), _T_53) @[Lookup.scala 33:37]
    node _T_55 = mux(_T_3, UInt<1>("h00"), _T_54) @[Lookup.scala 33:37]
    node signals_3 = mux(_T_1, UInt<1>("h00"), _T_55) @[Lookup.scala 33:37]
    node _T_56 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_57 = mux(_T_17, UInt<1>("h00"), _T_56) @[Lookup.scala 33:37]
    node _T_58 = mux(_T_15, UInt<1>("h00"), _T_57) @[Lookup.scala 33:37]
    node _T_59 = mux(_T_13, UInt<1>("h01"), _T_58) @[Lookup.scala 33:37]
    node _T_60 = mux(_T_11, UInt<1>("h01"), _T_59) @[Lookup.scala 33:37]
    node _T_61 = mux(_T_9, UInt<1>("h00"), _T_60) @[Lookup.scala 33:37]
    node _T_62 = mux(_T_7, UInt<1>("h01"), _T_61) @[Lookup.scala 33:37]
    node _T_63 = mux(_T_5, UInt<1>("h01"), _T_62) @[Lookup.scala 33:37]
    node _T_64 = mux(_T_3, UInt<1>("h00"), _T_63) @[Lookup.scala 33:37]
    node signals_4 = mux(_T_1, UInt<1>("h00"), _T_64) @[Lookup.scala 33:37]
    node _T_65 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_66 = mux(_T_17, UInt<1>("h00"), _T_65) @[Lookup.scala 33:37]
    node _T_67 = mux(_T_15, UInt<1>("h00"), _T_66) @[Lookup.scala 33:37]
    node _T_68 = mux(_T_13, UInt<1>("h00"), _T_67) @[Lookup.scala 33:37]
    node _T_69 = mux(_T_11, UInt<1>("h00"), _T_68) @[Lookup.scala 33:37]
    node _T_70 = mux(_T_9, UInt<1>("h00"), _T_69) @[Lookup.scala 33:37]
    node _T_71 = mux(_T_7, UInt<1>("h01"), _T_70) @[Lookup.scala 33:37]
    node _T_72 = mux(_T_5, UInt<1>("h00"), _T_71) @[Lookup.scala 33:37]
    node _T_73 = mux(_T_3, UInt<1>("h00"), _T_72) @[Lookup.scala 33:37]
    node signals_5 = mux(_T_1, UInt<1>("h00"), _T_73) @[Lookup.scala 33:37]
    node _T_74 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_75 = mux(_T_17, UInt<1>("h01"), _T_74) @[Lookup.scala 33:37]
    node _T_76 = mux(_T_15, UInt<1>("h00"), _T_75) @[Lookup.scala 33:37]
    node _T_77 = mux(_T_13, UInt<1>("h01"), _T_76) @[Lookup.scala 33:37]
    node _T_78 = mux(_T_11, UInt<1>("h01"), _T_77) @[Lookup.scala 33:37]
    node _T_79 = mux(_T_9, UInt<1>("h00"), _T_78) @[Lookup.scala 33:37]
    node _T_80 = mux(_T_7, UInt<1>("h01"), _T_79) @[Lookup.scala 33:37]
    node _T_81 = mux(_T_5, UInt<1>("h01"), _T_80) @[Lookup.scala 33:37]
    node _T_82 = mux(_T_3, UInt<1>("h01"), _T_81) @[Lookup.scala 33:37]
    node signals_6 = mux(_T_1, UInt<1>("h00"), _T_82) @[Lookup.scala 33:37]
    node _T_83 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_84 = mux(_T_17, UInt<1>("h01"), _T_83) @[Lookup.scala 33:37]
    node _T_85 = mux(_T_15, UInt<1>("h01"), _T_84) @[Lookup.scala 33:37]
    node _T_86 = mux(_T_13, UInt<1>("h01"), _T_85) @[Lookup.scala 33:37]
    node _T_87 = mux(_T_11, UInt<1>("h01"), _T_86) @[Lookup.scala 33:37]
    node _T_88 = mux(_T_9, UInt<1>("h00"), _T_87) @[Lookup.scala 33:37]
    node _T_89 = mux(_T_7, UInt<1>("h00"), _T_88) @[Lookup.scala 33:37]
    node _T_90 = mux(_T_5, UInt<1>("h01"), _T_89) @[Lookup.scala 33:37]
    node _T_91 = mux(_T_3, UInt<1>("h01"), _T_90) @[Lookup.scala 33:37]
    node signals_7 = mux(_T_1, UInt<1>("h01"), _T_91) @[Lookup.scala 33:37]
    node _T_92 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_93 = mux(_T_17, UInt<1>("h00"), _T_92) @[Lookup.scala 33:37]
    node _T_94 = mux(_T_15, UInt<1>("h01"), _T_93) @[Lookup.scala 33:37]
    node _T_95 = mux(_T_13, UInt<2>("h02"), _T_94) @[Lookup.scala 33:37]
    node _T_96 = mux(_T_11, UInt<1>("h01"), _T_95) @[Lookup.scala 33:37]
    node _T_97 = mux(_T_9, UInt<1>("h00"), _T_96) @[Lookup.scala 33:37]
    node _T_98 = mux(_T_7, UInt<1>("h00"), _T_97) @[Lookup.scala 33:37]
    node _T_99 = mux(_T_5, UInt<1>("h00"), _T_98) @[Lookup.scala 33:37]
    node _T_100 = mux(_T_3, UInt<1>("h00"), _T_99) @[Lookup.scala 33:37]
    node signals_8 = mux(_T_1, UInt<1>("h00"), _T_100) @[Lookup.scala 33:37]
    node _T_101 = mux(_T_19, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _T_102 = mux(_T_17, UInt<2>("h03"), _T_101) @[Lookup.scala 33:37]
    node _T_103 = mux(_T_15, UInt<2>("h02"), _T_102) @[Lookup.scala 33:37]
    node _T_104 = mux(_T_13, UInt<1>("h00"), _T_103) @[Lookup.scala 33:37]
    node _T_105 = mux(_T_11, UInt<1>("h00"), _T_104) @[Lookup.scala 33:37]
    node _T_106 = mux(_T_9, UInt<1>("h00"), _T_105) @[Lookup.scala 33:37]
    node _T_107 = mux(_T_7, UInt<1>("h00"), _T_106) @[Lookup.scala 33:37]
    node _T_108 = mux(_T_5, UInt<1>("h00"), _T_107) @[Lookup.scala 33:37]
    node _T_109 = mux(_T_3, UInt<1>("h00"), _T_108) @[Lookup.scala 33:37]
    node signals_9 = mux(_T_1, UInt<1>("h00"), _T_109) @[Lookup.scala 33:37]
    io.validinst <= signals_0 @[control.scala 68:16]
    io.branch <= signals_1 @[control.scala 69:13]
    io.memread <= signals_2 @[control.scala 70:14]
    io.toreg <= signals_3 @[control.scala 71:12]
    io.add <= signals_4 @[control.scala 72:10]
    io.memwrite <= signals_5 @[control.scala 73:15]
    io.immediate <= signals_6 @[control.scala 74:16]
    io.regwrite <= signals_7 @[control.scala 75:15]
    io.alusrc1 <= signals_8 @[control.scala 76:14]
    io.jump <= signals_9 @[control.scala 77:11]
    
  module RegisterFile_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip readreg1 : UInt<5>, flip readreg2 : UInt<5>, flip writereg : UInt<5>, flip writedata : UInt<32>, flip wen : UInt<1>, readdata1 : UInt<32>, readdata2 : UInt<32>}
    
    reg regs : UInt<32>[32], clock @[register-file.scala 49:17]
    when io.wen : @[register-file.scala 52:17]
      regs[io.writereg] <= io.writedata @[register-file.scala 53:23]
      skip @[register-file.scala 52:17]
    io.readdata1 <= regs[io.readreg1] @[register-file.scala 58:16]
    io.readdata2 <= regs[io.readreg2] @[register-file.scala 59:16]
    
  module CSRRegFile_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip illegal_inst : UInt<1>, flip retire_inst : UInt<1>, flip pc : UInt<32>, flip read_data : UInt<32>, flip inst : UInt<32>, flip immid : UInt<32>, read_illegal : UInt<1>, write_illegal : UInt<1>, system_illegal : UInt<1>, csr_stall : UInt<1>, eret : UInt<1>, evec : UInt<32>, write_data : UInt<32>, reg_write : UInt<1>, status : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, time : UInt<32>}
    
    io.time is invalid @[csr.scala 205:6]
    io.status.uie is invalid @[csr.scala 205:6]
    io.status.sie is invalid @[csr.scala 205:6]
    io.status.wpri4 is invalid @[csr.scala 205:6]
    io.status.mie is invalid @[csr.scala 205:6]
    io.status.upie is invalid @[csr.scala 205:6]
    io.status.spie is invalid @[csr.scala 205:6]
    io.status.wpri3 is invalid @[csr.scala 205:6]
    io.status.mpie is invalid @[csr.scala 205:6]
    io.status.spp is invalid @[csr.scala 205:6]
    io.status.wpri2 is invalid @[csr.scala 205:6]
    io.status.mpp is invalid @[csr.scala 205:6]
    io.status.fs is invalid @[csr.scala 205:6]
    io.status.xs is invalid @[csr.scala 205:6]
    io.status.mprv is invalid @[csr.scala 205:6]
    io.status.sum is invalid @[csr.scala 205:6]
    io.status.mxr is invalid @[csr.scala 205:6]
    io.status.tvm is invalid @[csr.scala 205:6]
    io.status.tw is invalid @[csr.scala 205:6]
    io.status.tsr is invalid @[csr.scala 205:6]
    io.status.wpri1 is invalid @[csr.scala 205:6]
    io.status.sd is invalid @[csr.scala 205:6]
    io.reg_write is invalid @[csr.scala 205:6]
    io.write_data is invalid @[csr.scala 205:6]
    io.evec is invalid @[csr.scala 205:6]
    io.eret is invalid @[csr.scala 205:6]
    io.csr_stall is invalid @[csr.scala 205:6]
    io.system_illegal is invalid @[csr.scala 205:6]
    io.write_illegal is invalid @[csr.scala 205:6]
    io.read_illegal is invalid @[csr.scala 205:6]
    io.immid is invalid @[csr.scala 205:6]
    io.inst is invalid @[csr.scala 205:6]
    io.read_data is invalid @[csr.scala 205:6]
    io.pc is invalid @[csr.scala 205:6]
    io.retire_inst is invalid @[csr.scala 205:6]
    io.illegal_inst is invalid @[csr.scala 205:6]
    wire _WIRE : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 207:44]
    _WIRE.uie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.sie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri4 <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.upie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.spie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri3 <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mpie <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.spp <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri2 <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.mpp <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.fs <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.xs <= UInt<2>("h00") @[csr.scala 207:44]
    _WIRE.mprv <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.sum <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.mxr <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tvm <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tw <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.tsr <= UInt<1>("h00") @[csr.scala 207:44]
    _WIRE.wpri1 <= UInt<8>("h00") @[csr.scala 207:44]
    _WIRE.sd <= UInt<1>("h00") @[csr.scala 207:44]
    wire reset_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}
    reset_mstatus.uie <= _WIRE.uie
    reset_mstatus.sie <= _WIRE.sie
    reset_mstatus.wpri4 <= _WIRE.wpri4
    reset_mstatus.mie <= _WIRE.mie
    reset_mstatus.upie <= _WIRE.upie
    reset_mstatus.spie <= _WIRE.spie
    reset_mstatus.wpri3 <= _WIRE.wpri3
    reset_mstatus.mpie <= _WIRE.mpie
    reset_mstatus.spp <= _WIRE.spp
    reset_mstatus.wpri2 <= _WIRE.wpri2
    reset_mstatus.mpp <= _WIRE.mpp
    reset_mstatus.fs <= _WIRE.fs
    reset_mstatus.xs <= _WIRE.xs
    reset_mstatus.mprv <= _WIRE.mprv
    reset_mstatus.sum <= _WIRE.sum
    reset_mstatus.mxr <= _WIRE.mxr
    reset_mstatus.tvm <= _WIRE.tvm
    reset_mstatus.tw <= _WIRE.tw
    reset_mstatus.tsr <= _WIRE.tsr
    reset_mstatus.wpri1 <= _WIRE.wpri1
    reset_mstatus.sd <= _WIRE.sd
    reset_mstatus.mpp <= UInt<2>("h03") @[csr.scala 208:21]
    reset_mstatus.mie <= UInt<1>("h01") @[csr.scala 209:21]
    reg reg_mstatus : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, reset_mstatus)) @[csr.scala 212:28]
    reg reg_mepc : UInt<32>, clock @[csr.scala 214:21]
    wire _WIRE_1 : {interrupt : UInt<1>, exceptioncode : UInt<31>} @[csr.scala 216:40]
    _WIRE_1.exceptioncode <= UInt<31>("h00") @[csr.scala 216:40]
    _WIRE_1.interrupt <= UInt<1>("h00") @[csr.scala 216:40]
    reg reg_mcause : {interrupt : UInt<1>, exceptioncode : UInt<31>}, clock with : (reset => (reset, _WIRE_1)) @[csr.scala 216:27]
    reg reg_mtval : UInt<32>, clock @[csr.scala 218:22]
    reg reg_mscratch : UInt<32>, clock @[csr.scala 220:25]
    reg reg_mtimecmp : UInt<64>, clock @[csr.scala 222:25]
    reg reg_medeleg : UInt<32>, clock @[csr.scala 226:24]
    wire _WIRE_2 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 229:37]
    _WIRE_2.usix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.ssix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri4 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.msix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.utix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.stix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri3 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.mtix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.ueix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.seix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri2 <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.meix <= UInt<1>("h00") @[csr.scala 229:37]
    _WIRE_2.wpri1 <= UInt<20>("h00") @[csr.scala 229:37]
    reg reg_mip : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _WIRE_2)) @[csr.scala 229:24]
    wire _WIRE_3 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 231:37]
    _WIRE_3.usix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.ssix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri4 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.msix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.utix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.stix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri3 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.mtix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.ueix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.seix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri2 <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.meix <= UInt<1>("h00") @[csr.scala 231:37]
    _WIRE_3.wpri1 <= UInt<20>("h00") @[csr.scala 231:37]
    reg reg_mie : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>}, clock with : (reset => (reset, _WIRE_3)) @[csr.scala 231:24]
    reg reg_wfi : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 234:24]
    wire _WIRE_4 : {base : UInt<30>, mode : UInt<2>} @[csr.scala 236:39]
    _WIRE_4.mode <= UInt<2>("h00") @[csr.scala 236:39]
    _WIRE_4.base <= UInt<30>("h00") @[csr.scala 236:39]
    reg reg_mtvec : {base : UInt<30>, mode : UInt<2>}, clock with : (reset => (reset, _WIRE_4)) @[csr.scala 236:26]
    reg lo : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T = add(lo, UInt<1>("h01")) @[csr.scala 544:33]
    lo <= _T @[csr.scala 545:9]
    reg hi : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_1 = bits(_T, 6, 6) @[csr.scala 549:20]
    when _T_1 : @[csr.scala 549:34]
      node _T_2 = add(hi, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_3 = tail(_T_2, 1) @[csr.scala 549:43]
      hi <= _T_3 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_4 = cat(hi, lo) @[Cat.scala 30:58]
    reg lo_1 : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[csr.scala 543:41]
    node _T_5 = add(lo_1, io.retire_inst) @[csr.scala 544:33]
    lo_1 <= _T_5 @[csr.scala 545:9]
    reg hi_1 : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[csr.scala 548:31]
    node _T_6 = bits(_T_5, 6, 6) @[csr.scala 549:20]
    when _T_6 : @[csr.scala 549:34]
      node _T_7 = add(hi_1, UInt<1>("h01")) @[csr.scala 549:43]
      node _T_8 = tail(_T_7, 1) @[csr.scala 549:43]
      hi_1 <= _T_8 @[csr.scala 549:38]
      skip @[csr.scala 549:34]
    node _T_9 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    wire _WIRE_5 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 242:49]
    _WIRE_5.cy <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.tmzero <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.ir <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm3 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm4 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm5 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm6 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm7 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm8 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm9 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm10 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm11 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm12 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm13 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm14 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm15 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm16 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm17 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm18 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm19 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm20 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm21 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm22 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm23 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm24 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm25 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm26 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm27 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm28 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm29 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm30 <= UInt<1>("h00") @[csr.scala 242:49]
    _WIRE_5.hpm31 <= UInt<1>("h00") @[csr.scala 242:49]
    reg reg_mcounterinhibit : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _WIRE_5)) @[csr.scala 242:36]
    wire _WIRE_6 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 244:44]
    _WIRE_6.cy <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.tmzero <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.ir <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm3 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm4 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm5 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm6 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm7 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm8 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm9 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm10 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm11 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm12 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm13 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm14 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm15 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm16 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm17 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm18 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm19 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm20 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm21 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm22 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm23 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm24 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm25 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm26 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm27 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm28 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm29 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm30 <= UInt<1>("h00") @[csr.scala 244:44]
    _WIRE_6.hpm31 <= UInt<1>("h00") @[csr.scala 244:44]
    reg reg_mcounteren : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>}, clock with : (reset => (reset, _WIRE_6)) @[csr.scala 244:31]
    node lo_lo_lo = cat(io.status.sie, io.status.uie) @[csr.scala 246:38]
    node lo_lo_hi_hi = cat(io.status.upie, io.status.mie) @[csr.scala 246:38]
    node lo_lo_hi = cat(lo_lo_hi_hi, io.status.wpri4) @[csr.scala 246:38]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[csr.scala 246:38]
    node lo_hi_lo = cat(io.status.wpri3, io.status.spie) @[csr.scala 246:38]
    node lo_hi_hi_hi = cat(io.status.wpri2, io.status.spp) @[csr.scala 246:38]
    node lo_hi_hi = cat(lo_hi_hi_hi, io.status.mpie) @[csr.scala 246:38]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[csr.scala 246:38]
    node lo_2 = cat(lo_hi, lo_lo) @[csr.scala 246:38]
    node hi_lo_lo = cat(io.status.fs, io.status.mpp) @[csr.scala 246:38]
    node hi_lo_hi_hi = cat(io.status.sum, io.status.mprv) @[csr.scala 246:38]
    node hi_lo_hi = cat(hi_lo_hi_hi, io.status.xs) @[csr.scala 246:38]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[csr.scala 246:38]
    node hi_hi_lo_hi = cat(io.status.tw, io.status.tvm) @[csr.scala 246:38]
    node hi_hi_lo = cat(hi_hi_lo_hi, io.status.mxr) @[csr.scala 246:38]
    node hi_hi_hi_hi = cat(io.status.sd, io.status.wpri1) @[csr.scala 246:38]
    node hi_hi_hi = cat(hi_hi_hi_hi, io.status.tsr) @[csr.scala 246:38]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[csr.scala 246:38]
    node hi_2 = cat(hi_hi, hi_lo) @[csr.scala 246:38]
    node read_mstatus = cat(hi_2, lo_2) @[csr.scala 246:38]
    wire _WIRE_7 : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>} @[csr.scala 253:39]
    _WIRE_7.extensions <= UInt<26>("h010") @[csr.scala 253:39]
    _WIRE_7.wlrl <= UInt<4>("h00") @[csr.scala 253:39]
    _WIRE_7.mxl <= UInt<2>("h00") @[csr.scala 253:39]
    reg reg_misa : {mxl : UInt<2>, wlrl : UInt<4>, extensions : UInt<26>}, clock with : (reset => (reset, _WIRE_7)) @[csr.scala 253:25]
    wire _WIRE_8 : {bank : UInt<25>, offset : UInt<7>} @[csr.scala 255:43]
    _WIRE_8.offset <= UInt<7>("h00") @[csr.scala 255:43]
    _WIRE_8.bank <= UInt<25>("h00") @[csr.scala 255:43]
    reg reg_mvendorid : {bank : UInt<25>, offset : UInt<7>}, clock with : (reset => (reset, _WIRE_8)) @[csr.scala 255:30]
    node lo_lo_lo_lo = cat(reg_mcounterinhibit.tmzero, reg_mcounterinhibit.cy) @[csr.scala 260:50]
    node lo_lo_lo_hi = cat(reg_mcounterinhibit.hpm3, reg_mcounterinhibit.ir) @[csr.scala 260:50]
    node lo_lo_lo_1 = cat(lo_lo_lo_hi, lo_lo_lo_lo) @[csr.scala 260:50]
    node lo_lo_hi_lo = cat(reg_mcounterinhibit.hpm5, reg_mcounterinhibit.hpm4) @[csr.scala 260:50]
    node lo_lo_hi_hi_1 = cat(reg_mcounterinhibit.hpm7, reg_mcounterinhibit.hpm6) @[csr.scala 260:50]
    node lo_lo_hi_1 = cat(lo_lo_hi_hi_1, lo_lo_hi_lo) @[csr.scala 260:50]
    node lo_lo_1 = cat(lo_lo_hi_1, lo_lo_lo_1) @[csr.scala 260:50]
    node lo_hi_lo_lo = cat(reg_mcounterinhibit.hpm9, reg_mcounterinhibit.hpm8) @[csr.scala 260:50]
    node lo_hi_lo_hi = cat(reg_mcounterinhibit.hpm11, reg_mcounterinhibit.hpm10) @[csr.scala 260:50]
    node lo_hi_lo_1 = cat(lo_hi_lo_hi, lo_hi_lo_lo) @[csr.scala 260:50]
    node lo_hi_hi_lo = cat(reg_mcounterinhibit.hpm13, reg_mcounterinhibit.hpm12) @[csr.scala 260:50]
    node lo_hi_hi_hi_1 = cat(reg_mcounterinhibit.hpm15, reg_mcounterinhibit.hpm14) @[csr.scala 260:50]
    node lo_hi_hi_1 = cat(lo_hi_hi_hi_1, lo_hi_hi_lo) @[csr.scala 260:50]
    node lo_hi_1 = cat(lo_hi_hi_1, lo_hi_lo_1) @[csr.scala 260:50]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[csr.scala 260:50]
    node hi_lo_lo_lo = cat(reg_mcounterinhibit.hpm17, reg_mcounterinhibit.hpm16) @[csr.scala 260:50]
    node hi_lo_lo_hi = cat(reg_mcounterinhibit.hpm19, reg_mcounterinhibit.hpm18) @[csr.scala 260:50]
    node hi_lo_lo_1 = cat(hi_lo_lo_hi, hi_lo_lo_lo) @[csr.scala 260:50]
    node hi_lo_hi_lo = cat(reg_mcounterinhibit.hpm21, reg_mcounterinhibit.hpm20) @[csr.scala 260:50]
    node hi_lo_hi_hi_1 = cat(reg_mcounterinhibit.hpm23, reg_mcounterinhibit.hpm22) @[csr.scala 260:50]
    node hi_lo_hi_1 = cat(hi_lo_hi_hi_1, hi_lo_hi_lo) @[csr.scala 260:50]
    node hi_lo_1 = cat(hi_lo_hi_1, hi_lo_lo_1) @[csr.scala 260:50]
    node hi_hi_lo_lo = cat(reg_mcounterinhibit.hpm25, reg_mcounterinhibit.hpm24) @[csr.scala 260:50]
    node hi_hi_lo_hi_1 = cat(reg_mcounterinhibit.hpm27, reg_mcounterinhibit.hpm26) @[csr.scala 260:50]
    node hi_hi_lo_1 = cat(hi_hi_lo_hi_1, hi_hi_lo_lo) @[csr.scala 260:50]
    node hi_hi_hi_lo = cat(reg_mcounterinhibit.hpm29, reg_mcounterinhibit.hpm28) @[csr.scala 260:50]
    node hi_hi_hi_hi_1 = cat(reg_mcounterinhibit.hpm31, reg_mcounterinhibit.hpm30) @[csr.scala 260:50]
    node hi_hi_hi_1 = cat(hi_hi_hi_hi_1, hi_hi_hi_lo) @[csr.scala 260:50]
    node hi_hi_1 = cat(hi_hi_hi_1, hi_hi_lo_1) @[csr.scala 260:50]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[csr.scala 260:50]
    node _T_10 = cat(hi_3, lo_3) @[csr.scala 260:50]
    node hi_4 = cat(reg_misa.mxl, reg_misa.wlrl) @[csr.scala 266:28]
    node _T_11 = cat(hi_4, reg_misa.extensions) @[csr.scala 266:28]
    node lo_lo_hi_2 = cat(reg_mip.wpri4, reg_mip.ssix) @[csr.scala 269:32]
    node lo_lo_2 = cat(lo_lo_hi_2, reg_mip.usix) @[csr.scala 269:32]
    node lo_hi_hi_2 = cat(reg_mip.stix, reg_mip.utix) @[csr.scala 269:32]
    node lo_hi_2 = cat(lo_hi_hi_2, reg_mip.msix) @[csr.scala 269:32]
    node lo_4 = cat(lo_hi_2, lo_lo_2) @[csr.scala 269:32]
    node hi_lo_hi_2 = cat(reg_mip.ueix, reg_mip.mtix) @[csr.scala 269:32]
    node hi_lo_2 = cat(hi_lo_hi_2, reg_mip.wpri3) @[csr.scala 269:32]
    node hi_hi_lo_2 = cat(reg_mip.wpri2, reg_mip.seix) @[csr.scala 269:32]
    node hi_hi_hi_2 = cat(reg_mip.wpri1, reg_mip.meix) @[csr.scala 269:32]
    node hi_hi_2 = cat(hi_hi_hi_2, hi_hi_lo_2) @[csr.scala 269:32]
    node hi_5 = cat(hi_hi_2, hi_lo_2) @[csr.scala 269:32]
    node _T_12 = cat(hi_5, lo_4) @[csr.scala 269:32]
    node lo_lo_hi_3 = cat(reg_mie.wpri4, reg_mie.ssix) @[csr.scala 270:32]
    node lo_lo_3 = cat(lo_lo_hi_3, reg_mie.usix) @[csr.scala 270:32]
    node lo_hi_hi_3 = cat(reg_mie.stix, reg_mie.utix) @[csr.scala 270:32]
    node lo_hi_3 = cat(lo_hi_hi_3, reg_mie.msix) @[csr.scala 270:32]
    node lo_5 = cat(lo_hi_3, lo_lo_3) @[csr.scala 270:32]
    node hi_lo_hi_3 = cat(reg_mie.ueix, reg_mie.mtix) @[csr.scala 270:32]
    node hi_lo_3 = cat(hi_lo_hi_3, reg_mie.wpri3) @[csr.scala 270:32]
    node hi_hi_lo_3 = cat(reg_mie.wpri2, reg_mie.seix) @[csr.scala 270:32]
    node hi_hi_hi_3 = cat(reg_mie.wpri1, reg_mie.meix) @[csr.scala 270:32]
    node hi_hi_3 = cat(hi_hi_hi_3, hi_hi_lo_3) @[csr.scala 270:32]
    node hi_6 = cat(hi_hi_3, hi_lo_3) @[csr.scala 270:32]
    node _T_13 = cat(hi_6, lo_5) @[csr.scala 270:32]
    node _T_14 = cat(reg_mcause.interrupt, reg_mcause.exceptioncode) @[csr.scala 274:38]
    wire cmd : UInt<3>
    cmd <= UInt<3>("h03")
    node _T_15 = bits(io.inst, 6, 0) @[csr.scala 284:16]
    node _T_16 = eq(_T_15, UInt<7>("h073")) @[csr.scala 284:23]
    when _T_16 : @[csr.scala 284:42]
      node _T_17 = bits(io.inst, 14, 12) @[csr.scala 285:19]
      node _T_18 = eq(UInt<2>("h03"), _T_17) @[Conditional.scala 37:30]
      when _T_18 : @[Conditional.scala 40:58]
        cmd <= UInt<3>("h03") @[csr.scala 287:13]
        io.reg_write <= UInt<1>("h01") @[csr.scala 288:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_19 = eq(UInt<3>("h07"), _T_17) @[Conditional.scala 37:30]
        when _T_19 : @[Conditional.scala 39:67]
          cmd <= UInt<3>("h03") @[csr.scala 291:13]
          io.reg_write <= UInt<1>("h01") @[csr.scala 292:22]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_20 = eq(UInt<2>("h02"), _T_17) @[Conditional.scala 37:30]
          when _T_20 : @[Conditional.scala 39:67]
            cmd <= UInt<3>("h02") @[csr.scala 295:13]
            io.reg_write <= UInt<1>("h01") @[csr.scala 296:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_21 = eq(UInt<3>("h06"), _T_17) @[Conditional.scala 37:30]
            when _T_21 : @[Conditional.scala 39:67]
              cmd <= UInt<3>("h02") @[csr.scala 299:13]
              io.reg_write <= UInt<1>("h01") @[csr.scala 300:22]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_22 = eq(UInt<1>("h01"), _T_17) @[Conditional.scala 37:30]
              when _T_22 : @[Conditional.scala 39:67]
                cmd <= UInt<3>("h01") @[csr.scala 303:13]
                io.reg_write <= UInt<1>("h01") @[csr.scala 304:22]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_23 = eq(UInt<3>("h05"), _T_17) @[Conditional.scala 37:30]
                when _T_23 : @[Conditional.scala 39:67]
                  cmd <= UInt<3>("h01") @[csr.scala 307:13]
                  io.reg_write <= UInt<1>("h01") @[csr.scala 308:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_24 = eq(UInt<1>("h00"), _T_17) @[Conditional.scala 37:30]
                  when _T_24 : @[Conditional.scala 39:67]
                    cmd <= UInt<3>("h04") @[csr.scala 311:13]
                    io.reg_write <= UInt<1>("h00") @[csr.scala 312:22]
                    skip @[Conditional.scala 39:67]
      skip @[csr.scala 284:42]
    else : @[csr.scala 315:14]
      cmd <= UInt<3>("h00") @[csr.scala 316:9]
      io.reg_write <= UInt<1>("h00") @[csr.scala 317:18]
      skip @[csr.scala 315:14]
    node csr = bits(io.inst, 31, 20) @[csr.scala 320:20]
    node system_insn = eq(cmd, UInt<3>("h04")) @[csr.scala 321:25]
    node _T_25 = neq(cmd, UInt<3>("h00")) @[csr.scala 322:21]
    node _T_26 = eq(system_insn, UInt<1>("h00")) @[csr.scala 322:40]
    node cpu_ren = and(_T_25, _T_26) @[csr.scala 322:37]
    node _T_27 = eq(csr, UInt<10>("h0320")) @[csr.scala 327:66]
    node _T_28 = eq(csr, UInt<12>("h0b00")) @[csr.scala 327:66]
    node _T_29 = eq(csr, UInt<12>("h0b02")) @[csr.scala 327:66]
    node _T_30 = eq(csr, UInt<12>("h0f13")) @[csr.scala 327:66]
    node _T_31 = eq(csr, UInt<12>("h0f12")) @[csr.scala 327:66]
    node _T_32 = eq(csr, UInt<12>("h0f11")) @[csr.scala 327:66]
    node _T_33 = eq(csr, UInt<10>("h0301")) @[csr.scala 327:66]
    node _T_34 = eq(csr, UInt<10>("h0300")) @[csr.scala 327:66]
    node _T_35 = eq(csr, UInt<10>("h0305")) @[csr.scala 327:66]
    node _T_36 = eq(csr, UInt<10>("h0344")) @[csr.scala 327:66]
    node _T_37 = eq(csr, UInt<10>("h0304")) @[csr.scala 327:66]
    node _T_38 = eq(csr, UInt<10>("h0340")) @[csr.scala 327:66]
    node _T_39 = eq(csr, UInt<10>("h0341")) @[csr.scala 327:66]
    node _T_40 = eq(csr, UInt<10>("h0343")) @[csr.scala 327:66]
    node _T_41 = eq(csr, UInt<10>("h0342")) @[csr.scala 327:66]
    node _T_42 = eq(csr, UInt<12>("h0f14")) @[csr.scala 327:66]
    node _T_43 = eq(csr, UInt<10>("h0302")) @[csr.scala 327:66]
    node _T_44 = eq(csr, UInt<12>("h0b80")) @[csr.scala 327:66]
    node _T_45 = eq(csr, UInt<12>("h0b82")) @[csr.scala 327:66]
    node _T_46 = bits(csr, 9, 8) @[csr.scala 328:44]
    node priv_sufficient = geq(UInt<2>("h03"), _T_46) @[csr.scala 328:38]
    node _T_47 = bits(csr, 11, 10) @[csr.scala 329:22]
    node read_only = andr(_T_47) @[csr.scala 329:30]
    node _T_48 = neq(cmd, UInt<3>("h05")) @[csr.scala 330:32]
    node _T_49 = and(cpu_ren, _T_48) @[csr.scala 330:25]
    node cpu_wen = and(_T_49, priv_sufficient) @[csr.scala 330:49]
    node _T_50 = eq(read_only, UInt<1>("h00")) @[csr.scala 331:24]
    node wen = and(cpu_wen, _T_50) @[csr.scala 331:21]
    node _T_51 = bits(io.inst, 14, 14) @[csr.scala 332:84]
    node _T_52 = mux(_T_51, io.immid, io.read_data) @[csr.scala 332:76]
    node _T_53 = eq(cmd, UInt<3>("h02")) @[csr.scala 534:46]
    node _T_54 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:46]
    node _T_55 = or(_T_53, _T_54) @[csr.scala 534:61]
    node _T_56 = mux(_T_55, io.write_data, UInt<1>("h00")) @[csr.scala 534:5]
    node _T_57 = or(_T_56, _T_52) @[csr.scala 534:79]
    node _T_58 = eq(cmd, UInt<3>("h03")) @[csr.scala 534:99]
    node _T_59 = mux(_T_58, _T_52, UInt<1>("h00")) @[csr.scala 534:94]
    node _T_60 = not(_T_59) @[csr.scala 534:90]
    node wdata = and(_T_57, _T_60) @[csr.scala 534:88]
    node _T_61 = bits(csr, 2, 0) @[csr.scala 335:26]
    node opcode = dshl(UInt<1>("h01"), _T_61) @[csr.scala 335:20]
    node _T_62 = bits(opcode, 0, 0) @[csr.scala 336:40]
    node insn_call = and(system_insn, _T_62) @[csr.scala 336:31]
    node _T_63 = bits(opcode, 1, 1) @[csr.scala 337:41]
    node insn_break = and(system_insn, _T_63) @[csr.scala 337:32]
    node _T_64 = bits(opcode, 2, 2) @[csr.scala 338:39]
    node _T_65 = and(system_insn, _T_64) @[csr.scala 338:30]
    node insn_ret = and(_T_65, priv_sufficient) @[csr.scala 338:43]
    node _T_66 = bits(opcode, 5, 5) @[csr.scala 340:39]
    node _T_67 = and(system_insn, _T_66) @[csr.scala 340:30]
    node insn_wfi = and(_T_67, priv_sufficient) @[csr.scala 340:43]
    node _T_68 = bits(csr, 9, 8) @[csr.scala 343:31]
    node _T_69 = lt(UInt<2>("h03"), _T_68) @[csr.scala 343:26]
    node _T_70 = eq(csr, UInt<10>("h0320")) @[csr.scala 342:99]
    node _T_71 = eq(csr, UInt<12>("h0b00")) @[csr.scala 342:99]
    node _T_72 = eq(csr, UInt<12>("h0b02")) @[csr.scala 342:99]
    node _T_73 = eq(csr, UInt<12>("h0f13")) @[csr.scala 342:99]
    node _T_74 = eq(csr, UInt<12>("h0f12")) @[csr.scala 342:99]
    node _T_75 = eq(csr, UInt<12>("h0f11")) @[csr.scala 342:99]
    node _T_76 = eq(csr, UInt<10>("h0301")) @[csr.scala 342:99]
    node _T_77 = eq(csr, UInt<10>("h0300")) @[csr.scala 342:99]
    node _T_78 = eq(csr, UInt<10>("h0305")) @[csr.scala 342:99]
    node _T_79 = eq(csr, UInt<10>("h0344")) @[csr.scala 342:99]
    node _T_80 = eq(csr, UInt<10>("h0304")) @[csr.scala 342:99]
    node _T_81 = eq(csr, UInt<10>("h0340")) @[csr.scala 342:99]
    node _T_82 = eq(csr, UInt<10>("h0341")) @[csr.scala 342:99]
    node _T_83 = eq(csr, UInt<10>("h0343")) @[csr.scala 342:99]
    node _T_84 = eq(csr, UInt<10>("h0342")) @[csr.scala 342:99]
    node _T_85 = eq(csr, UInt<12>("h0f14")) @[csr.scala 342:99]
    node _T_86 = eq(csr, UInt<10>("h0302")) @[csr.scala 342:99]
    node _T_87 = eq(csr, UInt<12>("h0b80")) @[csr.scala 342:99]
    node _T_88 = eq(csr, UInt<12>("h0b82")) @[csr.scala 342:99]
    node _T_89 = or(_T_70, _T_71) @[csr.scala 342:119]
    node _T_90 = or(_T_89, _T_72) @[csr.scala 342:119]
    node _T_91 = or(_T_90, _T_73) @[csr.scala 342:119]
    node _T_92 = or(_T_91, _T_74) @[csr.scala 342:119]
    node _T_93 = or(_T_92, _T_75) @[csr.scala 342:119]
    node _T_94 = or(_T_93, _T_76) @[csr.scala 342:119]
    node _T_95 = or(_T_94, _T_77) @[csr.scala 342:119]
    node _T_96 = or(_T_95, _T_78) @[csr.scala 342:119]
    node _T_97 = or(_T_96, _T_79) @[csr.scala 342:119]
    node _T_98 = or(_T_97, _T_80) @[csr.scala 342:119]
    node _T_99 = or(_T_98, _T_81) @[csr.scala 342:119]
    node _T_100 = or(_T_99, _T_82) @[csr.scala 342:119]
    node _T_101 = or(_T_100, _T_83) @[csr.scala 342:119]
    node _T_102 = or(_T_101, _T_84) @[csr.scala 342:119]
    node _T_103 = or(_T_102, _T_85) @[csr.scala 342:119]
    node _T_104 = or(_T_103, _T_86) @[csr.scala 342:119]
    node _T_105 = or(_T_104, _T_87) @[csr.scala 342:119]
    node _T_106 = or(_T_105, _T_88) @[csr.scala 342:119]
    node _T_107 = eq(_T_106, UInt<1>("h00")) @[csr.scala 343:40]
    node _T_108 = or(_T_69, _T_107) @[csr.scala 343:37]
    io.read_illegal <= _T_108 @[csr.scala 343:19]
    node _T_109 = bits(csr, 11, 10) @[csr.scala 344:26]
    node _T_110 = andr(_T_109) @[csr.scala 344:34]
    io.write_illegal <= _T_110 @[csr.scala 344:20]
    node _T_111 = bits(csr, 9, 8) @[csr.scala 345:33]
    node _T_112 = lt(UInt<2>("h03"), _T_111) @[csr.scala 345:28]
    io.system_illegal <= _T_112 @[csr.scala 345:21]
    io.status.uie <= reg_mstatus.uie @[csr.scala 347:13]
    io.status.sie <= reg_mstatus.sie @[csr.scala 347:13]
    io.status.wpri4 <= reg_mstatus.wpri4 @[csr.scala 347:13]
    io.status.mie <= reg_mstatus.mie @[csr.scala 347:13]
    io.status.upie <= reg_mstatus.upie @[csr.scala 347:13]
    io.status.spie <= reg_mstatus.spie @[csr.scala 347:13]
    io.status.wpri3 <= reg_mstatus.wpri3 @[csr.scala 347:13]
    io.status.mpie <= reg_mstatus.mpie @[csr.scala 347:13]
    io.status.spp <= reg_mstatus.spp @[csr.scala 347:13]
    io.status.wpri2 <= reg_mstatus.wpri2 @[csr.scala 347:13]
    io.status.mpp <= reg_mstatus.mpp @[csr.scala 347:13]
    io.status.fs <= reg_mstatus.fs @[csr.scala 347:13]
    io.status.xs <= reg_mstatus.xs @[csr.scala 347:13]
    io.status.mprv <= reg_mstatus.mprv @[csr.scala 347:13]
    io.status.sum <= reg_mstatus.sum @[csr.scala 347:13]
    io.status.mxr <= reg_mstatus.mxr @[csr.scala 347:13]
    io.status.tvm <= reg_mstatus.tvm @[csr.scala 347:13]
    io.status.tw <= reg_mstatus.tw @[csr.scala 347:13]
    io.status.tsr <= reg_mstatus.tsr @[csr.scala 347:13]
    io.status.wpri1 <= reg_mstatus.wpri1 @[csr.scala 347:13]
    io.status.sd <= reg_mstatus.sd @[csr.scala 347:13]
    node _T_113 = or(insn_call, insn_break) @[csr.scala 349:24]
    node _T_114 = or(_T_113, insn_ret) @[csr.scala 349:38]
    io.eret <= _T_114 @[csr.scala 349:11]
    when io.illegal_inst : @[csr.scala 352:26]
      node _T_115 = and(UInt<2>("h02"), UInt<32>("h080000000")) @[csr.scala 353:57]
      reg_mcause.interrupt <= _T_115 @[csr.scala 353:26]
      node _T_116 = and(UInt<2>("h02"), UInt<31>("h07fffffff")) @[csr.scala 354:61]
      reg_mcause.exceptioncode <= _T_116 @[csr.scala 354:30]
      io.evec <= UInt<32>("h080000000") @[csr.scala 355:13]
      reg_mepc <= io.pc @[csr.scala 356:14]
      skip @[csr.scala 352:26]
    node _T_117 = geq(_T_4, reg_mtimecmp) @[csr.scala 381:25]
    when _T_117 : @[csr.scala 381:42]
      reg_mip.mtix <= UInt<1>("h01") @[csr.scala 382:20]
      skip @[csr.scala 381:42]
    node _T_118 = bits(csr, 10, 10) @[csr.scala 386:25]
    node _T_119 = eq(_T_118, UInt<1>("h00")) @[csr.scala 386:21]
    node _T_120 = and(insn_ret, _T_119) @[csr.scala 386:18]
    when _T_120 : @[csr.scala 386:31]
      reg_mstatus.mie <= reg_mstatus.mpie @[csr.scala 387:21]
      reg_mstatus.mpie <= UInt<1>("h01") @[csr.scala 388:22]
      io.evec <= reg_mepc @[csr.scala 389:13]
      skip @[csr.scala 386:31]
    when insn_call : @[csr.scala 393:18]
      io.evec <= UInt<32>("h080000004") @[csr.scala 394:13]
      node _T_121 = and(UInt<4>("h0b"), UInt<32>("h080000000")) @[csr.scala 395:51]
      reg_mcause.interrupt <= _T_121 @[csr.scala 395:26]
      node _T_122 = and(UInt<4>("h0b"), UInt<31>("h07fffffff")) @[csr.scala 396:55]
      reg_mcause.exceptioncode <= _T_122 @[csr.scala 396:30]
      skip @[csr.scala 393:18]
    when insn_break : @[csr.scala 400:19]
      io.evec <= UInt<32>("h080000008") @[csr.scala 401:13]
      node _T_123 = and(UInt<2>("h03"), UInt<32>("h080000000")) @[csr.scala 402:48]
      reg_mcause.interrupt <= _T_123 @[csr.scala 402:26]
      node _T_124 = and(UInt<2>("h03"), UInt<31>("h07fffffff")) @[csr.scala 403:52]
      reg_mcause.exceptioncode <= _T_124 @[csr.scala 403:30]
      skip @[csr.scala 400:19]
    io.time <= _T_4 @[csr.scala 406:11]
    io.csr_stall <= reg_wfi @[csr.scala 407:16]
    node _T_125 = mux(_T_27, _T_10, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_126 = mux(_T_28, _T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_127 = mux(_T_29, _T_9, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_128 = mux(_T_30, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_129 = mux(_T_31, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_130 = mux(_T_32, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_131 = mux(_T_33, _T_11, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_132 = mux(_T_34, read_mstatus, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_133 = mux(_T_35, UInt<32>("h080000000"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_134 = mux(_T_36, _T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_135 = mux(_T_37, _T_13, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_136 = mux(_T_38, reg_mscratch, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_137 = mux(_T_39, reg_mepc, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_138 = mux(_T_40, reg_mtval, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_139 = mux(_T_41, _T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_140 = mux(_T_42, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_141 = mux(_T_43, reg_medeleg, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_142 = mux(_T_44, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_143 = mux(_T_45, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_144 = or(_T_125, _T_126) @[Mux.scala 27:72]
    node _T_145 = or(_T_144, _T_127) @[Mux.scala 27:72]
    node _T_146 = or(_T_145, _T_128) @[Mux.scala 27:72]
    node _T_147 = or(_T_146, _T_129) @[Mux.scala 27:72]
    node _T_148 = or(_T_147, _T_130) @[Mux.scala 27:72]
    node _T_149 = or(_T_148, _T_131) @[Mux.scala 27:72]
    node _T_150 = or(_T_149, _T_132) @[Mux.scala 27:72]
    node _T_151 = or(_T_150, _T_133) @[Mux.scala 27:72]
    node _T_152 = or(_T_151, _T_134) @[Mux.scala 27:72]
    node _T_153 = or(_T_152, _T_135) @[Mux.scala 27:72]
    node _T_154 = or(_T_153, _T_136) @[Mux.scala 27:72]
    node _T_155 = or(_T_154, _T_137) @[Mux.scala 27:72]
    node _T_156 = or(_T_155, _T_138) @[Mux.scala 27:72]
    node _T_157 = or(_T_156, _T_139) @[Mux.scala 27:72]
    node _T_158 = or(_T_157, _T_140) @[Mux.scala 27:72]
    node _T_159 = or(_T_158, _T_141) @[Mux.scala 27:72]
    node _T_160 = or(_T_159, _T_142) @[Mux.scala 27:72]
    node _T_161 = or(_T_160, _T_143) @[Mux.scala 27:72]
    wire _WIRE_9 : UInt<64> @[Mux.scala 27:72]
    _WIRE_9 <= _T_161 @[Mux.scala 27:72]
    io.write_data <= _WIRE_9 @[csr.scala 410:17]
    when wen : @[csr.scala 412:14]
      when _T_34 : @[csr.scala 428:40]
        wire _WIRE_10 : {sd : UInt<1>, wpri1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, wpri2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, wpri3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, wpri4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 429:39]
        wire _WIRE_11 : UInt<32>
        _WIRE_11 <= wdata
        node _T_162 = bits(_WIRE_11, 0, 0) @[csr.scala 429:39]
        _WIRE_10.uie <= _T_162 @[csr.scala 429:39]
        node _T_163 = bits(_WIRE_11, 1, 1) @[csr.scala 429:39]
        _WIRE_10.sie <= _T_163 @[csr.scala 429:39]
        node _T_164 = bits(_WIRE_11, 2, 2) @[csr.scala 429:39]
        _WIRE_10.wpri4 <= _T_164 @[csr.scala 429:39]
        node _T_165 = bits(_WIRE_11, 3, 3) @[csr.scala 429:39]
        _WIRE_10.mie <= _T_165 @[csr.scala 429:39]
        node _T_166 = bits(_WIRE_11, 4, 4) @[csr.scala 429:39]
        _WIRE_10.upie <= _T_166 @[csr.scala 429:39]
        node _T_167 = bits(_WIRE_11, 5, 5) @[csr.scala 429:39]
        _WIRE_10.spie <= _T_167 @[csr.scala 429:39]
        node _T_168 = bits(_WIRE_11, 6, 6) @[csr.scala 429:39]
        _WIRE_10.wpri3 <= _T_168 @[csr.scala 429:39]
        node _T_169 = bits(_WIRE_11, 7, 7) @[csr.scala 429:39]
        _WIRE_10.mpie <= _T_169 @[csr.scala 429:39]
        node _T_170 = bits(_WIRE_11, 8, 8) @[csr.scala 429:39]
        _WIRE_10.spp <= _T_170 @[csr.scala 429:39]
        node _T_171 = bits(_WIRE_11, 10, 9) @[csr.scala 429:39]
        _WIRE_10.wpri2 <= _T_171 @[csr.scala 429:39]
        node _T_172 = bits(_WIRE_11, 12, 11) @[csr.scala 429:39]
        _WIRE_10.mpp <= _T_172 @[csr.scala 429:39]
        node _T_173 = bits(_WIRE_11, 14, 13) @[csr.scala 429:39]
        _WIRE_10.fs <= _T_173 @[csr.scala 429:39]
        node _T_174 = bits(_WIRE_11, 16, 15) @[csr.scala 429:39]
        _WIRE_10.xs <= _T_174 @[csr.scala 429:39]
        node _T_175 = bits(_WIRE_11, 17, 17) @[csr.scala 429:39]
        _WIRE_10.mprv <= _T_175 @[csr.scala 429:39]
        node _T_176 = bits(_WIRE_11, 18, 18) @[csr.scala 429:39]
        _WIRE_10.sum <= _T_176 @[csr.scala 429:39]
        node _T_177 = bits(_WIRE_11, 19, 19) @[csr.scala 429:39]
        _WIRE_10.mxr <= _T_177 @[csr.scala 429:39]
        node _T_178 = bits(_WIRE_11, 20, 20) @[csr.scala 429:39]
        _WIRE_10.tvm <= _T_178 @[csr.scala 429:39]
        node _T_179 = bits(_WIRE_11, 21, 21) @[csr.scala 429:39]
        _WIRE_10.tw <= _T_179 @[csr.scala 429:39]
        node _T_180 = bits(_WIRE_11, 22, 22) @[csr.scala 429:39]
        _WIRE_10.tsr <= _T_180 @[csr.scala 429:39]
        node _T_181 = bits(_WIRE_11, 30, 23) @[csr.scala 429:39]
        _WIRE_10.wpri1 <= _T_181 @[csr.scala 429:39]
        node _T_182 = bits(_WIRE_11, 31, 31) @[csr.scala 429:39]
        _WIRE_10.sd <= _T_182 @[csr.scala 429:39]
        reg_mstatus.mie <= _WIRE_10.mie @[csr.scala 430:23]
        reg_mstatus.mpie <= _WIRE_10.mpie @[csr.scala 431:24]
        reg_mstatus.spp <= UInt<1>("h00") @[csr.scala 433:23]
        reg_mstatus.uie <= UInt<1>("h00") @[csr.scala 434:23]
        reg_mstatus.upie <= UInt<1>("h00") @[csr.scala 435:24]
        reg_mstatus.mprv <= UInt<1>("h00") @[csr.scala 436:24]
        reg_mstatus.mxr <= UInt<1>("h00") @[csr.scala 437:23]
        reg_mstatus.sum <= UInt<1>("h00") @[csr.scala 438:23]
        reg_mstatus.tvm <= UInt<1>("h00") @[csr.scala 439:23]
        reg_mstatus.tw <= UInt<1>("h00") @[csr.scala 440:22]
        reg_mstatus.tsr <= UInt<1>("h00") @[csr.scala 441:23]
        reg_mstatus.fs <= UInt<1>("h00") @[csr.scala 442:22]
        reg_mstatus.xs <= UInt<1>("h00") @[csr.scala 443:22]
        reg_mstatus.sd <= UInt<1>("h00") @[csr.scala 444:22]
        skip @[csr.scala 428:40]
      when _T_36 : @[csr.scala 458:36]
        wire _WIRE_12 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 459:35]
        wire _WIRE_13 : UInt<32>
        _WIRE_13 <= wdata
        node _T_183 = bits(_WIRE_13, 0, 0) @[csr.scala 459:35]
        _WIRE_12.usix <= _T_183 @[csr.scala 459:35]
        node _T_184 = bits(_WIRE_13, 1, 1) @[csr.scala 459:35]
        _WIRE_12.ssix <= _T_184 @[csr.scala 459:35]
        node _T_185 = bits(_WIRE_13, 2, 2) @[csr.scala 459:35]
        _WIRE_12.wpri4 <= _T_185 @[csr.scala 459:35]
        node _T_186 = bits(_WIRE_13, 3, 3) @[csr.scala 459:35]
        _WIRE_12.msix <= _T_186 @[csr.scala 459:35]
        node _T_187 = bits(_WIRE_13, 4, 4) @[csr.scala 459:35]
        _WIRE_12.utix <= _T_187 @[csr.scala 459:35]
        node _T_188 = bits(_WIRE_13, 5, 5) @[csr.scala 459:35]
        _WIRE_12.stix <= _T_188 @[csr.scala 459:35]
        node _T_189 = bits(_WIRE_13, 6, 6) @[csr.scala 459:35]
        _WIRE_12.wpri3 <= _T_189 @[csr.scala 459:35]
        node _T_190 = bits(_WIRE_13, 7, 7) @[csr.scala 459:35]
        _WIRE_12.mtix <= _T_190 @[csr.scala 459:35]
        node _T_191 = bits(_WIRE_13, 8, 8) @[csr.scala 459:35]
        _WIRE_12.ueix <= _T_191 @[csr.scala 459:35]
        node _T_192 = bits(_WIRE_13, 9, 9) @[csr.scala 459:35]
        _WIRE_12.seix <= _T_192 @[csr.scala 459:35]
        node _T_193 = bits(_WIRE_13, 10, 10) @[csr.scala 459:35]
        _WIRE_12.wpri2 <= _T_193 @[csr.scala 459:35]
        node _T_194 = bits(_WIRE_13, 11, 11) @[csr.scala 459:35]
        _WIRE_12.meix <= _T_194 @[csr.scala 459:35]
        node _T_195 = bits(_WIRE_13, 31, 12) @[csr.scala 459:35]
        _WIRE_12.wpri1 <= _T_195 @[csr.scala 459:35]
        reg_mip.msix <= _WIRE_12.msix @[csr.scala 460:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 461:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 462:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 463:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 464:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 465:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 466:20]
        skip @[csr.scala 458:36]
      when _T_37 : @[csr.scala 473:36]
        wire _WIRE_14 : {wpri1 : UInt<20>, meix : UInt<1>, wpri2 : UInt<1>, seix : UInt<1>, ueix : UInt<1>, mtix : UInt<1>, wpri3 : UInt<1>, stix : UInt<1>, utix : UInt<1>, msix : UInt<1>, wpri4 : UInt<1>, ssix : UInt<1>, usix : UInt<1>} @[csr.scala 474:35]
        wire _WIRE_15 : UInt<32>
        _WIRE_15 <= wdata
        node _T_196 = bits(_WIRE_15, 0, 0) @[csr.scala 474:35]
        _WIRE_14.usix <= _T_196 @[csr.scala 474:35]
        node _T_197 = bits(_WIRE_15, 1, 1) @[csr.scala 474:35]
        _WIRE_14.ssix <= _T_197 @[csr.scala 474:35]
        node _T_198 = bits(_WIRE_15, 2, 2) @[csr.scala 474:35]
        _WIRE_14.wpri4 <= _T_198 @[csr.scala 474:35]
        node _T_199 = bits(_WIRE_15, 3, 3) @[csr.scala 474:35]
        _WIRE_14.msix <= _T_199 @[csr.scala 474:35]
        node _T_200 = bits(_WIRE_15, 4, 4) @[csr.scala 474:35]
        _WIRE_14.utix <= _T_200 @[csr.scala 474:35]
        node _T_201 = bits(_WIRE_15, 5, 5) @[csr.scala 474:35]
        _WIRE_14.stix <= _T_201 @[csr.scala 474:35]
        node _T_202 = bits(_WIRE_15, 6, 6) @[csr.scala 474:35]
        _WIRE_14.wpri3 <= _T_202 @[csr.scala 474:35]
        node _T_203 = bits(_WIRE_15, 7, 7) @[csr.scala 474:35]
        _WIRE_14.mtix <= _T_203 @[csr.scala 474:35]
        node _T_204 = bits(_WIRE_15, 8, 8) @[csr.scala 474:35]
        _WIRE_14.ueix <= _T_204 @[csr.scala 474:35]
        node _T_205 = bits(_WIRE_15, 9, 9) @[csr.scala 474:35]
        _WIRE_14.seix <= _T_205 @[csr.scala 474:35]
        node _T_206 = bits(_WIRE_15, 10, 10) @[csr.scala 474:35]
        _WIRE_14.wpri2 <= _T_206 @[csr.scala 474:35]
        node _T_207 = bits(_WIRE_15, 11, 11) @[csr.scala 474:35]
        _WIRE_14.meix <= _T_207 @[csr.scala 474:35]
        node _T_208 = bits(_WIRE_15, 31, 12) @[csr.scala 474:35]
        _WIRE_14.wpri1 <= _T_208 @[csr.scala 474:35]
        reg_mie.meix <= _WIRE_14.meix @[csr.scala 475:20]
        reg_mie.msix <= _WIRE_14.msix @[csr.scala 476:20]
        reg_mie.mtix <= _WIRE_14.mtix @[csr.scala 477:20]
        reg_mip.seix <= UInt<1>("h00") @[csr.scala 478:20]
        reg_mip.ueix <= UInt<1>("h00") @[csr.scala 479:20]
        reg_mip.stix <= UInt<1>("h00") @[csr.scala 480:20]
        reg_mip.utix <= UInt<1>("h00") @[csr.scala 481:20]
        reg_mip.ssix <= UInt<1>("h00") @[csr.scala 482:20]
        reg_mip.usix <= UInt<1>("h00") @[csr.scala 483:20]
        skip @[csr.scala 473:36]
      when _T_27 : @[csr.scala 492:48]
        wire _WIRE_16 : {hpm31 : UInt<1>, hpm30 : UInt<1>, hpm29 : UInt<1>, hpm28 : UInt<1>, hpm27 : UInt<1>, hpm26 : UInt<1>, hpm25 : UInt<1>, hpm24 : UInt<1>, hpm23 : UInt<1>, hpm22 : UInt<1>, hpm21 : UInt<1>, hpm20 : UInt<1>, hpm19 : UInt<1>, hpm18 : UInt<1>, hpm17 : UInt<1>, hpm16 : UInt<1>, hpm15 : UInt<1>, hpm14 : UInt<1>, hpm13 : UInt<1>, hpm12 : UInt<1>, hpm11 : UInt<1>, hpm10 : UInt<1>, hpm9 : UInt<1>, hpm8 : UInt<1>, hpm7 : UInt<1>, hpm6 : UInt<1>, hpm5 : UInt<1>, hpm4 : UInt<1>, hpm3 : UInt<1>, ir : UInt<1>, tmzero : UInt<1>, cy : UInt<1>} @[csr.scala 493:47]
        wire _WIRE_17 : UInt<32>
        _WIRE_17 <= wdata
        node _T_209 = bits(_WIRE_17, 0, 0) @[csr.scala 493:47]
        _WIRE_16.cy <= _T_209 @[csr.scala 493:47]
        node _T_210 = bits(_WIRE_17, 1, 1) @[csr.scala 493:47]
        _WIRE_16.tmzero <= _T_210 @[csr.scala 493:47]
        node _T_211 = bits(_WIRE_17, 2, 2) @[csr.scala 493:47]
        _WIRE_16.ir <= _T_211 @[csr.scala 493:47]
        node _T_212 = bits(_WIRE_17, 3, 3) @[csr.scala 493:47]
        _WIRE_16.hpm3 <= _T_212 @[csr.scala 493:47]
        node _T_213 = bits(_WIRE_17, 4, 4) @[csr.scala 493:47]
        _WIRE_16.hpm4 <= _T_213 @[csr.scala 493:47]
        node _T_214 = bits(_WIRE_17, 5, 5) @[csr.scala 493:47]
        _WIRE_16.hpm5 <= _T_214 @[csr.scala 493:47]
        node _T_215 = bits(_WIRE_17, 6, 6) @[csr.scala 493:47]
        _WIRE_16.hpm6 <= _T_215 @[csr.scala 493:47]
        node _T_216 = bits(_WIRE_17, 7, 7) @[csr.scala 493:47]
        _WIRE_16.hpm7 <= _T_216 @[csr.scala 493:47]
        node _T_217 = bits(_WIRE_17, 8, 8) @[csr.scala 493:47]
        _WIRE_16.hpm8 <= _T_217 @[csr.scala 493:47]
        node _T_218 = bits(_WIRE_17, 9, 9) @[csr.scala 493:47]
        _WIRE_16.hpm9 <= _T_218 @[csr.scala 493:47]
        node _T_219 = bits(_WIRE_17, 10, 10) @[csr.scala 493:47]
        _WIRE_16.hpm10 <= _T_219 @[csr.scala 493:47]
        node _T_220 = bits(_WIRE_17, 11, 11) @[csr.scala 493:47]
        _WIRE_16.hpm11 <= _T_220 @[csr.scala 493:47]
        node _T_221 = bits(_WIRE_17, 12, 12) @[csr.scala 493:47]
        _WIRE_16.hpm12 <= _T_221 @[csr.scala 493:47]
        node _T_222 = bits(_WIRE_17, 13, 13) @[csr.scala 493:47]
        _WIRE_16.hpm13 <= _T_222 @[csr.scala 493:47]
        node _T_223 = bits(_WIRE_17, 14, 14) @[csr.scala 493:47]
        _WIRE_16.hpm14 <= _T_223 @[csr.scala 493:47]
        node _T_224 = bits(_WIRE_17, 15, 15) @[csr.scala 493:47]
        _WIRE_16.hpm15 <= _T_224 @[csr.scala 493:47]
        node _T_225 = bits(_WIRE_17, 16, 16) @[csr.scala 493:47]
        _WIRE_16.hpm16 <= _T_225 @[csr.scala 493:47]
        node _T_226 = bits(_WIRE_17, 17, 17) @[csr.scala 493:47]
        _WIRE_16.hpm17 <= _T_226 @[csr.scala 493:47]
        node _T_227 = bits(_WIRE_17, 18, 18) @[csr.scala 493:47]
        _WIRE_16.hpm18 <= _T_227 @[csr.scala 493:47]
        node _T_228 = bits(_WIRE_17, 19, 19) @[csr.scala 493:47]
        _WIRE_16.hpm19 <= _T_228 @[csr.scala 493:47]
        node _T_229 = bits(_WIRE_17, 20, 20) @[csr.scala 493:47]
        _WIRE_16.hpm20 <= _T_229 @[csr.scala 493:47]
        node _T_230 = bits(_WIRE_17, 21, 21) @[csr.scala 493:47]
        _WIRE_16.hpm21 <= _T_230 @[csr.scala 493:47]
        node _T_231 = bits(_WIRE_17, 22, 22) @[csr.scala 493:47]
        _WIRE_16.hpm22 <= _T_231 @[csr.scala 493:47]
        node _T_232 = bits(_WIRE_17, 23, 23) @[csr.scala 493:47]
        _WIRE_16.hpm23 <= _T_232 @[csr.scala 493:47]
        node _T_233 = bits(_WIRE_17, 24, 24) @[csr.scala 493:47]
        _WIRE_16.hpm24 <= _T_233 @[csr.scala 493:47]
        node _T_234 = bits(_WIRE_17, 25, 25) @[csr.scala 493:47]
        _WIRE_16.hpm25 <= _T_234 @[csr.scala 493:47]
        node _T_235 = bits(_WIRE_17, 26, 26) @[csr.scala 493:47]
        _WIRE_16.hpm26 <= _T_235 @[csr.scala 493:47]
        node _T_236 = bits(_WIRE_17, 27, 27) @[csr.scala 493:47]
        _WIRE_16.hpm27 <= _T_236 @[csr.scala 493:47]
        node _T_237 = bits(_WIRE_17, 28, 28) @[csr.scala 493:47]
        _WIRE_16.hpm28 <= _T_237 @[csr.scala 493:47]
        node _T_238 = bits(_WIRE_17, 29, 29) @[csr.scala 493:47]
        _WIRE_16.hpm29 <= _T_238 @[csr.scala 493:47]
        node _T_239 = bits(_WIRE_17, 30, 30) @[csr.scala 493:47]
        _WIRE_16.hpm30 <= _T_239 @[csr.scala 493:47]
        node _T_240 = bits(_WIRE_17, 31, 31) @[csr.scala 493:47]
        _WIRE_16.hpm31 <= _T_240 @[csr.scala 493:47]
        reg_mcounterinhibit.cy <= _WIRE_16.cy @[csr.scala 494:27]
        reg_mcounterinhibit.tmzero <= _WIRE_16.tmzero @[csr.scala 494:27]
        reg_mcounterinhibit.ir <= _WIRE_16.ir @[csr.scala 494:27]
        reg_mcounterinhibit.hpm3 <= _WIRE_16.hpm3 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm4 <= _WIRE_16.hpm4 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm5 <= _WIRE_16.hpm5 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm6 <= _WIRE_16.hpm6 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm7 <= _WIRE_16.hpm7 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm8 <= _WIRE_16.hpm8 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm9 <= _WIRE_16.hpm9 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm10 <= _WIRE_16.hpm10 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm11 <= _WIRE_16.hpm11 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm12 <= _WIRE_16.hpm12 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm13 <= _WIRE_16.hpm13 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm14 <= _WIRE_16.hpm14 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm15 <= _WIRE_16.hpm15 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm16 <= _WIRE_16.hpm16 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm17 <= _WIRE_16.hpm17 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm18 <= _WIRE_16.hpm18 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm19 <= _WIRE_16.hpm19 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm20 <= _WIRE_16.hpm20 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm21 <= _WIRE_16.hpm21 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm22 <= _WIRE_16.hpm22 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm23 <= _WIRE_16.hpm23 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm24 <= _WIRE_16.hpm24 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm25 <= _WIRE_16.hpm25 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm26 <= _WIRE_16.hpm26 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm27 <= _WIRE_16.hpm27 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm28 <= _WIRE_16.hpm28 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm29 <= _WIRE_16.hpm29 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm30 <= _WIRE_16.hpm30 @[csr.scala 494:27]
        reg_mcounterinhibit.hpm31 <= _WIRE_16.hpm31 @[csr.scala 494:27]
        node _T_241 = eq(reg_mcounterinhibit.cy, UInt<1>("h00")) @[csr.scala 495:36]
        when _T_241 : @[csr.scala 495:49]
          when _T_44 : @[csr.scala 527:29]
            node hi_7 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node lo_6 = bits(_T_4, 31, 0) @[csr.scala 527:84]
            node _T_242 = cat(hi_7, lo_6) @[Cat.scala 30:58]
            lo <= _T_242 @[csr.scala 563:11]
            node _hi_T = shr(_T_242, 6) @[csr.scala 564:28]
            hi <= _hi_T @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_28 : @[csr.scala 528:29]
            node hi_8 = bits(_T_4, 63, 32) @[csr.scala 528:51]
            node _T_243 = cat(hi_8, wdata) @[Cat.scala 30:58]
            lo <= _T_243 @[csr.scala 563:11]
            node _hi_T_1 = shr(_T_243, 6) @[csr.scala 564:28]
            hi <= _hi_T_1 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 495:49]
        node _T_244 = eq(reg_mcounterinhibit.ir, UInt<1>("h00")) @[csr.scala 498:36]
        when _T_244 : @[csr.scala 498:48]
          when _T_45 : @[csr.scala 527:29]
            node hi_9 = bits(wdata, 31, 0) @[csr.scala 527:47]
            node lo_7 = bits(_T_9, 31, 0) @[csr.scala 527:84]
            node _T_245 = cat(hi_9, lo_7) @[Cat.scala 30:58]
            lo_1 <= _T_245 @[csr.scala 563:11]
            node _hi_T_2 = shr(_T_245, 6) @[csr.scala 564:28]
            hi_1 <= _hi_T_2 @[csr.scala 564:23]
            skip @[csr.scala 527:29]
          when _T_29 : @[csr.scala 528:29]
            node hi_10 = bits(_T_9, 63, 32) @[csr.scala 528:51]
            node _T_246 = cat(hi_10, wdata) @[Cat.scala 30:58]
            lo_1 <= _T_246 @[csr.scala 563:11]
            node _hi_T_3 = shr(_T_246, 6) @[csr.scala 564:28]
            hi_1 <= _hi_T_3 @[csr.scala 564:23]
            skip @[csr.scala 528:29]
          skip @[csr.scala 498:48]
        skip @[csr.scala 492:48]
      when _T_38 : @[csr.scala 504:41]
        reg_mscratch <= wdata @[csr.scala 504:56]
        skip @[csr.scala 504:41]
      when _T_39 : @[csr.scala 509:41]
        node _T_247 = bits(wdata, 31, 0) @[csr.scala 509:61]
        node _T_248 = dshr(_T_247, UInt<2>("h02")) @[csr.scala 509:70]
        node _T_249 = dshl(_T_248, UInt<2>("h02")) @[csr.scala 509:78]
        reg_mepc <= _T_249 @[csr.scala 509:52]
        skip @[csr.scala 509:41]
      when _T_41 : @[csr.scala 514:41]
        node _T_250 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 515:38]
        node _T_251 = and(_T_250, UInt<32>("h080000000")) @[csr.scala 515:72]
        reg_mcause.interrupt <= _T_251 @[csr.scala 515:28]
        node _T_252 = and(wdata, UInt<32>("h08000001f")) @[csr.scala 516:42]
        node _T_253 = and(_T_252, UInt<31>("h07fffffff")) @[csr.scala 516:76]
        reg_mcause.exceptioncode <= _T_253 @[csr.scala 516:32]
        skip @[csr.scala 514:41]
      when _T_40 : @[csr.scala 520:41]
        node _T_254 = bits(wdata, 31, 0) @[csr.scala 520:61]
        reg_mtval <= _T_254 @[csr.scala 520:53]
        skip @[csr.scala 520:41]
      when _T_43 : @[csr.scala 521:43]
        node _T_255 = bits(wdata, 31, 0) @[csr.scala 521:65]
        reg_medeleg <= _T_255 @[csr.scala 521:57]
        skip @[csr.scala 521:43]
      skip @[csr.scala 412:14]
    
  module ALUControl_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip add : UInt<1>, flip immediate : UInt<1>, flip funct7 : UInt<7>, flip funct3 : UInt<3>, operation : UInt<4>}
    
    io.operation <= UInt<4>("h0f") @[alucontrol.scala 30:16]
    when io.add : @[alucontrol.scala 32:17]
      io.operation <= UInt<2>("h02") @[alucontrol.scala 33:18]
      skip @[alucontrol.scala 32:17]
    else : @[alucontrol.scala 34:16]
      node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
      when _T : @[Conditional.scala 40:58]
        node _T_1 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 37:41]
        node _T_2 = or(io.immediate, _T_1) @[alucontrol.scala 37:28]
        when _T_2 : @[alucontrol.scala 37:59]
          io.operation <= UInt<2>("h02") @[alucontrol.scala 38:24]
          skip @[alucontrol.scala 37:59]
        else : @[alucontrol.scala 39:22]
          io.operation <= UInt<2>("h03") @[alucontrol.scala 40:24]
          skip @[alucontrol.scala 39:22]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_3 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
        when _T_3 : @[Conditional.scala 39:67]
          io.operation <= UInt<3>("h06") @[alucontrol.scala 43:36]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_4 = eq(UInt<2>("h02"), io.funct3) @[Conditional.scala 37:30]
          when _T_4 : @[Conditional.scala 39:67]
            io.operation <= UInt<3>("h04") @[alucontrol.scala 44:36]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_5 = eq(UInt<2>("h03"), io.funct3) @[Conditional.scala 37:30]
            when _T_5 : @[Conditional.scala 39:67]
              io.operation <= UInt<3>("h05") @[alucontrol.scala 45:36]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_6 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
              when _T_6 : @[Conditional.scala 39:67]
                io.operation <= UInt<4>("h09") @[alucontrol.scala 46:36]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_7 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
                when _T_7 : @[Conditional.scala 39:67]
                  node _T_8 = eq(io.funct7, UInt<1>("h00")) @[alucontrol.scala 48:25]
                  when _T_8 : @[alucontrol.scala 48:43]
                    io.operation <= UInt<3>("h07") @[alucontrol.scala 49:24]
                    skip @[alucontrol.scala 48:43]
                  else : @[alucontrol.scala 50:22]
                    io.operation <= UInt<4>("h08") @[alucontrol.scala 51:24]
                    skip @[alucontrol.scala 50:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_9 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
                  when _T_9 : @[Conditional.scala 39:67]
                    io.operation <= UInt<1>("h01") @[alucontrol.scala 54:36]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_10 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
                    when _T_10 : @[Conditional.scala 39:67]
                      io.operation <= UInt<1>("h00") @[alucontrol.scala 55:36]
                      skip @[Conditional.scala 39:67]
      skip @[alucontrol.scala 34:16]
    
  module ALU_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip operation : UInt<4>, flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    io.result <= UInt<1>("h00") @[alu.scala 26:13]
    node _T = eq(UInt<1>("h00"), io.operation) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = and(io.inputx, io.inputy) @[alu.scala 30:30]
      io.result <= _T_1 @[alu.scala 30:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.operation) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = or(io.inputx, io.inputy) @[alu.scala 33:30]
        io.result <= _T_3 @[alu.scala 33:17]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<2>("h02"), io.operation) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = add(io.inputx, io.inputy) @[alu.scala 36:30]
          node _T_6 = tail(_T_5, 1) @[alu.scala 36:30]
          io.result <= _T_6 @[alu.scala 36:17]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_7 = eq(UInt<2>("h03"), io.operation) @[Conditional.scala 37:30]
          when _T_7 : @[Conditional.scala 39:67]
            node _T_8 = sub(io.inputx, io.inputy) @[alu.scala 39:30]
            node _T_9 = tail(_T_8, 1) @[alu.scala 39:30]
            io.result <= _T_9 @[alu.scala 39:17]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_10 = eq(UInt<3>("h04"), io.operation) @[Conditional.scala 37:30]
            when _T_10 : @[Conditional.scala 39:67]
              node _T_11 = asSInt(io.inputx) @[alu.scala 42:31]
              node _T_12 = asSInt(io.inputy) @[alu.scala 42:50]
              node _T_13 = lt(_T_11, _T_12) @[alu.scala 42:38]
              io.result <= _T_13 @[alu.scala 42:17]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h05"), io.operation) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = lt(io.inputx, io.inputy) @[alu.scala 45:31]
                io.result <= _T_15 @[alu.scala 45:17]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_16 = eq(UInt<3>("h06"), io.operation) @[Conditional.scala 37:30]
                when _T_16 : @[Conditional.scala 39:67]
                  node _T_17 = bits(io.inputy, 4, 0) @[alu.scala 48:42]
                  node _T_18 = dshl(io.inputx, _T_17) @[alu.scala 48:30]
                  io.result <= _T_18 @[alu.scala 48:17]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_19 = eq(UInt<3>("h07"), io.operation) @[Conditional.scala 37:30]
                  when _T_19 : @[Conditional.scala 39:67]
                    node _T_20 = bits(io.inputy, 4, 0) @[alu.scala 51:42]
                    node _T_21 = dshr(io.inputx, _T_20) @[alu.scala 51:30]
                    io.result <= _T_21 @[alu.scala 51:17]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_22 = eq(UInt<4>("h08"), io.operation) @[Conditional.scala 37:30]
                    when _T_22 : @[Conditional.scala 39:67]
                      node _T_23 = asSInt(io.inputx) @[alu.scala 54:31]
                      node _T_24 = bits(io.inputy, 4, 0) @[alu.scala 54:50]
                      node _T_25 = dshr(_T_23, _T_24) @[alu.scala 54:38]
                      node _T_26 = asUInt(_T_25) @[alu.scala 54:57]
                      io.result <= _T_26 @[alu.scala 54:17]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_27 = eq(UInt<4>("h09"), io.operation) @[Conditional.scala 37:30]
                      when _T_27 : @[Conditional.scala 39:67]
                        node _T_28 = xor(io.inputx, io.inputy) @[alu.scala 57:30]
                        io.result <= _T_28 @[alu.scala 57:17]
                        skip @[Conditional.scala 39:67]
                      else : @[Conditional.scala 39:67]
                        node _T_29 = eq(UInt<4>("h0a"), io.operation) @[Conditional.scala 37:30]
                        when _T_29 : @[Conditional.scala 39:67]
                          node _T_30 = or(io.inputx, io.inputy) @[alu.scala 60:32]
                          node _T_31 = not(_T_30) @[alu.scala 60:20]
                          io.result <= _T_31 @[alu.scala 60:17]
                          skip @[Conditional.scala 39:67]
    
  module ImmediateGenerator_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, sextImm : UInt<32>}
    
    io.sextImm <= UInt<1>("h00") @[helpers.scala 42:14]
    node opcode = bits(io.instruction, 6, 0) @[helpers.scala 44:30]
    node _T = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node hi = bits(io.instruction, 31, 12) @[helpers.scala 47:31]
      node lo = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
      node _T_1 = cat(hi, lo) @[Cat.scala 30:58]
      io.sextImm <= _T_1 @[helpers.scala 48:18]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<5>("h017"), opcode) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node hi_1 = bits(io.instruction, 31, 12) @[helpers.scala 51:31]
        node lo_1 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
        node _T_3 = cat(hi_1, lo_1) @[Cat.scala 30:58]
        io.sextImm <= _T_3 @[helpers.scala 52:18]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<7>("h06f"), opcode) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node hi_hi = bits(io.instruction, 31, 31) @[helpers.scala 55:35]
          node hi_lo = bits(io.instruction, 19, 12) @[helpers.scala 55:55]
          node lo_hi = bits(io.instruction, 20, 20) @[helpers.scala 56:35]
          node lo_lo = bits(io.instruction, 30, 21) @[helpers.scala 56:55]
          node lo_2 = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
          node hi_2 = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
          node hi_lo_1 = cat(hi_2, lo_2) @[Cat.scala 30:58]
          node _T_5 = bits(hi_lo_1, 19, 19) @[helpers.scala 57:36]
          node _T_6 = bits(_T_5, 0, 0) @[Bitwise.scala 72:15]
          node hi_hi_1 = mux(_T_6, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
          node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
          node _T_7 = cat(hi_3, UInt<1>("h00")) @[Cat.scala 30:58]
          io.sextImm <= _T_7 @[helpers.scala 57:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<7>("h067"), opcode) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node lo_3 = bits(io.instruction, 31, 20) @[helpers.scala 60:31]
            node _T_9 = bits(lo_3, 11, 11) @[helpers.scala 61:36]
            node _T_10 = bits(_T_9, 0, 0) @[Bitwise.scala 72:15]
            node hi_4 = mux(_T_10, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
            node _T_11 = cat(hi_4, lo_3) @[Cat.scala 30:58]
            io.sextImm <= _T_11 @[helpers.scala 61:18]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node hi_hi_2 = bits(io.instruction, 31, 31) @[helpers.scala 64:35]
              node hi_lo_2 = bits(io.instruction, 7, 7) @[helpers.scala 64:55]
              node lo_hi_1 = bits(io.instruction, 30, 25) @[helpers.scala 65:35]
              node lo_lo_1 = bits(io.instruction, 11, 8) @[helpers.scala 65:58]
              node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
              node hi_5 = cat(hi_hi_2, hi_lo_2) @[Cat.scala 30:58]
              node hi_lo_3 = cat(hi_5, lo_4) @[Cat.scala 30:58]
              node _T_13 = bits(hi_lo_3, 11, 11) @[helpers.scala 66:37]
              node _T_14 = bits(_T_13, 0, 0) @[Bitwise.scala 72:15]
              node hi_hi_3 = mux(_T_14, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
              node hi_6 = cat(hi_hi_3, hi_lo_3) @[Cat.scala 30:58]
              node _T_15 = cat(hi_6, UInt<1>("h00")) @[Cat.scala 30:58]
              io.sextImm <= _T_15 @[helpers.scala 66:18]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_16 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
              when _T_16 : @[Conditional.scala 39:67]
                node lo_5 = bits(io.instruction, 31, 20) @[helpers.scala 69:31]
                node _T_17 = bits(lo_5, 11, 11) @[helpers.scala 70:36]
                node _T_18 = bits(_T_17, 0, 0) @[Bitwise.scala 72:15]
                node hi_7 = mux(_T_18, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                node _T_19 = cat(hi_7, lo_5) @[Cat.scala 30:58]
                io.sextImm <= _T_19 @[helpers.scala 70:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_20 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
                when _T_20 : @[Conditional.scala 39:67]
                  node hi_8 = bits(io.instruction, 31, 25) @[helpers.scala 73:35]
                  node lo_6 = bits(io.instruction, 11, 7) @[helpers.scala 73:59]
                  node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
                  node _T_21 = bits(lo_7, 11, 11) @[helpers.scala 74:36]
                  node _T_22 = bits(_T_21, 0, 0) @[Bitwise.scala 72:15]
                  node hi_9 = mux(_T_22, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                  node _T_23 = cat(hi_9, lo_7) @[Cat.scala 30:58]
                  io.sextImm <= _T_23 @[helpers.scala 74:18]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_24 = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
                  when _T_24 : @[Conditional.scala 39:67]
                    node lo_8 = bits(io.instruction, 31, 20) @[helpers.scala 77:31]
                    node _T_25 = bits(lo_8, 11, 11) @[helpers.scala 78:36]
                    node _T_26 = bits(_T_25, 0, 0) @[Bitwise.scala 72:15]
                    node hi_10 = mux(_T_26, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                    node _T_27 = cat(hi_10, lo_8) @[Cat.scala 30:58]
                    io.sextImm <= _T_27 @[helpers.scala 78:18]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_28 = eq(UInt<7>("h073"), opcode) @[Conditional.scala 37:30]
                    when _T_28 : @[Conditional.scala 39:67]
                      node hi_11 = mux(UInt<1>("h00"), UInt<27>("h07ffffff"), UInt<27>("h00")) @[Bitwise.scala 72:12]
                      node lo_9 = bits(io.instruction, 19, 15) @[helpers.scala 81:53]
                      node _T_29 = cat(hi_11, lo_9) @[Cat.scala 30:58]
                      io.sextImm <= _T_29 @[helpers.scala 81:18]
                      skip @[Conditional.scala 39:67]
    
  module BranchControl_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip branch : UInt<1>, flip funct3 : UInt<3>, flip inputx : UInt<32>, flip inputy : UInt<32>, taken : UInt<1>}
    
    io.taken is invalid @[branch-control.scala 27:12]
    wire check : UInt<1> @[branch-control.scala 29:19]
    check is invalid @[branch-control.scala 30:9]
    node _T = eq(UInt<1>("h00"), io.funct3) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(io.inputx, io.inputy) @[branch-control.scala 33:40]
      check <= _T_1 @[branch-control.scala 33:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<1>("h01"), io.funct3) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = neq(io.inputx, io.inputy) @[branch-control.scala 34:40]
        check <= _T_3 @[branch-control.scala 34:26]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<3>("h04"), io.funct3) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = asSInt(io.inputx) @[branch-control.scala 35:40]
          node _T_6 = asSInt(io.inputy) @[branch-control.scala 35:59]
          node _T_7 = lt(_T_5, _T_6) @[branch-control.scala 35:47]
          check <= _T_7 @[branch-control.scala 35:26]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_8 = eq(UInt<3>("h05"), io.funct3) @[Conditional.scala 37:30]
          when _T_8 : @[Conditional.scala 39:67]
            node _T_9 = asSInt(io.inputx) @[branch-control.scala 36:40]
            node _T_10 = asSInt(io.inputy) @[branch-control.scala 36:60]
            node _T_11 = geq(_T_9, _T_10) @[branch-control.scala 36:47]
            check <= _T_11 @[branch-control.scala 36:26]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<3>("h06"), io.funct3) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node _T_13 = lt(io.inputx, io.inputy) @[branch-control.scala 37:40]
              check <= _T_13 @[branch-control.scala 37:26]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h07"), io.funct3) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                node _T_15 = geq(io.inputx, io.inputy) @[branch-control.scala 38:40]
                check <= _T_15 @[branch-control.scala 38:26]
                skip @[Conditional.scala 39:67]
    node _T_16 = and(check, io.branch) @[branch-control.scala 41:21]
    io.taken <= _T_16 @[branch-control.scala 41:12]
    
  module Adder_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module Adder_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip inputx : UInt<32>, flip inputy : UInt<32>, result : UInt<32>}
    
    node _T = add(io.inputx, io.inputy) @[helpers.scala 23:26]
    node _T_1 = tail(_T, 1) @[helpers.scala 23:26]
    io.result <= _T_1 @[helpers.scala 23:13]
    
  module SingleCycleCPU_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip imem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip dmem : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}}
    
    reg pc : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[cpu.scala 17:27]
    inst control of Control_2 @[cpu.scala 18:26]
    control.clock <= clock
    control.reset <= reset
    inst registers of RegisterFile_2 @[cpu.scala 19:26]
    registers.clock <= clock
    registers.reset <= reset
    inst csr of CSRRegFile_2 @[cpu.scala 20:26]
    csr.clock <= clock
    csr.reset <= reset
    inst aluControl of ALUControl_2 @[cpu.scala 21:26]
    aluControl.clock <= clock
    aluControl.reset <= reset
    inst alu of ALU_2 @[cpu.scala 22:26]
    alu.clock <= clock
    alu.reset <= reset
    inst immGen of ImmediateGenerator_2 @[cpu.scala 23:26]
    immGen.clock <= clock
    immGen.reset <= reset
    inst branchCtrl of BranchControl_2 @[cpu.scala 24:26]
    branchCtrl.clock <= clock
    branchCtrl.reset <= reset
    inst pcPlusFour of Adder_4 @[cpu.scala 25:26]
    pcPlusFour.clock <= clock
    pcPlusFour.reset <= reset
    inst branchAdd of Adder_5 @[cpu.scala 26:26]
    branchAdd.clock <= clock
    branchAdd.reset <= reset
    reg cycleCount : UInt<30>, clock with : (reset => (reset, UInt<30>("h00"))) @[Counter.scala 60:40]
    wire wrap : UInt<1>
    wrap <= UInt<1>("h00")
    when UInt<1>("h01") : @[Counter.scala 118:17]
      node wrap_wrap = eq(cycleCount, UInt<30>("h03fffffff")) @[Counter.scala 72:24]
      node _wrap_value_T = add(cycleCount, UInt<1>("h01")) @[Counter.scala 76:24]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[Counter.scala 76:24]
      cycleCount <= _wrap_value_T_1 @[Counter.scala 76:15]
      wrap <= wrap_wrap @[Counter.scala 118:24]
      skip @[Counter.scala 118:17]
    io.imem.address <= pc @[cpu.scala 30:19]
    io.imem.valid <= UInt<1>("h01") @[cpu.scala 31:17]
    pcPlusFour.io.inputx <= pc @[cpu.scala 33:24]
    pcPlusFour.io.inputy <= UInt<3>("h04") @[cpu.scala 34:24]
    node opcode = bits(io.imem.instruction, 6, 0) @[cpu.scala 37:27]
    control.io.opcode <= opcode @[cpu.scala 40:21]
    node _T = bits(io.imem.instruction, 19, 15) @[cpu.scala 42:39]
    registers.io.readreg1 <= _T @[cpu.scala 42:25]
    node _T_1 = bits(io.imem.instruction, 24, 20) @[cpu.scala 43:39]
    registers.io.readreg2 <= _T_1 @[cpu.scala 43:25]
    node _T_2 = bits(io.imem.instruction, 11, 7) @[cpu.scala 45:39]
    registers.io.writereg <= _T_2 @[cpu.scala 45:25]
    node _T_3 = or(control.io.regwrite, csr.io.reg_write) @[cpu.scala 46:49]
    node _T_4 = neq(registers.io.writereg, UInt<1>("h00")) @[cpu.scala 46:96]
    node _T_5 = and(_T_3, _T_4) @[cpu.scala 46:70]
    registers.io.wen <= _T_5 @[cpu.scala 46:25]
    aluControl.io.add <= control.io.add @[cpu.scala 48:27]
    aluControl.io.immediate <= control.io.immediate @[cpu.scala 49:27]
    node _T_6 = bits(io.imem.instruction, 31, 25) @[cpu.scala 50:41]
    aluControl.io.funct7 <= _T_6 @[cpu.scala 50:27]
    node _T_7 = bits(io.imem.instruction, 14, 12) @[cpu.scala 51:41]
    aluControl.io.funct3 <= _T_7 @[cpu.scala 51:27]
    immGen.io.instruction <= io.imem.instruction @[cpu.scala 53:25]
    csr.io.inst <= io.imem.instruction @[cpu.scala 57:15]
    csr.io.immid <= immGen.io.sextImm @[cpu.scala 58:16]
    csr.io.read_data <= registers.io.readdata1 @[cpu.scala 59:20]
    csr.io.retire_inst <= UInt<1>("h01") @[cpu.scala 60:22]
    node _T_8 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 61:26]
    node _T_9 = or(_T_8, csr.io.read_illegal) @[cpu.scala 61:48]
    node _T_10 = or(_T_9, csr.io.write_illegal) @[cpu.scala 61:71]
    node _T_11 = or(_T_10, csr.io.system_illegal) @[cpu.scala 61:95]
    csr.io.illegal_inst <= _T_11 @[cpu.scala 61:23]
    csr.io.pc <= pc @[cpu.scala 62:13]
    branchCtrl.io.branch <= control.io.branch @[cpu.scala 64:24]
    node _T_12 = bits(io.imem.instruction, 14, 12) @[cpu.scala 65:38]
    branchCtrl.io.funct3 <= _T_12 @[cpu.scala 65:24]
    branchCtrl.io.inputx <= registers.io.readdata1 @[cpu.scala 66:24]
    branchCtrl.io.inputy <= registers.io.readdata2 @[cpu.scala 67:24]
    wire alu_inputx : UInt @[cpu.scala 69:24]
    node _T_13 = eq(control.io.alusrc1, UInt<2>("h02")) @[cpu.scala 70:28]
    when _T_13 : @[cpu.scala 70:37]
      alu_inputx <= pc @[cpu.scala 71:16]
      skip @[cpu.scala 70:37]
    else : @[cpu.scala 72:44]
      node _T_14 = eq(control.io.alusrc1, UInt<1>("h01")) @[cpu.scala 72:35]
      when _T_14 : @[cpu.scala 72:44]
        alu_inputx <= UInt<1>("h00") @[cpu.scala 73:16]
        skip @[cpu.scala 72:44]
      else : @[cpu.scala 74:16]
        alu_inputx <= registers.io.readdata1 @[cpu.scala 75:16]
        skip @[cpu.scala 74:16]
    node alu_inputy = mux(control.io.immediate, immGen.io.sextImm, registers.io.readdata2) @[cpu.scala 77:23]
    alu.io.inputx <= alu_inputx @[cpu.scala 78:17]
    alu.io.inputy <= alu_inputy @[cpu.scala 79:17]
    alu.io.operation <= aluControl.io.operation @[cpu.scala 80:20]
    io.dmem.address <= alu.io.result @[cpu.scala 83:21]
    io.dmem.writedata <= registers.io.readdata2 @[cpu.scala 84:21]
    io.dmem.memread <= control.io.memread @[cpu.scala 85:21]
    io.dmem.memwrite <= control.io.memwrite @[cpu.scala 86:21]
    node _T_15 = bits(io.imem.instruction, 13, 12) @[cpu.scala 87:35]
    io.dmem.maskmode <= _T_15 @[cpu.scala 87:21]
    node _T_16 = bits(io.imem.instruction, 14, 14) @[cpu.scala 88:36]
    node _T_17 = not(_T_16) @[cpu.scala 88:24]
    io.dmem.sext <= _T_17 @[cpu.scala 88:21]
    node _T_18 = or(io.dmem.memread, io.dmem.memwrite) @[cpu.scala 89:24]
    when _T_18 : @[cpu.scala 89:45]
      io.dmem.valid <= UInt<1>("h01") @[cpu.scala 90:19]
      skip @[cpu.scala 89:45]
    else : @[cpu.scala 91:16]
      io.dmem.valid <= UInt<1>("h00") @[cpu.scala 92:19]
      skip @[cpu.scala 91:16]
    wire write_data : UInt @[cpu.scala 96:24]
    node _T_19 = eq(control.io.toreg, UInt<1>("h01")) @[cpu.scala 97:26]
    when _T_19 : @[cpu.scala 97:35]
      write_data <= io.dmem.readdata @[cpu.scala 98:16]
      skip @[cpu.scala 97:35]
    else : @[cpu.scala 99:42]
      node _T_20 = eq(control.io.toreg, UInt<2>("h02")) @[cpu.scala 99:33]
      when _T_20 : @[cpu.scala 99:42]
        write_data <= pcPlusFour.io.result @[cpu.scala 100:16]
        skip @[cpu.scala 99:42]
      else : @[cpu.scala 101:42]
        node _T_21 = eq(control.io.toreg, UInt<2>("h03")) @[cpu.scala 101:33]
        when _T_21 : @[cpu.scala 101:42]
          write_data <= csr.io.write_data @[cpu.scala 102:16]
          skip @[cpu.scala 101:42]
        else : @[cpu.scala 103:16]
          write_data <= alu.io.result @[cpu.scala 104:16]
          skip @[cpu.scala 103:16]
    registers.io.writedata <= write_data @[cpu.scala 107:26]
    branchAdd.io.inputx <= pc @[cpu.scala 109:23]
    branchAdd.io.inputy <= immGen.io.sextImm @[cpu.scala 110:23]
    wire next_pc : UInt @[cpu.scala 111:21]
    node _T_22 = eq(control.io.jump, UInt<2>("h02")) @[cpu.scala 112:48]
    node _T_23 = or(branchCtrl.io.taken, _T_22) @[cpu.scala 112:29]
    when _T_23 : @[cpu.scala 112:57]
      next_pc <= branchAdd.io.result @[cpu.scala 113:13]
      skip @[cpu.scala 112:57]
    else : @[cpu.scala 114:41]
      node _T_24 = eq(control.io.jump, UInt<2>("h03")) @[cpu.scala 114:32]
      when _T_24 : @[cpu.scala 114:41]
        node hi = mux(UInt<1>("h01"), UInt<31>("h07fffffff"), UInt<31>("h00")) @[Bitwise.scala 72:12]
        node _T_25 = cat(hi, UInt<1>("h00")) @[Cat.scala 30:58]
        node _T_26 = and(alu.io.result, _T_25) @[cpu.scala 115:30]
        next_pc <= _T_26 @[cpu.scala 115:13]
        skip @[cpu.scala 114:41]
      else : @[cpu.scala 116:54]
        node _T_27 = eq(control.io.validinst, UInt<1>("h00")) @[cpu.scala 116:31]
        node _T_28 = or(csr.io.eret, _T_27) @[cpu.scala 116:28]
        when _T_28 : @[cpu.scala 116:54]
          next_pc <= csr.io.evec @[cpu.scala 117:13]
          skip @[cpu.scala 116:54]
        else : @[cpu.scala 118:16]
          next_pc <= pcPlusFour.io.result @[cpu.scala 119:13]
          skip @[cpu.scala 118:16]
    pc <= next_pc @[cpu.scala 122:6]
    
  module DualPortedCombinMemory_2 : 
    input clock : Clock
    input reset : Reset
    output io : {imem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}, dmem : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    io.imem.request.bits.operation is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.writedata is invalid @[base-memory-components.scala 32:19]
    io.imem.request.bits.address is invalid @[base-memory-components.scala 32:19]
    io.imem.request.valid is invalid @[base-memory-components.scala 32:19]
    io.imem.request.ready is invalid @[base-memory-components.scala 32:19]
    io.dmem.request.bits.operation is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.writedata is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.bits.address is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.valid is invalid @[base-memory-components.scala 33:19]
    io.dmem.request.ready is invalid @[base-memory-components.scala 33:19]
    wire _WIRE : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 36:35]
    _WIRE.bits.data <= UInt<32>("h00") @[base-memory-components.scala 36:35]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 36:35]
    io.imem.response.bits.data <= _WIRE.bits.data @[base-memory-components.scala 36:20]
    io.imem.response.valid <= _WIRE.valid @[base-memory-components.scala 36:20]
    wire _WIRE_1 : {valid : UInt<1>, bits : {data : UInt<32>}} @[base-memory-components.scala 37:35]
    _WIRE_1.bits.data <= UInt<32>("h00") @[base-memory-components.scala 37:35]
    _WIRE_1.valid <= UInt<1>("h00") @[base-memory-components.scala 37:35]
    io.dmem.response.bits.data <= _WIRE_1.bits.data @[base-memory-components.scala 37:20]
    io.dmem.response.valid <= _WIRE_1.valid @[base-memory-components.scala 37:20]
    cmem memory : UInt<32>[16384] @[base-memory-components.scala 39:19]
    io.imem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.imem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.imem.request.valid : @[memory.scala 25:32]
      node _T = eq(io.imem.request.bits.operation, UInt<1>("h00")) @[memory.scala 30:30]
      node _T_1 = asUInt(reset) @[memory.scala 30:11]
      node _T_2 = or(_T, _T_1) @[memory.scala 30:11]
      node _T_3 = eq(_T_2, UInt<1>("h00")) @[memory.scala 30:11]
      when _T_3 : @[memory.scala 30:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:30 assert(request.operation === Read)\n") @[memory.scala 30:11]
        stop(clock, UInt<1>(1), 1) @[memory.scala 30:11]
        skip @[memory.scala 30:11]
      node _T_4 = lt(io.imem.request.bits.address, UInt<17>("h010000")) @[memory.scala 35:27]
      when _T_4 : @[memory.scala 35:37]
        io.imem.response.valid <= UInt<1>("h01") @[memory.scala 36:30]
        node _T_5 = shr(io.imem.request.bits.address, 2) @[memory.scala 37:60]
        node _T_6 = bits(_T_5, 13, 0) @[memory.scala 37:43]
        infer mport MPORT = memory[_T_6], clock @[memory.scala 37:43]
        io.imem.response.bits.data <= MPORT @[memory.scala 37:34]
        skip @[memory.scala 35:37]
      else : @[memory.scala 38:18]
        io.imem.response.valid <= UInt<1>("h00") @[memory.scala 39:30]
        skip @[memory.scala 38:18]
      skip @[memory.scala 25:32]
    else : @[memory.scala 41:16]
      io.imem.response.valid <= UInt<1>("h00") @[memory.scala 42:28]
      skip @[memory.scala 41:16]
    io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 17:27]
    io.dmem.request.ready <= UInt<1>("h01") @[memory.scala 19:26]
    when io.dmem.request.valid : @[memory.scala 52:32]
      node _T_7 = neq(io.dmem.request.bits.operation, UInt<1>("h01")) @[memory.scala 56:31]
      node _T_8 = asUInt(reset) @[memory.scala 56:12]
      node _T_9 = or(_T_7, _T_8) @[memory.scala 56:12]
      node _T_10 = eq(_T_9, UInt<1>("h00")) @[memory.scala 56:12]
      when _T_10 : @[memory.scala 56:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:56 assert (request.operation =/= Write)\n") @[memory.scala 56:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 56:12]
        skip @[memory.scala 56:12]
      node _T_11 = lt(io.dmem.request.bits.address, UInt<17>("h010000")) @[memory.scala 58:29]
      node _T_12 = asUInt(reset) @[memory.scala 58:12]
      node _T_13 = or(_T_11, _T_12) @[memory.scala 58:12]
      node _T_14 = eq(_T_13, UInt<1>("h00")) @[memory.scala 58:12]
      when _T_14 : @[memory.scala 58:12]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory.scala:58 assert (request.address < size.U)\n") @[memory.scala 58:12]
        stop(clock, UInt<1>(1), 1) @[memory.scala 58:12]
        skip @[memory.scala 58:12]
      node _T_15 = shr(io.dmem.request.bits.address, 2) @[memory.scala 61:58]
      node _T_16 = bits(_T_15, 13, 0) @[memory.scala 61:46]
      read mport MPORT_1 = memory[_T_16], clock @[memory.scala 61:46]
      io.dmem.response.bits.data <= MPORT_1 @[memory.scala 61:32]
      io.dmem.response.valid <= UInt<1>("h01") @[memory.scala 62:28]
      node _T_17 = eq(io.dmem.request.bits.operation, UInt<2>("h02")) @[memory.scala 65:29]
      when _T_17 : @[memory.scala 65:44]
        node _T_18 = shr(io.dmem.request.bits.address, 2) @[memory.scala 66:25]
        node _T_19 = bits(_T_18, 13, 0) @[memory.scala 66:13]
        infer mport MPORT_2 = memory[_T_19], clock @[memory.scala 66:13]
        MPORT_2 <= io.dmem.request.bits.writedata @[memory.scala 66:31]
        skip @[memory.scala 65:44]
      skip @[memory.scala 52:32]
    else : @[memory.scala 68:16]
      io.dmem.response.valid <= UInt<1>("h00") @[memory.scala 69:28]
      skip @[memory.scala 68:16]
    
  module ICombinMemPort_2 : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _WIRE : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, instruction : UInt<32>} @[base-memory-components.scala 52:31]
    _WIRE.instruction <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    _WIRE.good <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 52:31]
    _WIRE.address <= UInt<32>("h00") @[base-memory-components.scala 52:31]
    io.pipeline.instruction <= _WIRE.instruction @[base-memory-components.scala 52:15]
    io.pipeline.good <= _WIRE.good @[base-memory-components.scala 52:15]
    _WIRE.valid <= io.pipeline.valid @[base-memory-components.scala 52:15]
    _WIRE.address <= io.pipeline.address @[base-memory-components.scala 52:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 57:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 57:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 57:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 57:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 57:15]
    when io.pipeline.valid : @[memory-combin-ports.scala 16:28]
      wire _WIRE_1 : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>} @[memory-combin-ports.scala 17:23]
      _WIRE_1.address <= io.pipeline.address @[memory-combin-ports.scala 18:23]
      _WIRE_1.operation <= UInt<1>("h00") @[memory-combin-ports.scala 19:23]
      _WIRE_1.writedata <= UInt<1>("h00") @[memory-combin-ports.scala 20:23]
      io.bus.request.bits.operation <= _WIRE_1.operation @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.writedata <= _WIRE_1.writedata @[memory-combin-ports.scala 22:26]
      io.bus.request.bits.address <= _WIRE_1.address @[memory-combin-ports.scala 22:26]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 23:26]
      skip @[memory-combin-ports.scala 16:28]
    else : @[memory-combin-ports.scala 24:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 25:26]
      skip @[memory-combin-ports.scala 24:16]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 29:20]
    io.pipeline.instruction <= io.bus.response.bits.data @[memory-combin-ports.scala 30:27]
    
  module DCombinMemPort_2 : 
    input clock : Clock
    input reset : Reset
    output io : {pipeline : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}, flip bus : {flip request : {flip ready : UInt<1>, valid : UInt<1>, bits : {address : UInt<32>, writedata : UInt<32>, operation : UInt<2>}}, response : {valid : UInt<1>, bits : {data : UInt<32>}}}}
    
    wire _WIRE : {flip address : UInt<32>, flip valid : UInt<1>, good : UInt<1>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>} @[base-memory-components.scala 69:31]
    _WIRE.readdata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _WIRE.sext <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.maskmode <= UInt<2>("h00") @[base-memory-components.scala 69:31]
    _WIRE.memwrite <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.memread <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.writedata <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    _WIRE.good <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.valid <= UInt<1>("h00") @[base-memory-components.scala 69:31]
    _WIRE.address <= UInt<32>("h00") @[base-memory-components.scala 69:31]
    io.pipeline.readdata <= _WIRE.readdata @[base-memory-components.scala 69:15]
    _WIRE.sext <= io.pipeline.sext @[base-memory-components.scala 69:15]
    _WIRE.maskmode <= io.pipeline.maskmode @[base-memory-components.scala 69:15]
    _WIRE.memwrite <= io.pipeline.memwrite @[base-memory-components.scala 69:15]
    _WIRE.memread <= io.pipeline.memread @[base-memory-components.scala 69:15]
    _WIRE.writedata <= io.pipeline.writedata @[base-memory-components.scala 69:15]
    io.pipeline.good <= _WIRE.good @[base-memory-components.scala 69:15]
    _WIRE.valid <= io.pipeline.valid @[base-memory-components.scala 69:15]
    _WIRE.address <= io.pipeline.address @[base-memory-components.scala 69:15]
    io.bus.response.bits.data is invalid @[base-memory-components.scala 74:15]
    io.bus.response.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.operation is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.writedata is invalid @[base-memory-components.scala 74:15]
    io.bus.request.bits.address is invalid @[base-memory-components.scala 74:15]
    io.bus.request.valid is invalid @[base-memory-components.scala 74:15]
    io.bus.request.ready is invalid @[base-memory-components.scala 74:15]
    io.pipeline.good <= io.bus.response.valid @[base-memory-components.scala 76:20]
    io.pipeline.good <= UInt<1>("h01") @[memory-combin-ports.scala 39:20]
    node _T = or(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 41:51]
    node _T_1 = and(io.pipeline.valid, _T) @[memory-combin-ports.scala 41:27]
    when _T_1 : @[memory-combin-ports.scala 41:77]
      node _T_2 = and(io.pipeline.memread, io.pipeline.memwrite) @[memory-combin-ports.scala 43:34]
      node _T_3 = eq(_T_2, UInt<1>("h00")) @[memory-combin-ports.scala 43:12]
      node _T_4 = asUInt(reset) @[memory-combin-ports.scala 43:11]
      node _T_5 = or(_T_3, _T_4) @[memory-combin-ports.scala 43:11]
      node _T_6 = eq(_T_5, UInt<1>("h00")) @[memory-combin-ports.scala 43:11]
      when _T_6 : @[memory-combin-ports.scala 43:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at memory-combin-ports.scala:43 assert(!(io.pipeline.memread && io.pipeline.memwrite))\n") @[memory-combin-ports.scala 43:11]
        stop(clock, UInt<1>(1), 1) @[memory-combin-ports.scala 43:11]
        skip @[memory-combin-ports.scala 43:11]
      io.bus.request.bits.address <= io.pipeline.address @[memory-combin-ports.scala 45:33]
      io.bus.request.valid <= UInt<1>("h01") @[memory-combin-ports.scala 46:26]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 48:33]
        io.bus.request.bits.operation <= UInt<2>("h02") @[memory-combin-ports.scala 57:37]
        skip @[memory-combin-ports.scala 48:33]
      else : @[memory-combin-ports.scala 58:18]
        io.bus.request.bits.operation <= UInt<1>("h00") @[memory-combin-ports.scala 60:37]
        skip @[memory-combin-ports.scala 58:18]
      skip @[memory-combin-ports.scala 41:77]
    else : @[memory-combin-ports.scala 62:16]
      io.bus.request.valid <= UInt<1>("h00") @[memory-combin-ports.scala 64:26]
      skip @[memory-combin-ports.scala 62:16]
    when io.bus.response.valid : @[memory-combin-ports.scala 68:32]
      when io.pipeline.memwrite : @[memory-combin-ports.scala 69:33]
        wire _WIRE_1 : UInt<32> @[memory-combin-ports.scala 71:28]
        node _T_7 = neq(io.pipeline.maskmode, UInt<2>("h02")) @[memory-combin-ports.scala 74:34]
        when _T_7 : @[memory-combin-ports.scala 74:43]
          node _T_8 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 76:42]
          wire _WIRE_2 : UInt<32> @[memory-combin-ports.scala 77:29]
          _WIRE_2 <= io.bus.response.bits.data @[memory-combin-ports.scala 79:18]
          node _T_9 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 82:36]
          when _T_9 : @[memory-combin-ports.scala 82:45]
            node _T_10 = eq(_T_8, UInt<1>("h00")) @[memory-combin-ports.scala 83:23]
            when _T_10 : @[memory-combin-ports.scala 83:32]
              node hi = bits(_WIRE_2, 31, 8) @[memory-combin-ports.scala 84:38]
              node lo = bits(io.pipeline.writedata, 7, 0) @[memory-combin-ports.scala 84:67]
              node _T_11 = cat(hi, lo) @[Cat.scala 30:58]
              _WIRE_1 <= _T_11 @[memory-combin-ports.scala 84:23]
              skip @[memory-combin-ports.scala 83:32]
            else : @[memory-combin-ports.scala 85:38]
              node _T_12 = eq(_T_8, UInt<1>("h01")) @[memory-combin-ports.scala 85:29]
              when _T_12 : @[memory-combin-ports.scala 85:38]
                node hi_1 = bits(_WIRE_2, 31, 16) @[memory-combin-ports.scala 86:38]
                node hi_2 = bits(io.pipeline.writedata, 15, 8) @[memory-combin-ports.scala 86:72]
                node lo_1 = bits(_WIRE_2, 7, 0) @[memory-combin-ports.scala 86:88]
                node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
                node _T_13 = cat(hi_1, lo_2) @[Cat.scala 30:58]
                _WIRE_1 <= _T_13 @[memory-combin-ports.scala 86:23]
                skip @[memory-combin-ports.scala 85:38]
              else : @[memory-combin-ports.scala 87:38]
                node _T_14 = eq(_T_8, UInt<2>("h02")) @[memory-combin-ports.scala 87:29]
                when _T_14 : @[memory-combin-ports.scala 87:38]
                  node hi_3 = bits(_WIRE_2, 31, 24) @[memory-combin-ports.scala 88:38]
                  node hi_4 = bits(io.pipeline.writedata, 23, 16) @[memory-combin-ports.scala 88:72]
                  node lo_3 = bits(_WIRE_2, 15, 0) @[memory-combin-ports.scala 88:88]
                  node lo_4 = cat(hi_4, lo_3) @[Cat.scala 30:58]
                  node _T_15 = cat(hi_3, lo_4) @[Cat.scala 30:58]
                  _WIRE_1 <= _T_15 @[memory-combin-ports.scala 88:23]
                  skip @[memory-combin-ports.scala 87:38]
                else : @[memory-combin-ports.scala 89:23]
                  node hi_5 = bits(io.pipeline.writedata, 31, 24) @[memory-combin-ports.scala 90:51]
                  node lo_5 = bits(_WIRE_2, 23, 0) @[memory-combin-ports.scala 90:68]
                  node _T_16 = cat(hi_5, lo_5) @[Cat.scala 30:58]
                  _WIRE_1 <= _T_16 @[memory-combin-ports.scala 90:23]
                  skip @[memory-combin-ports.scala 89:23]
            skip @[memory-combin-ports.scala 82:45]
          else : @[memory-combin-ports.scala 92:22]
            node _T_17 = eq(_T_8, UInt<1>("h00")) @[memory-combin-ports.scala 93:24]
            when _T_17 : @[memory-combin-ports.scala 93:33]
              node hi_6 = bits(_WIRE_2, 31, 16) @[memory-combin-ports.scala 94:38]
              node lo_6 = bits(io.pipeline.writedata, 15, 0) @[memory-combin-ports.scala 94:67]
              node _T_18 = cat(hi_6, lo_6) @[Cat.scala 30:58]
              _WIRE_1 <= _T_18 @[memory-combin-ports.scala 94:23]
              skip @[memory-combin-ports.scala 93:33]
            else : @[memory-combin-ports.scala 95:23]
              node hi_7 = bits(io.pipeline.writedata, 31, 16) @[memory-combin-ports.scala 96:51]
              node lo_7 = bits(_WIRE_2, 15, 0) @[memory-combin-ports.scala 96:68]
              node _T_19 = cat(hi_7, lo_7) @[Cat.scala 30:58]
              _WIRE_1 <= _T_19 @[memory-combin-ports.scala 96:23]
              skip @[memory-combin-ports.scala 95:23]
            skip @[memory-combin-ports.scala 92:22]
          skip @[memory-combin-ports.scala 74:43]
        else : @[memory-combin-ports.scala 99:20]
          _WIRE_1 <= io.pipeline.writedata @[memory-combin-ports.scala 101:19]
          skip @[memory-combin-ports.scala 99:20]
        io.bus.request.bits.writedata <= _WIRE_1 @[memory-combin-ports.scala 104:37]
        skip @[memory-combin-ports.scala 69:33]
      else : @[memory-combin-ports.scala 105:39]
        when io.pipeline.memread : @[memory-combin-ports.scala 105:39]
          wire _WIRE_3 : UInt<32> @[memory-combin-ports.scala 107:36]
          wire _WIRE_4 : UInt<32> @[memory-combin-ports.scala 108:36]
          node _T_20 = bits(io.pipeline.address, 1, 0) @[memory-combin-ports.scala 110:39]
          node _T_21 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 111:34]
          when _T_21 : @[memory-combin-ports.scala 111:43]
            node _T_22 = mul(_T_20, UInt<4>("h08")) @[memory-combin-ports.scala 113:64]
            node _T_23 = dshr(io.bus.response.bits.data, _T_22) @[memory-combin-ports.scala 113:53]
            node _T_24 = and(_T_23, UInt<8>("h0ff")) @[memory-combin-ports.scala 113:72]
            _WIRE_3 <= _T_24 @[memory-combin-ports.scala 113:23]
            skip @[memory-combin-ports.scala 111:43]
          else : @[memory-combin-ports.scala 114:50]
            node _T_25 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 114:41]
            when _T_25 : @[memory-combin-ports.scala 114:50]
              node _T_26 = mul(_T_20, UInt<4>("h08")) @[memory-combin-ports.scala 116:64]
              node _T_27 = dshr(io.bus.response.bits.data, _T_26) @[memory-combin-ports.scala 116:53]
              node _T_28 = and(_T_27, UInt<16>("h0ffff")) @[memory-combin-ports.scala 116:72]
              _WIRE_3 <= _T_28 @[memory-combin-ports.scala 116:23]
              skip @[memory-combin-ports.scala 114:50]
            else : @[memory-combin-ports.scala 117:20]
              _WIRE_3 <= io.bus.response.bits.data @[memory-combin-ports.scala 118:23]
              skip @[memory-combin-ports.scala 117:20]
          when io.pipeline.sext : @[memory-combin-ports.scala 121:31]
            node _T_29 = eq(io.pipeline.maskmode, UInt<1>("h00")) @[memory-combin-ports.scala 122:36]
            when _T_29 : @[memory-combin-ports.scala 122:45]
              node _T_30 = bits(_WIRE_3, 7, 7) @[memory-combin-ports.scala 124:59]
              node _T_31 = bits(_T_30, 0, 0) @[Bitwise.scala 72:15]
              node hi_8 = mux(_T_31, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
              node lo_8 = bits(_WIRE_3, 7, 0) @[memory-combin-ports.scala 124:79]
              node _T_32 = cat(hi_8, lo_8) @[Cat.scala 30:58]
              _WIRE_4 <= _T_32 @[memory-combin-ports.scala 124:30]
              skip @[memory-combin-ports.scala 122:45]
            else : @[memory-combin-ports.scala 125:52]
              node _T_33 = eq(io.pipeline.maskmode, UInt<1>("h01")) @[memory-combin-ports.scala 125:43]
              when _T_33 : @[memory-combin-ports.scala 125:52]
                node _T_34 = bits(_WIRE_3, 15, 15) @[memory-combin-ports.scala 127:59]
                node _T_35 = bits(_T_34, 0, 0) @[Bitwise.scala 72:15]
                node hi_9 = mux(_T_35, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                node lo_9 = bits(_WIRE_3, 15, 0) @[memory-combin-ports.scala 127:79]
                node _T_36 = cat(hi_9, lo_9) @[Cat.scala 30:58]
                _WIRE_4 <= _T_36 @[memory-combin-ports.scala 127:30]
                skip @[memory-combin-ports.scala 125:52]
              else : @[memory-combin-ports.scala 128:22]
                _WIRE_4 <= _WIRE_3 @[memory-combin-ports.scala 130:30]
                skip @[memory-combin-ports.scala 128:22]
            skip @[memory-combin-ports.scala 121:31]
          else : @[memory-combin-ports.scala 132:20]
            _WIRE_4 <= _WIRE_3 @[memory-combin-ports.scala 133:28]
            skip @[memory-combin-ports.scala 132:20]
          io.pipeline.readdata <= _WIRE_4 @[memory-combin-ports.scala 136:28]
          skip @[memory-combin-ports.scala 105:39]
      skip @[memory-combin-ports.scala 68:32]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {success : UInt<1>}
    
    io.success is invalid @[top.scala 16:14]
    inst SingleCycleCPU of SingleCycleCPU @[top.scala 20:22]
    SingleCycleCPU.clock <= clock
    SingleCycleCPU.reset <= reset
    inst DualPortedCombinMemory of DualPortedCombinMemory @[top.scala 21:22]
    DualPortedCombinMemory.clock <= clock
    DualPortedCombinMemory.reset <= reset
    inst ICombinMemPort of ICombinMemPort @[top.scala 23:22]
    ICombinMemPort.clock <= clock
    ICombinMemPort.reset <= reset
    inst DCombinMemPort of DCombinMemPort @[top.scala 24:22]
    DCombinMemPort.clock <= clock
    DCombinMemPort.reset <= reset
    DualPortedCombinMemory.io.imem.request.bits.operation <= ICombinMemPort.io.bus.request.bits.operation @[base-memory-components.scala 16:26]
    DualPortedCombinMemory.io.imem.request.bits.writedata <= ICombinMemPort.io.bus.request.bits.writedata @[base-memory-components.scala 16:26]
    DualPortedCombinMemory.io.imem.request.bits.address <= ICombinMemPort.io.bus.request.bits.address @[base-memory-components.scala 16:26]
    DualPortedCombinMemory.io.imem.request.valid <= ICombinMemPort.io.bus.request.valid @[base-memory-components.scala 16:26]
    ICombinMemPort.io.bus.request.ready <= DualPortedCombinMemory.io.imem.request.ready @[base-memory-components.scala 16:26]
    ICombinMemPort.io.bus.response.bits.data <= DualPortedCombinMemory.io.imem.response.bits.data @[base-memory-components.scala 17:26]
    ICombinMemPort.io.bus.response.valid <= DualPortedCombinMemory.io.imem.response.valid @[base-memory-components.scala 17:26]
    DualPortedCombinMemory.io.dmem.request.bits.operation <= DCombinMemPort.io.bus.request.bits.operation @[base-memory-components.scala 19:26]
    DualPortedCombinMemory.io.dmem.request.bits.writedata <= DCombinMemPort.io.bus.request.bits.writedata @[base-memory-components.scala 19:26]
    DualPortedCombinMemory.io.dmem.request.bits.address <= DCombinMemPort.io.bus.request.bits.address @[base-memory-components.scala 19:26]
    DualPortedCombinMemory.io.dmem.request.valid <= DCombinMemPort.io.bus.request.valid @[base-memory-components.scala 19:26]
    DCombinMemPort.io.bus.request.ready <= DualPortedCombinMemory.io.dmem.request.ready @[base-memory-components.scala 19:26]
    DCombinMemPort.io.bus.response.bits.data <= DualPortedCombinMemory.io.dmem.response.bits.data @[base-memory-components.scala 20:26]
    DCombinMemPort.io.bus.response.valid <= DualPortedCombinMemory.io.dmem.response.valid @[base-memory-components.scala 20:26]
    SingleCycleCPU.io.imem.instruction <= ICombinMemPort.io.pipeline.instruction @[top.scala 27:17]
    SingleCycleCPU.io.imem.good <= ICombinMemPort.io.pipeline.good @[top.scala 27:17]
    ICombinMemPort.io.pipeline.valid <= SingleCycleCPU.io.imem.valid @[top.scala 27:17]
    ICombinMemPort.io.pipeline.address <= SingleCycleCPU.io.imem.address @[top.scala 27:17]
    SingleCycleCPU.io.dmem.readdata <= DCombinMemPort.io.pipeline.readdata @[top.scala 28:17]
    DCombinMemPort.io.pipeline.sext <= SingleCycleCPU.io.dmem.sext @[top.scala 28:17]
    DCombinMemPort.io.pipeline.maskmode <= SingleCycleCPU.io.dmem.maskmode @[top.scala 28:17]
    DCombinMemPort.io.pipeline.memwrite <= SingleCycleCPU.io.dmem.memwrite @[top.scala 28:17]
    DCombinMemPort.io.pipeline.memread <= SingleCycleCPU.io.dmem.memread @[top.scala 28:17]
    DCombinMemPort.io.pipeline.writedata <= SingleCycleCPU.io.dmem.writedata @[top.scala 28:17]
    SingleCycleCPU.io.dmem.good <= DCombinMemPort.io.pipeline.good @[top.scala 28:17]
    DCombinMemPort.io.pipeline.valid <= SingleCycleCPU.io.dmem.valid @[top.scala 28:17]
    DCombinMemPort.io.pipeline.address <= SingleCycleCPU.io.dmem.address @[top.scala 28:17]
    inst SingleCycleCPU_1 of SingleCycleCPU_1 @[top.scala 20:22]
    SingleCycleCPU_1.clock <= clock
    SingleCycleCPU_1.reset <= reset
    inst DualPortedCombinMemory_1 of DualPortedCombinMemory_1 @[top.scala 21:22]
    DualPortedCombinMemory_1.clock <= clock
    DualPortedCombinMemory_1.reset <= reset
    inst ICombinMemPort_1 of ICombinMemPort_1 @[top.scala 23:22]
    ICombinMemPort_1.clock <= clock
    ICombinMemPort_1.reset <= reset
    inst DCombinMemPort_1 of DCombinMemPort_1 @[top.scala 24:22]
    DCombinMemPort_1.clock <= clock
    DCombinMemPort_1.reset <= reset
    DualPortedCombinMemory_1.io.imem.request.bits.operation <= ICombinMemPort_1.io.bus.request.bits.operation @[base-memory-components.scala 16:26]
    DualPortedCombinMemory_1.io.imem.request.bits.writedata <= ICombinMemPort_1.io.bus.request.bits.writedata @[base-memory-components.scala 16:26]
    DualPortedCombinMemory_1.io.imem.request.bits.address <= ICombinMemPort_1.io.bus.request.bits.address @[base-memory-components.scala 16:26]
    DualPortedCombinMemory_1.io.imem.request.valid <= ICombinMemPort_1.io.bus.request.valid @[base-memory-components.scala 16:26]
    ICombinMemPort_1.io.bus.request.ready <= DualPortedCombinMemory_1.io.imem.request.ready @[base-memory-components.scala 16:26]
    ICombinMemPort_1.io.bus.response.bits.data <= DualPortedCombinMemory_1.io.imem.response.bits.data @[base-memory-components.scala 17:26]
    ICombinMemPort_1.io.bus.response.valid <= DualPortedCombinMemory_1.io.imem.response.valid @[base-memory-components.scala 17:26]
    DualPortedCombinMemory_1.io.dmem.request.bits.operation <= DCombinMemPort_1.io.bus.request.bits.operation @[base-memory-components.scala 19:26]
    DualPortedCombinMemory_1.io.dmem.request.bits.writedata <= DCombinMemPort_1.io.bus.request.bits.writedata @[base-memory-components.scala 19:26]
    DualPortedCombinMemory_1.io.dmem.request.bits.address <= DCombinMemPort_1.io.bus.request.bits.address @[base-memory-components.scala 19:26]
    DualPortedCombinMemory_1.io.dmem.request.valid <= DCombinMemPort_1.io.bus.request.valid @[base-memory-components.scala 19:26]
    DCombinMemPort_1.io.bus.request.ready <= DualPortedCombinMemory_1.io.dmem.request.ready @[base-memory-components.scala 19:26]
    DCombinMemPort_1.io.bus.response.bits.data <= DualPortedCombinMemory_1.io.dmem.response.bits.data @[base-memory-components.scala 20:26]
    DCombinMemPort_1.io.bus.response.valid <= DualPortedCombinMemory_1.io.dmem.response.valid @[base-memory-components.scala 20:26]
    SingleCycleCPU_1.io.imem.instruction <= ICombinMemPort_1.io.pipeline.instruction @[top.scala 27:17]
    SingleCycleCPU_1.io.imem.good <= ICombinMemPort_1.io.pipeline.good @[top.scala 27:17]
    ICombinMemPort_1.io.pipeline.valid <= SingleCycleCPU_1.io.imem.valid @[top.scala 27:17]
    ICombinMemPort_1.io.pipeline.address <= SingleCycleCPU_1.io.imem.address @[top.scala 27:17]
    SingleCycleCPU_1.io.dmem.readdata <= DCombinMemPort_1.io.pipeline.readdata @[top.scala 28:17]
    DCombinMemPort_1.io.pipeline.sext <= SingleCycleCPU_1.io.dmem.sext @[top.scala 28:17]
    DCombinMemPort_1.io.pipeline.maskmode <= SingleCycleCPU_1.io.dmem.maskmode @[top.scala 28:17]
    DCombinMemPort_1.io.pipeline.memwrite <= SingleCycleCPU_1.io.dmem.memwrite @[top.scala 28:17]
    DCombinMemPort_1.io.pipeline.memread <= SingleCycleCPU_1.io.dmem.memread @[top.scala 28:17]
    DCombinMemPort_1.io.pipeline.writedata <= SingleCycleCPU_1.io.dmem.writedata @[top.scala 28:17]
    SingleCycleCPU_1.io.dmem.good <= DCombinMemPort_1.io.pipeline.good @[top.scala 28:17]
    DCombinMemPort_1.io.pipeline.valid <= SingleCycleCPU_1.io.dmem.valid @[top.scala 28:17]
    DCombinMemPort_1.io.pipeline.address <= SingleCycleCPU_1.io.dmem.address @[top.scala 28:17]
    inst SingleCycleCPU_2 of SingleCycleCPU_2 @[top.scala 20:22]
    SingleCycleCPU_2.clock <= clock
    SingleCycleCPU_2.reset <= reset
    inst DualPortedCombinMemory_2 of DualPortedCombinMemory_2 @[top.scala 21:22]
    DualPortedCombinMemory_2.clock <= clock
    DualPortedCombinMemory_2.reset <= reset
    inst ICombinMemPort_2 of ICombinMemPort_2 @[top.scala 23:22]
    ICombinMemPort_2.clock <= clock
    ICombinMemPort_2.reset <= reset
    inst DCombinMemPort_2 of DCombinMemPort_2 @[top.scala 24:22]
    DCombinMemPort_2.clock <= clock
    DCombinMemPort_2.reset <= reset
    DualPortedCombinMemory_2.io.imem.request.bits.operation <= ICombinMemPort_2.io.bus.request.bits.operation @[base-memory-components.scala 16:26]
    DualPortedCombinMemory_2.io.imem.request.bits.writedata <= ICombinMemPort_2.io.bus.request.bits.writedata @[base-memory-components.scala 16:26]
    DualPortedCombinMemory_2.io.imem.request.bits.address <= ICombinMemPort_2.io.bus.request.bits.address @[base-memory-components.scala 16:26]
    DualPortedCombinMemory_2.io.imem.request.valid <= ICombinMemPort_2.io.bus.request.valid @[base-memory-components.scala 16:26]
    ICombinMemPort_2.io.bus.request.ready <= DualPortedCombinMemory_2.io.imem.request.ready @[base-memory-components.scala 16:26]
    ICombinMemPort_2.io.bus.response.bits.data <= DualPortedCombinMemory_2.io.imem.response.bits.data @[base-memory-components.scala 17:26]
    ICombinMemPort_2.io.bus.response.valid <= DualPortedCombinMemory_2.io.imem.response.valid @[base-memory-components.scala 17:26]
    DualPortedCombinMemory_2.io.dmem.request.bits.operation <= DCombinMemPort_2.io.bus.request.bits.operation @[base-memory-components.scala 19:26]
    DualPortedCombinMemory_2.io.dmem.request.bits.writedata <= DCombinMemPort_2.io.bus.request.bits.writedata @[base-memory-components.scala 19:26]
    DualPortedCombinMemory_2.io.dmem.request.bits.address <= DCombinMemPort_2.io.bus.request.bits.address @[base-memory-components.scala 19:26]
    DualPortedCombinMemory_2.io.dmem.request.valid <= DCombinMemPort_2.io.bus.request.valid @[base-memory-components.scala 19:26]
    DCombinMemPort_2.io.bus.request.ready <= DualPortedCombinMemory_2.io.dmem.request.ready @[base-memory-components.scala 19:26]
    DCombinMemPort_2.io.bus.response.bits.data <= DualPortedCombinMemory_2.io.dmem.response.bits.data @[base-memory-components.scala 20:26]
    DCombinMemPort_2.io.bus.response.valid <= DualPortedCombinMemory_2.io.dmem.response.valid @[base-memory-components.scala 20:26]
    SingleCycleCPU_2.io.imem.instruction <= ICombinMemPort_2.io.pipeline.instruction @[top.scala 27:17]
    SingleCycleCPU_2.io.imem.good <= ICombinMemPort_2.io.pipeline.good @[top.scala 27:17]
    ICombinMemPort_2.io.pipeline.valid <= SingleCycleCPU_2.io.imem.valid @[top.scala 27:17]
    ICombinMemPort_2.io.pipeline.address <= SingleCycleCPU_2.io.imem.address @[top.scala 27:17]
    SingleCycleCPU_2.io.dmem.readdata <= DCombinMemPort_2.io.pipeline.readdata @[top.scala 28:17]
    DCombinMemPort_2.io.pipeline.sext <= SingleCycleCPU_2.io.dmem.sext @[top.scala 28:17]
    DCombinMemPort_2.io.pipeline.maskmode <= SingleCycleCPU_2.io.dmem.maskmode @[top.scala 28:17]
    DCombinMemPort_2.io.pipeline.memwrite <= SingleCycleCPU_2.io.dmem.memwrite @[top.scala 28:17]
    DCombinMemPort_2.io.pipeline.memread <= SingleCycleCPU_2.io.dmem.memread @[top.scala 28:17]
    DCombinMemPort_2.io.pipeline.writedata <= SingleCycleCPU_2.io.dmem.writedata @[top.scala 28:17]
    SingleCycleCPU_2.io.dmem.good <= DCombinMemPort_2.io.pipeline.good @[top.scala 28:17]
    DCombinMemPort_2.io.pipeline.valid <= SingleCycleCPU_2.io.dmem.valid @[top.scala 28:17]
    DCombinMemPort_2.io.pipeline.address <= SingleCycleCPU_2.io.dmem.address @[top.scala 28:17]
    
